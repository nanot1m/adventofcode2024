{"mappings":"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O,C,Y,I,G,E,E,O,C,c,I,G,E,E,O,C,c,I,G,E,E,O,C,a,I,G,E,E,O,C,c,I,G,E,E,O,C,S,I,G,E,E,O,C,M,I,G,E,E,O,C,U,I,G,E,E,O,C,W,I,G,E,E,O,C,kB,I,G,E,E,O,C,iB,I,G,E,E,O,C,Q,I,G,E,E,O,C,S,I,G,E,E,O,C,sB,I,G,E,E,O,C,M,I,G,E,E,O,C,M,I,G,E,E,O,C,e,IAwRO,SAAS,EAAa,CAAE,CAAE,CAAK,CAAE,EAAS,EAAE,CAAE,EAAU,EAAE,CAAE,EAAQ,CAAC,EAC3E,GAAI,AAAU,IAAV,EAAa,CAChB,EAAO,IAAI,CAAC,IAAI,EAAQ,EACxB,MACD,CACA,IAAK,IAAI,EAAI,EAAO,EAAI,EAAG,MAAM,CAAE,IAClC,EAAQ,IAAI,CAAC,CAAE,CAAC,EAAE,EAClB,EAAa,EAAI,EAAQ,EAAG,EAAQ,EAAS,EAAI,GACjD,EAAQ,GAAG,GAEZ,OAAO,CACR,G,E,E,O,C,uB,I,G,E,E,O,C,W,I,G,E,E,O,C,Y,I,G,E,E,O,C,W,I,G,E,E,O,C,Y,I,G,E,E,O,C,a,I,G,E,E,O,C,W,I,G,E,E,O,C,c,I,G,E,E,O,C,e,I,G,E,E,O,C,Y,I,G,E,S,I,E,E,SAtZO,SAAS,EAAG,CAAC,EACnB,OAAO,CACR,CAQO,SAAS,EAAM,CAAE,CAAE,CAAE,EAC3B,OAAO,EAAG,MAAM,CAAC,CAAC,EAAG,IAAO,EAAG,GAAK,EAAG,GAAK,EAAI,EACjD,CAQO,SAAS,EAAM,CAAE,CAAE,CAAE,EAC3B,OAAO,EAAG,MAAM,CAAC,CAAC,EAAG,IAAO,EAAG,GAAK,EAAG,GAAK,EAAI,EACjD,CAKO,SAAS,EAAI,CAAE,EACrB,OAAO,EAAM,EAAI,EAClB,CAKO,SAAS,EAAI,CAAE,EACrB,OAAO,EAAM,EAAI,EAClB,CAUO,SAAS,EAAI,CAAE,CAAE,GAAG,CAAG,EAC7B,IAAM,EAAY,EAAM,EAAK,AAAC,GAAO,EAAG,MAAM,EAAE,MAAM,CACtD,OAAO,EAAG,KAAK,CAAC,EAAG,GAAW,GAAG,CAAC,CAAC,EAAK,IACvC,EAAI,MAAM,CACT,CAAC,EAAG,KACH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Q,EAAE,EAAI,OAAO,CAAC,CAClE,EAAa,AAAuB,GAAQ,CAAC,QAAQ,EAAE,EAAI,OAAO,CAAC,CACnE,EAAW,AAAuB,GAAQ,CAAC,QAAQ,EAAE,EAAI,OAAO,CAAC,CACjE,EAAc,AAAuB,GAAQ,CAAC,QAAQ,EAAE,EAAI,OAAO,CAAC,CACpE,EAAe,AAAuB,GAAQ,CAAC,QAAQ,EAAE,EAAI,OAAO,CAAC,CACrE,EAAY,AAAuB,GAAQ,CAAC,QAAQ,EAAE,EAAI,OAAO,CAAC,A,G,E,Q,S,C,C,C,E,E,E,O,C,I,I,E,U,E,E,O,C,K,I,E,U,E,E,O,C,M,I,E,U,E,E,O,C,U,I,E,U,E,S,E,S,E,S,E,S,E,S,E,S,E,Q,G,E,Q,S,C,C,C,E,E,E,O,C,kB,I,G,E,E,O,C,M,I,G,E,E,O,C,a,I,G,E,E,O,C,e,I,G,E,E,O,C,S,I,G,E,E,O,C,S,I,G,E,E,O,C,c,I,G,E,E,O,C,S,I,G,E,E,O,C,M,I,G,E,E,O,C,Q,I,G,E,E,O,C,U,I,G,E,E,O,C,S,I,G,E,E,O,C,M,I,G,E,E,O,C,Q,I,G,E,E,O,C,Q,I,G,E,E,O,C,M,I,G,E,E,O,C,U,I,G,E,E,O,C,Y,I,G,E,E,O,C,O,I,G,E,E,O,C,I,I,G,E,E,O,C,I,I,G,E,E,O,C,Q,I,G,E,E,O,C,K,I,G,E,E,O,C,M,I,G,E,E,O,C,M,I,G,E,E,O,C,M,I,G,E,E,O,C,U,I,G,E,E,O,C,O,I,G,E,E,O,C,O,I,G,E,E,O,C,M,I,G,E,E,O,C,O,I,G,E,E,O,C,U,I,G,E,E,O,C,W,I,G,E,E,O,C,a,I,G,E,S,I,E,E,SE5b/E,IAAM,EAAQ,IAAI,IAKX,SAAS,IACf,EAAM,CAAC,EAAG,IAAM,AAAA,EAAI,WAAW,CAAC,EAAO,CAAA,EAAG,EAAE,CAAC,EAAE,EAAA,CAAG,CAAE,IAAM,CAAC,EAAG,EAAE,CACjE,CAGO,IAAI,EAAM,CAAC,EAAG,IAA0B,CAAC,EAAG,EAAE,CAGxC,EAAa,CACzB,EAAG,EAAI,EAAG,IACV,EAAG,EAAI,EAAG,GACV,EAAG,EAAI,GAAI,GACX,EAAG,EAAI,EAAG,EACX,EAGa,EAAe,CAC3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","sources":["<anon>","../js/modules/iterator-extensions.js","../js/modules/lib.js","../js/modules/index.js","../js/modules/vec.js","../js/modules/vec3.js","../js/modules/itertools.js","../js/modules/priority-queue.js","../js/modules/graph.js","../js/modules/array2d.js","src/common.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"jOplp\", function(module, exports) {\n\nvar $k3N1b = parcelRequire(\"k3N1b\");\nIterator.prototype.first = function() {\n    for (const x of this)return x;\n};\n/**\n * @template T\n *\n * @param {T} defaultValue\n */ Iterator.prototype.firstOrDefault = function(defaultValue) {\n    for (const x of this)return x;\n    return defaultValue;\n};\nIterator.prototype.last = function() {\n    let last;\n    for (const x of this)last = x;\n    return last;\n};\n/**\n * @param {number} n\n */ Iterator.prototype.skip = function*(n) {\n    let i = 0;\n    for (const x of this){\n        if (i >= n) yield x;\n        i++;\n    }\n};\n/**\n * @param {number} n\n */ Iterator.prototype.groupsOf = function*(n) {\n    let group = [];\n    for (const x of this){\n        group.push(x);\n        if (group.length === n) {\n            yield group;\n            group = [];\n        }\n    }\n    if (group.length > 0) yield group;\n};\n/**\n * @param {(val: K) => T} keyFn\n * @template T\n * @template K\n */ Iterator.prototype.groupBy = function(keyFn) {\n    const map = new Map();\n    for (const x of this){\n        const key = keyFn(x);\n        if (!map.has(key)) map.set(key, []);\n        map.get(key).push(x);\n    }\n    return map;\n};\nfunction $e6c658af85052922$export$8a63f25cc62965f1(xs) {\n    return xs.reduce((0, $k3N1b.add), 0);\n}\nIterator.prototype.sum = function() {\n    return $e6c658af85052922$export$8a63f25cc62965f1(this);\n};\nfunction $e6c658af85052922$export$2060d2db72cce88f(xs) {\n    return xs.reduce((0, $k3N1b.mul), 1);\n}\nIterator.prototype.multiply = function() {\n    return $e6c658af85052922$export$2060d2db72cce88f(this);\n};\n/**\n * @template T\n */ Iterator.prototype.count = function(predicate = (/** @type {T} */ x)=>true) {\n    let count = 0;\n    for (const x of this)if (predicate(x)) count += 1;\n    return count;\n};\n/**\n *\n * @param {Iterable<U>} iterableB\n * @returns {IteratorObject<[T, U]>}\n *\n * @template T, U\n */ Iterator.prototype.zip = function*(iterableB) {\n    const iterA = this[Symbol.iterator]();\n    const iterB = iterableB[Symbol.iterator]();\n    while(true){\n        const { value: a, done: doneA } = iterA.next();\n        const { value: b, done: doneB } = iterB.next();\n        if (doneA || doneB) return;\n        yield [\n            a,\n            b\n        ];\n    }\n};\nIterator.prototype.indexed = function() {\n    return range(Infinity).zip(this);\n};\n/**\n * @param {number} size\n * @returns {IteratorObject<T[]>}\n *\n * @template T\n */ Iterator.prototype.windowed = function* windowed(size) {\n    const buffer = [];\n    for (const x of this){\n        buffer.push(x);\n        if (buffer.length === size) {\n            yield buffer.slice();\n            buffer.shift();\n        }\n    }\n};\n/**\n * @param {(value: T) => boolean} predicate\n * @returns {number}\n * @template T\n */ Iterator.prototype.findIndex = function(predicate) {\n    let i = 0;\n    for (const x of this){\n        if (predicate(x)) return i;\n        i++;\n    }\n    return -1;\n};\n/**\n * @param {T} value\n * @returns {number}\n * @template T\n */ Iterator.prototype.indexOf = function(value) {\n    return this.findIndex((x)=>x === value);\n};\n/**\n * @param {number} [n]\n * @returns {IteratorObject<T>}\n *\n * @template T\n */ Iterator.prototype.skipLast = function*(n = 1) {\n    if (n <= 0) {\n        yield* this;\n        return;\n    }\n    const buffer = Array(n);\n    let i = 0;\n    for (const x of this){\n        if (i >= n) yield buffer[i % n];\n        buffer[i % n] = x;\n        i++;\n    }\n};\n/**\n *\n * @param {number} every\n * @param {number} [skipInitial]\n * @returns {IteratorObject<T>}\n *\n * @template T\n */ Iterator.prototype.takeEvery = function* takeEvery(every, skipInitial = 0) {\n    if (every <= 0) return;\n    if (skipInitial < 0) skipInitial = 0;\n    for (const x of this){\n        if (skipInitial === 0) {\n            yield x;\n            skipInitial = every;\n        }\n        skipInitial--;\n    }\n};\n/**\n * @param {(value: T) => boolean} predicate\n * @returns {IteratorObject<T>}\n * @template T\n */ Iterator.prototype.takeWhile = function* takeWhile(predicate) {\n    for (const x of this){\n        if (!predicate(x)) return;\n        yield x;\n    }\n};\n/**\n * @param {(value: T) => boolean} predicate\n * @returns {IteratorObject<T>}\n * @template T\n */ Iterator.prototype.takeUntil = function*(predicate) {\n    for (const x of this){\n        if (predicate(x)) return;\n        yield x;\n    }\n};\n/**\n * @param {(arg: T) => any} [mapFn]\n * @returns {IteratorObject<T>}\n * @template T\n */ Iterator.prototype.distinct = function*(mapFn = (x)=>x) {\n    const set = new Set();\n    for (const x of this){\n        const key = mapFn(x);\n        if (!set.has(key)) {\n            set.add(key);\n            yield x;\n        }\n    }\n};\nIterator.prototype.min = function() {\n    let min;\n    for (const x of this)if (min === undefined || x < min) min = x;\n    return min;\n};\nIterator.prototype.max = function() {\n    let max;\n    for (const x of this)if (max === undefined || x > max) max = x;\n    return max;\n};\n/**\n * @template T\n * @param {(arg: T) => number | string} fn\n * @returns {T}\n */ Iterator.prototype.maxBy = function maxBy(fn) {\n    let max;\n    let maxVal;\n    for (const x of this){\n        const val = fn(x);\n        if (max === undefined || val > maxVal) {\n            max = x;\n            maxVal = val;\n        }\n    }\n    return max;\n};\n/**\n * @template T\n */ Iterator.prototype.countFrequencies = function() {\n    return this.toMap((x)=>x, (x, map)=>(map.get(x) ?? 0) + 1);\n};\nfunction* $e6c658af85052922$export$bdfcf4c6b5766439(xs, count, current = [], start = 0) {\n    if (count === 0) {\n        yield [\n            ...current\n        ];\n        return;\n    }\n    for(let i = start; i < xs.length; i++){\n        current.push(xs[i]);\n        yield* $e6c658af85052922$export$bdfcf4c6b5766439(xs, count - 1, current, i + 1);\n        current.pop();\n    }\n}\nIterator.prototype.combinations = function(/** @type {number} */ count) {\n    return $e6c658af85052922$export$bdfcf4c6b5766439(this.toArray(), count);\n};\n/**\n * @param {(arg: R, acc: Map<K,V>) => K} keyFn\n * @param {(arg: R, acc: Map<K,V>) => V} valueFn\n * @returns {Map<K,V>}\n *\n * @template R\n * @template K\n * @template V\n */ Iterator.prototype.toMap = function(keyFn, valueFn) {\n    /** @type {Map<K, V>} */ const map = new Map();\n    for (const x of this)map.set(keyFn(x, map), valueFn(x, map));\n    return map;\n};\nIterator.prototype.toSet = function() {\n    return new Set(this);\n};\nIterator.prototype.lcm = function() {\n    return this.reduce((0, $k3N1b.lcm), 1);\n};\n/**\n * @param {(x: T) => void} fn\n * @template T\n */ Iterator.prototype.tap = function*(fn) {\n    for (const x of this){\n        fn(x);\n        yield x;\n    }\n};\n/**\n *\n * @param {(x:Iterable<T>) => IteratorObject<U>} fn\n * @template T\n * @template U\n */ Iterator.prototype.chain = function(fn) {\n    return fn(this);\n};\n\n});\nparcelRegister(\"k3N1b\", function(module, exports) {\n\n$parcel$export(module.exports, \"id\", () => $e9aa1c6a1338d6d9$export$d560c7e4a29451c2);\n$parcel$export(module.exports, \"minBy\", () => $e9aa1c6a1338d6d9$export$8c826aa0fa59ac68);\n$parcel$export(module.exports, \"maxBy\", () => $e9aa1c6a1338d6d9$export$ad1963a493908da4);\n$parcel$export(module.exports, \"min\", () => $e9aa1c6a1338d6d9$export$96ec731ed4dcb222);\n$parcel$export(module.exports, \"max\", () => $e9aa1c6a1338d6d9$export$8960430cfd85939f);\n$parcel$export(module.exports, \"zip\", () => $e9aa1c6a1338d6d9$export$8901015135f2fb22);\n$parcel$export(module.exports, \"readLines\", () => $e9aa1c6a1338d6d9$export$6bb5b649d10f0d08);\n$parcel$export(module.exports, \"readBlocks\", () => $e9aa1c6a1338d6d9$export$648c56967e30a000);\n$parcel$export(module.exports, \"readIntLines\", () => $e9aa1c6a1338d6d9$export$6202c886dc3c644a);\n$parcel$export(module.exports, \"readIntArr\", () => $e9aa1c6a1338d6d9$export$f262cea8b5044687);\n$parcel$export(module.exports, \"mod\", () => $e9aa1c6a1338d6d9$export$842a2cf37af977e1);\n$parcel$export(module.exports, \"functor\", () => $e9aa1c6a1338d6d9$export$7b497825bcf7300e);\n$parcel$export(module.exports, \"cycle\", () => $e9aa1c6a1338d6d9$export$c04a9f24a4230e1f);\n$parcel$export(module.exports, \"at\", () => $e9aa1c6a1338d6d9$export$493d36ec626b6698);\n$parcel$export(module.exports, \"add\", () => $e9aa1c6a1338d6d9$export$e16d8520af44a096);\n$parcel$export(module.exports, \"mul\", () => $e9aa1c6a1338d6d9$export$6e3a27864ab166fe);\n$parcel$export(module.exports, \"mulMatrix\", () => $e9aa1c6a1338d6d9$export$9a3bcbc9ecb31ece);\n$parcel$export(module.exports, \"getOrUpdate\", () => $e9aa1c6a1338d6d9$export$35c77d5f3f89d786);\n$parcel$export(module.exports, \"mulMatrices\", () => $e9aa1c6a1338d6d9$export$c3de52d0189e49e3);\n$parcel$export(module.exports, \"compareAsc\", () => $e9aa1c6a1338d6d9$export$fe114145ae75d197);\n$parcel$export(module.exports, \"compareDesc\", () => $e9aa1c6a1338d6d9$export$ed84005ac9356f7a);\n$parcel$export(module.exports, \"update\", () => $e9aa1c6a1338d6d9$export$722fbec263ad908a);\n$parcel$export(module.exports, \"inc\", () => $e9aa1c6a1338d6d9$export$64d41e6bd9c791f3);\n$parcel$export(module.exports, \"splitAt\", () => $e9aa1c6a1338d6d9$export$b0d75975ac0be0e1);\n$parcel$export(module.exports, \"rotate2d\", () => $e9aa1c6a1338d6d9$export$20f44181aab6418b);\n$parcel$export(module.exports, \"rotateStrings2d\", () => $e9aa1c6a1338d6d9$export$339f06398d202c41);\n$parcel$export(module.exports, \"rotateString2d\", () => $e9aa1c6a1338d6d9$export$616ccb8a781f9858);\n$parcel$export(module.exports, \"tuple\", () => $e9aa1c6a1338d6d9$export$65e3907585753458);\n$parcel$export(module.exports, \"rotate\", () => $e9aa1c6a1338d6d9$export$bb628a54ab399bc9);\n$parcel$export(module.exports, \"solveSquareEquation\", () => $e9aa1c6a1338d6d9$export$e953585137da4724);\n$parcel$export(module.exports, \"gcd\", () => $e9aa1c6a1338d6d9$export$f81847884871263e);\n$parcel$export(module.exports, \"lcm\", () => $e9aa1c6a1338d6d9$export$f686d97e407ec4ef);\n$parcel$export(module.exports, \"combinations\", () => $e9aa1c6a1338d6d9$export$bdfcf4c6b5766439);\n$parcel$export(module.exports, \"repeatWithDelimiters\", () => $e9aa1c6a1338d6d9$export$7760d2980011f652);\n$parcel$export(module.exports, \"toString\", () => $e9aa1c6a1338d6d9$export$f84e8e69fd4488a5);\n$parcel$export(module.exports, \"isInRange\", () => $e9aa1c6a1338d6d9$export$6dabbcb26357acf4);\n$parcel$export(module.exports, \"identity\", () => $e9aa1c6a1338d6d9$export$f0954fd7d5368655);\n$parcel$export(module.exports, \"asciiBlue\", () => $e9aa1c6a1338d6d9$export$7defdc6ed6a51a62);\n$parcel$export(module.exports, \"asciiGreen\", () => $e9aa1c6a1338d6d9$export$4eec9fac012014f5);\n$parcel$export(module.exports, \"asciiRed\", () => $e9aa1c6a1338d6d9$export$497fcc5709efd67);\n$parcel$export(module.exports, \"asciiYellow\", () => $e9aa1c6a1338d6d9$export$fc692673e49534a2);\n$parcel$export(module.exports, \"asciiMagenta\", () => $e9aa1c6a1338d6d9$export$1c465f11f31c489b);\n$parcel$export(module.exports, \"asciiCyan\", () => $e9aa1c6a1338d6d9$export$75288e2ff97cec76);\n// @ts-check\nparcelRequire(\"iHpWs\");\n\nvar $2kwEI = parcelRequire(\"2kwEI\");\nparcelRequire(\"iXP63\");\nfunction $e9aa1c6a1338d6d9$export$d560c7e4a29451c2(x) {\n    return x;\n}\nfunction $e9aa1c6a1338d6d9$export$8c826aa0fa59ac68(xs, fn) {\n    return xs.reduce((a, b)=>fn(a) < fn(b) ? a : b);\n}\nfunction $e9aa1c6a1338d6d9$export$ad1963a493908da4(xs, fn) {\n    return xs.reduce((a, b)=>fn(a) > fn(b) ? a : b);\n}\nfunction $e9aa1c6a1338d6d9$export$96ec731ed4dcb222(xs) {\n    return $e9aa1c6a1338d6d9$export$8c826aa0fa59ac68(xs, $e9aa1c6a1338d6d9$export$d560c7e4a29451c2);\n}\nfunction $e9aa1c6a1338d6d9$export$8960430cfd85939f(xs) {\n    return $e9aa1c6a1338d6d9$export$ad1963a493908da4(xs, $e9aa1c6a1338d6d9$export$d560c7e4a29451c2);\n}\nfunction $e9aa1c6a1338d6d9$export$8901015135f2fb22(xs, ...yss) {\n    const minLength = $e9aa1c6a1338d6d9$export$8c826aa0fa59ac68(yss, (ys)=>ys.length).length;\n    return xs.slice(0, minLength).map((val, i)=>yss.reduce((a, arr)=>{\n            a.push(arr[i]);\n            return a;\n        }, [\n            val\n        ]));\n}\nfunction $e9aa1c6a1338d6d9$export$6bb5b649d10f0d08(input) {\n    return input.split(\"\\n\");\n}\nfunction $e9aa1c6a1338d6d9$export$648c56967e30a000(input) {\n    return input.split(\"\\n\\n\");\n}\nfunction $e9aa1c6a1338d6d9$export$6202c886dc3c644a(input) {\n    return $e9aa1c6a1338d6d9$export$6bb5b649d10f0d08(input).map(Number);\n}\nfunction $e9aa1c6a1338d6d9$export$f262cea8b5044687(input, separator = \",\") {\n    return input.split(separator).map(Number);\n}\nconst $e9aa1c6a1338d6d9$export$842a2cf37af977e1 = (n, m)=>(n % m + m) % m;\nfunction $e9aa1c6a1338d6d9$export$7b497825bcf7300e(value) {\n    return {\n        /**\n\t\t *\n\t\t * @param {(arg: T) => R} fn\n\t\t * @template R\n\t\t */ map (fn) {\n            return $e9aa1c6a1338d6d9$export$7b497825bcf7300e(fn(value));\n        },\n        get () {\n            return value;\n        }\n    };\n}\nfunction $e9aa1c6a1338d6d9$export$c04a9f24a4230e1f(xs, n) {\n    return xs.slice(n).concat(xs.slice(0, n));\n}\nfunction $e9aa1c6a1338d6d9$export$493d36ec626b6698(xs, n) {\n    if (n < 0) n = xs.length + n;\n    return xs[n];\n}\nfunction $e9aa1c6a1338d6d9$export$e16d8520af44a096(a, b) {\n    return a + b;\n}\nfunction $e9aa1c6a1338d6d9$export$6e3a27864ab166fe(a, b) {\n    return a * b;\n}\nfunction $e9aa1c6a1338d6d9$export$9a3bcbc9ecb31ece(m1, m2) {\n    /** @type {number[][]} */ const result = [];\n    for(let i = 0; i < m1.length; i++){\n        result[i] = [];\n        for(let j = 0; j < m2[0].length; j++){\n            let sum = 0;\n            for(let k = 0; k < m1[0].length; k++)sum += m1[i][k] * m2[k][j];\n            result[i][j] = sum;\n        }\n    }\n    return result;\n}\nfunction $e9aa1c6a1338d6d9$export$35c77d5f3f89d786(map, key, getValue) {\n    if (map instanceof Map) {\n        if (!map.has(key)) map.set(key, getValue());\n        return map.get(key);\n    }\n    if (!(key in map)) map[key] = getValue();\n    return map[key];\n}\nfunction $e9aa1c6a1338d6d9$export$c3de52d0189e49e3(mat1, ...mats) {\n    return mats.reduce($e9aa1c6a1338d6d9$export$9a3bcbc9ecb31ece, mat1);\n}\nfunction $e9aa1c6a1338d6d9$export$fe114145ae75d197(a, b) {\n    return a - b;\n}\nfunction $e9aa1c6a1338d6d9$export$ed84005ac9356f7a(a, b) {\n    return b - a;\n}\nfunction $e9aa1c6a1338d6d9$export$722fbec263ad908a(xs, i, fn) {\n    return xs.slice(0, i).concat(fn(xs[i])).concat(xs.slice(i + 1));\n}\nfunction $e9aa1c6a1338d6d9$export$64d41e6bd9c791f3(x) {\n    return x + 1;\n}\nfunction $e9aa1c6a1338d6d9$export$b0d75975ac0be0e1(xs, n) {\n    return [\n        xs.slice(0, n),\n        xs.slice(n)\n    ];\n}\nfunction $e9aa1c6a1338d6d9$export$20f44181aab6418b(arr, clockwise = true) {\n    const height = arr.length;\n    const width = (0, $2kwEI.it)(arr).map((line)=>line.length).max();\n    const rotated = Array.from({\n        length: width\n    }, ()=>Array.from({\n            length: height\n        }));\n    for(let y = 0; y < height; y++)for(let x = 0; x < width; x++){\n        const value = arr[y]?.[x];\n        const [i, j] = clockwise ? [\n            x,\n            height - y - 1\n        ] : [\n            width - x - 1,\n            y\n        ];\n        rotated[i][j] = value;\n    }\n    return rotated;\n}\nfunction $e9aa1c6a1338d6d9$export$339f06398d202c41(strings, clockwise = true) {\n    const rotated = $e9aa1c6a1338d6d9$export$20f44181aab6418b(strings.map((str)=>str.split(\"\")), clockwise);\n    return rotated.map((line)=>line.map((x)=>x ?? \" \").join(\"\").trimEnd());\n}\nfunction $e9aa1c6a1338d6d9$export$616ccb8a781f9858(str, clockwise = true) {\n    return $e9aa1c6a1338d6d9$export$339f06398d202c41(str.split(\"\\n\"), clockwise).join(\"\\n\");\n}\nfunction $e9aa1c6a1338d6d9$export$65e3907585753458(...args) {\n    return args;\n}\nconst $e9aa1c6a1338d6d9$export$bb628a54ab399bc9 = (/** @type {string | string[] | T[][]} */ rotatable, clockwise = true)=>{\n    if (typeof rotatable === \"string\") return $e9aa1c6a1338d6d9$export$616ccb8a781f9858(rotatable, clockwise);\n    if (typeof rotatable[0] === \"string\") return $e9aa1c6a1338d6d9$export$339f06398d202c41(/** @type {string[]} */ rotatable, clockwise);\n    return $e9aa1c6a1338d6d9$export$20f44181aab6418b(/** @type {T[][]} */ rotatable, clockwise);\n};\nfunction $e9aa1c6a1338d6d9$export$e953585137da4724(a, b, c) {\n    const discriminant = b * b - 4 * a * c;\n    if (discriminant < 0) return [] // No real solutions\n    ;\n    else if (discriminant === 0) {\n        const x = -b / (2 * a);\n        return [\n            x\n        ] // One real solution\n        ;\n    } else {\n        const sqrtDiscriminant = Math.sqrt(discriminant);\n        const x1 = (-b + sqrtDiscriminant) / (2 * a);\n        const x2 = (-b - sqrtDiscriminant) / (2 * a);\n        return [\n            x1,\n            x2\n        ] // Two real solutions\n        ;\n    }\n}\nfunction $e9aa1c6a1338d6d9$export$f81847884871263e(a, b) {\n    return !b ? a : $e9aa1c6a1338d6d9$export$f81847884871263e(b, a % b);\n}\nfunction $e9aa1c6a1338d6d9$export$f686d97e407ec4ef(a, b) {\n    return a * b / $e9aa1c6a1338d6d9$export$f81847884871263e(a, b);\n}\nfunction $e9aa1c6a1338d6d9$export$bdfcf4c6b5766439(xs, count, result = [], current = [], start = 0) {\n    if (count === 0) {\n        result.push([\n            ...current\n        ]);\n        return;\n    }\n    for(let i = start; i < xs.length; i++){\n        current.push(xs[i]);\n        $e9aa1c6a1338d6d9$export$bdfcf4c6b5766439(xs, count - 1, result, current, i + 1);\n        current.pop();\n    }\n    return result;\n}\nfunction $e9aa1c6a1338d6d9$export$7760d2980011f652(xs, delimiters, count) {\n    /** @type {any} */ let result = typeof xs === \"string\" ? \"\" : [];\n    for(let i = 0; i < count; i++){\n        if (i > 0) result = result.concat(delimiters);\n        result = result.concat(xs);\n    }\n    return result;\n}\nfunction $e9aa1c6a1338d6d9$export$f84e8e69fd4488a5(x) {\n    return x.toString();\n}\nfunction $e9aa1c6a1338d6d9$export$6dabbcb26357acf4(value, min, max) {\n    return value >= min && value <= max;\n}\nconst $e9aa1c6a1338d6d9$export$f0954fd7d5368655 = (x)=>x;\nconst $e9aa1c6a1338d6d9$export$7defdc6ed6a51a62 = (/** @type {string} */ str)=>`\\x1b[34m${str}\\x1b[0m`;\nconst $e9aa1c6a1338d6d9$export$4eec9fac012014f5 = (/** @type {string} */ str)=>`\\x1b[32m${str}\\x1b[0m`;\nconst $e9aa1c6a1338d6d9$export$497fcc5709efd67 = (/** @type {string} */ str)=>`\\x1b[31m${str}\\x1b[0m`;\nconst $e9aa1c6a1338d6d9$export$fc692673e49534a2 = (/** @type {string} */ str)=>`\\x1b[33m${str}\\x1b[0m`;\nconst $e9aa1c6a1338d6d9$export$1c465f11f31c489b = (/** @type {string} */ str)=>`\\x1b[35m${str}\\x1b[0m`;\nconst $e9aa1c6a1338d6d9$export$75288e2ff97cec76 = (/** @type {string} */ str)=>`\\x1b[36m${str}\\x1b[0m`;\n\n});\nparcelRegister(\"iHpWs\", function(module, exports) {\n\n$parcel$export(module.exports, \"V\", () => (parcelRequire(\"8bK5r\")));\n$parcel$export(module.exports, \"V3\", () => (parcelRequire(\"iXP63\")));\n$parcel$export(module.exports, \"Lib\", () => (parcelRequire(\"k3N1b\")));\n$parcel$export(module.exports, \"Array2d\", () => (parcelRequire(\"kFaE0\")));\n// @ts-check\n\nvar $8bK5r = parcelRequire(\"8bK5r\");\n\nvar $iXP63 = parcelRequire(\"iXP63\");\n\nvar $k3N1b = parcelRequire(\"k3N1b\");\n\nvar $2kwEI = parcelRequire(\"2kwEI\");\n\nvar $7nSYv = parcelRequire(\"7nSYv\");\n\nvar $d81pG = parcelRequire(\"d81pG\");\n\nvar $kFaE0 = parcelRequire(\"kFaE0\");\n\n});\nparcelRegister(\"8bK5r\", function(module, exports) {\n\n$parcel$export(module.exports, \"enableCachedVec\", () => $5f6319ad1808f177$export$c1ee3046673c2e8d);\n$parcel$export(module.exports, \"vec\", () => $5f6319ad1808f177$export$202e0172ed3c7be0);\n$parcel$export(module.exports, \"DIR_TO_VEC\", () => $5f6319ad1808f177$export$71a2b7e4ca1456c0);\n$parcel$export(module.exports, \"ARROW_TO_VEC\", () => $5f6319ad1808f177$export$9fe09ea95e3d92c4);\n$parcel$export(module.exports, \"DIRS_4\", () => $5f6319ad1808f177$export$ef1ead63b140c91);\n$parcel$export(module.exports, \"DIRS_8\", () => $5f6319ad1808f177$export$a96b5f514908765e);\n$parcel$export(module.exports, \"DIRS_4_DIAG\", () => $5f6319ad1808f177$export$d6f400809f379ec0);\n$parcel$export(module.exports, \"around\", () => $5f6319ad1808f177$export$e17a4c71e68ee954);\n$parcel$export(module.exports, \"add\", () => $5f6319ad1808f177$export$e16d8520af44a096);\n$parcel$export(module.exports, \"asDir\", () => $5f6319ad1808f177$export$222e698ec63014a5);\n$parcel$export(module.exports, \"asArrow\", () => $5f6319ad1808f177$export$323d945568d78b44);\n$parcel$export(module.exports, \"signed\", () => $5f6319ad1808f177$export$a785de3a2a8dd1aa);\n$parcel$export(module.exports, \"sub\", () => $5f6319ad1808f177$export$f93b5905241a7cca);\n$parcel$export(module.exports, \"scale\", () => $5f6319ad1808f177$export$dcdf75081b88279d);\n$parcel$export(module.exports, \"cross\", () => $5f6319ad1808f177$export$bb646b20bb93d339);\n$parcel$export(module.exports, \"dot\", () => $5f6319ad1808f177$export$94132a0e348806d4);\n$parcel$export(module.exports, \"fromDir\", () => $5f6319ad1808f177$export$e588626963949c9c);\n$parcel$export(module.exports, \"fromArrow\", () => $5f6319ad1808f177$export$507b5e4d2c64d9af);\n$parcel$export(module.exports, \"zero\", () => $5f6319ad1808f177$export$7f9972325ebfd559);\n$parcel$export(module.exports, \"x\", () => $5f6319ad1808f177$export$d141bba7fdc215a3);\n$parcel$export(module.exports, \"y\", () => $5f6319ad1808f177$export$4a5767248b18ef41);\n$parcel$export(module.exports, \"isVec\", () => $5f6319ad1808f177$export$9fd36a9547ed1c6f);\n$parcel$export(module.exports, \"eq\", () => $5f6319ad1808f177$export$9663ddc1cf085b32);\n$parcel$export(module.exports, \"min\", () => $5f6319ad1808f177$export$96ec731ed4dcb222);\n$parcel$export(module.exports, \"max\", () => $5f6319ad1808f177$export$8960430cfd85939f);\n$parcel$export(module.exports, \"neg\", () => $5f6319ad1808f177$export$d9493ff0dfa0fdd5);\n$parcel$export(module.exports, \"segment\", () => $5f6319ad1808f177$export$6519c25590136c5e);\n$parcel$export(module.exports, \"cLen\", () => $5f6319ad1808f177$export$89ebf43b06e712ad);\n$parcel$export(module.exports, \"ZERO\", () => $5f6319ad1808f177$export$2a1795c9359f92b9);\n$parcel$export(module.exports, \"len\", () => $5f6319ad1808f177$export$fc1400facf92c78);\n$parcel$export(module.exports, \"mLen\", () => $5f6319ad1808f177$export$f475ae3ba4db01b5);\n$parcel$export(module.exports, \"inRange\", () => $5f6319ad1808f177$export$ddf89a9c5af38f94);\n$parcel$export(module.exports, \"toString\", () => $5f6319ad1808f177$export$f84e8e69fd4488a5);\n$parcel$export(module.exports, \"fromString\", () => $5f6319ad1808f177$export$3004f64547af360e);\n// @ts-check\nparcelRequire(\"iHpWs\");\nvar $k3N1b = parcelRequire(\"k3N1b\");\n/**\n * @typedef {readonly [x: number, y: number] & {__opaque: 'StructVec2'}} Vec2\n */ /**\n * @typedef {\"U\" | \"R\"| \"D\" | \"L\"} Dir\n */ /**\n * @typedef {\"^\" | \">\" | \"v\" | \"<\"} Arrow\n */ /**\n * @param {number} x\n * @param {number} y\n * @returns {Vec2}\n */ const $5f6319ad1808f177$var$cache = new Map();\nfunction $5f6319ad1808f177$export$c1ee3046673c2e8d() {\n    $5f6319ad1808f177$export$202e0172ed3c7be0 = (x, y)=>(0, $k3N1b).getOrUpdate($5f6319ad1808f177$var$cache, `${x},${y}`, ()=>[\n                x,\n                y\n            ]);\n}\nlet $5f6319ad1808f177$export$202e0172ed3c7be0 = (x, y)=>/** @type {any} */ [\n        x,\n        y\n    ];\nconst $5f6319ad1808f177$export$71a2b7e4ca1456c0 = {\n    U: $5f6319ad1808f177$export$202e0172ed3c7be0(0, -1),\n    D: $5f6319ad1808f177$export$202e0172ed3c7be0(0, 1),\n    L: $5f6319ad1808f177$export$202e0172ed3c7be0(-1, 0),\n    R: $5f6319ad1808f177$export$202e0172ed3c7be0(1, 0)\n};\nconst $5f6319ad1808f177$export$9fe09ea95e3d92c4 = {\n    \"^\": $5f6319ad1808f177$export$202e0172ed3c7be0(0, -1),\n    v: $5f6319ad1808f177$export$202e0172ed3c7be0(0, 1),\n    \"<\": $5f6319ad1808f177$export$202e0172ed3c7be0(-1, 0),\n    \">\": $5f6319ad1808f177$export$202e0172ed3c7be0(1, 0)\n};\nconst $5f6319ad1808f177$export$ef1ead63b140c91 = [\n    $5f6319ad1808f177$export$71a2b7e4ca1456c0.U,\n    $5f6319ad1808f177$export$71a2b7e4ca1456c0.R,\n    $5f6319ad1808f177$export$71a2b7e4ca1456c0.D,\n    $5f6319ad1808f177$export$71a2b7e4ca1456c0.L\n];\nconst $5f6319ad1808f177$export$a96b5f514908765e = [\n    $5f6319ad1808f177$export$202e0172ed3c7be0(-1, -1),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(0, -1),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(1, -1),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(-1, 0),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(1, 0),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(-1, 1),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(0, 1),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(1, 1)\n];\nconst $5f6319ad1808f177$export$d6f400809f379ec0 = [\n    $5f6319ad1808f177$export$202e0172ed3c7be0(-1, -1),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(1, -1),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(-1, 1),\n    $5f6319ad1808f177$export$202e0172ed3c7be0(1, 1)\n];\nconst $5f6319ad1808f177$export$e17a4c71e68ee954 = (/** @type {Vec2} */ vec, dirs = $5f6319ad1808f177$export$a96b5f514908765e)=>dirs.map((d)=>$5f6319ad1808f177$export$e16d8520af44a096(vec, d));\nconst $5f6319ad1808f177$export$222e698ec63014a5 = (dir)=>{\n    if (dir in $5f6319ad1808f177$export$71a2b7e4ca1456c0) return /** @type {Dir} */ dir;\n    throw new Error(`Invalid direction: ${dir}`);\n};\nconst $5f6319ad1808f177$export$323d945568d78b44 = (dir)=>{\n    if (dir in $5f6319ad1808f177$export$9fe09ea95e3d92c4) return /** @type {Arrow} */ dir;\n    throw new Error(`Invalid direction: ${dir}`);\n};\nconst $5f6319ad1808f177$export$a785de3a2a8dd1aa = ([x, y])=>$5f6319ad1808f177$export$202e0172ed3c7be0(Math.sign(x), Math.sign(y));\nconst $5f6319ad1808f177$export$e16d8520af44a096 = ([x1, y1], [x2, y2])=>$5f6319ad1808f177$export$202e0172ed3c7be0(x1 + x2, y1 + y2);\nconst $5f6319ad1808f177$export$f93b5905241a7cca = ([x1, y1], [x2, y2])=>$5f6319ad1808f177$export$202e0172ed3c7be0(x1 - x2, y1 - y2);\nconst $5f6319ad1808f177$export$dcdf75081b88279d = ([x, y], s)=>$5f6319ad1808f177$export$202e0172ed3c7be0(x * s, y * s);\nconst $5f6319ad1808f177$export$bb646b20bb93d339 = ([x1, y1], [x2, y2])=>x1 * y2 - y1 * x2;\nconst $5f6319ad1808f177$export$94132a0e348806d4 = ([x1, y1], [x2, y2])=>x1 * x2 + y1 * y2;\nconst $5f6319ad1808f177$export$e588626963949c9c = (dir)=>$5f6319ad1808f177$export$71a2b7e4ca1456c0[dir];\nconst $5f6319ad1808f177$export$507b5e4d2c64d9af = (arrow)=>$5f6319ad1808f177$export$9fe09ea95e3d92c4[arrow];\nconst $5f6319ad1808f177$export$7f9972325ebfd559 = ()=>$5f6319ad1808f177$export$202e0172ed3c7be0(0, 0);\nconst $5f6319ad1808f177$export$d141bba7fdc215a3 = (vec)=>vec[0];\nconst $5f6319ad1808f177$export$4a5767248b18ef41 = (vec)=>vec[1];\nconst $5f6319ad1808f177$export$9fd36a9547ed1c6f = (arg)=>Array.isArray(arg) && arg.length === 2 && typeof arg[0] === \"number\" && typeof arg[1] === \"number\";\nconst $5f6319ad1808f177$export$9663ddc1cf085b32 = (vecA, vecB)=>vecA[0] === vecB[0] && vecA[1] === vecB[1];\nconst $5f6319ad1808f177$export$96ec731ed4dcb222 = (vecA, vecB)=>$5f6319ad1808f177$export$202e0172ed3c7be0(Math.min(vecA[0], vecB[0]), Math.min(vecA[1], vecB[1]));\nconst $5f6319ad1808f177$export$8960430cfd85939f = (vecA, vecB)=>$5f6319ad1808f177$export$202e0172ed3c7be0(Math.max(vecA[0], vecB[0]), Math.max(vecA[1], vecB[1]));\nconst $5f6319ad1808f177$export$d9493ff0dfa0fdd5 = (vecA)=>$5f6319ad1808f177$export$202e0172ed3c7be0(-vecA[0], -vecA[1]);\nfunction* $5f6319ad1808f177$export$6519c25590136c5e(start, end) {\n    const delta = $5f6319ad1808f177$export$f93b5905241a7cca(end, start);\n    const dir = $5f6319ad1808f177$export$a785de3a2a8dd1aa(delta);\n    const steps = $5f6319ad1808f177$export$89ebf43b06e712ad(start, end);\n    let pos = start;\n    yield pos;\n    for(let i = 0; i < steps; i++){\n        pos = $5f6319ad1808f177$export$e16d8520af44a096(pos, dir);\n        yield pos;\n    }\n}\nconst $5f6319ad1808f177$export$2a1795c9359f92b9 = $5f6319ad1808f177$export$7f9972325ebfd559();\nconst $5f6319ad1808f177$export$fc1400facf92c78 = (vec)=>Math.sqrt(vec[0] ** 2 + vec[1] ** 2);\nconst $5f6319ad1808f177$export$89ebf43b06e712ad = (vecA, vecB = $5f6319ad1808f177$export$7f9972325ebfd559())=>Math.max(Math.abs(vecA[0] - vecB[0]), Math.abs(vecA[1] - vecB[1]));\nconst $5f6319ad1808f177$export$f475ae3ba4db01b5 = (vecA, vecB = $5f6319ad1808f177$export$7f9972325ebfd559())=>Math.abs(vecA[0] - vecB[0]) + Math.abs(vecA[1] - vecB[1]);\nconst $5f6319ad1808f177$export$ddf89a9c5af38f94 = (vec, min, max)=>vec[0] >= min[0] && vec[0] <= max[0] && vec[1] >= min[1] && vec[1] <= max[1];\nconst $5f6319ad1808f177$export$f84e8e69fd4488a5 = ([x, y])=>`${x},${y}`;\nconst $5f6319ad1808f177$export$3004f64547af360e = (str)=>{\n    const [x, y] = str.split(\",\").map(Number);\n    return $5f6319ad1808f177$export$202e0172ed3c7be0(x, y);\n};\n\n});\n\nparcelRegister(\"iXP63\", function(module, exports) {\n\n$parcel$export(module.exports, \"vec3\", () => $dce55f6d26d04678$export$9100789c9d999364);\n$parcel$export(module.exports, \"x\", () => $dce55f6d26d04678$export$d141bba7fdc215a3);\n$parcel$export(module.exports, \"y\", () => $dce55f6d26d04678$export$4a5767248b18ef41);\n$parcel$export(module.exports, \"z\", () => $dce55f6d26d04678$export$df995fae86a55f06);\n$parcel$export(module.exports, \"zero3\", () => $dce55f6d26d04678$export$8768f694db685fa5);\n$parcel$export(module.exports, \"add\", () => $dce55f6d26d04678$export$e16d8520af44a096);\n$parcel$export(module.exports, \"sub\", () => $dce55f6d26d04678$export$f93b5905241a7cca);\n$parcel$export(module.exports, \"rot\", () => $dce55f6d26d04678$export$855df823ceb9b81b);\n$parcel$export(module.exports, \"min\", () => $dce55f6d26d04678$export$96ec731ed4dcb222);\n$parcel$export(module.exports, \"max\", () => $dce55f6d26d04678$export$8960430cfd85939f);\n$parcel$export(module.exports, \"mLen\", () => $dce55f6d26d04678$export$f475ae3ba4db01b5);\n$parcel$export(module.exports, \"line\", () => $dce55f6d26d04678$export$53f1d5ea8de3d7c);\n$parcel$export(module.exports, \"dot\", () => $dce55f6d26d04678$export$94132a0e348806d4);\n$parcel$export(module.exports, \"normalized\", () => $dce55f6d26d04678$export$3756780bcd033d85);\n$parcel$export(module.exports, \"cross\", () => $dce55f6d26d04678$export$bb646b20bb93d339);\n$parcel$export(module.exports, \"isZero\", () => $dce55f6d26d04678$export$c46ec7d82fb1f602);\n$parcel$export(module.exports, \"scale\", () => $dce55f6d26d04678$export$dcdf75081b88279d);\n$parcel$export(module.exports, \"magnitudeSquared\", () => $dce55f6d26d04678$export$11aa58664e42760c);\n// @ts-check\n/**\n * @typedef {[x: number, y: number, z: number]} Vec3\n */ /**\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @returns {Vec3}\n */ const $dce55f6d26d04678$export$9100789c9d999364 = (x, y, z)=>[\n        x,\n        y,\n        z\n    ];\nconst $dce55f6d26d04678$export$d141bba7fdc215a3 = (vec)=>vec[0];\nconst $dce55f6d26d04678$export$4a5767248b18ef41 = (vec)=>vec[1];\nconst $dce55f6d26d04678$export$df995fae86a55f06 = (vec)=>vec[2];\nconst $dce55f6d26d04678$export$8768f694db685fa5 = ()=>[\n        0,\n        0,\n        0\n    ];\nconst $dce55f6d26d04678$export$e16d8520af44a096 = (vecA, vecB)=>[\n        vecA[0] + vecB[0],\n        vecA[1] + vecB[1],\n        vecA[2] + vecB[2]\n    ];\nconst $dce55f6d26d04678$export$f93b5905241a7cca = (vecA, vecB)=>[\n        vecA[0] - vecB[0],\n        vecA[1] - vecB[1],\n        vecA[2] - vecB[2]\n    ];\nconst $dce55f6d26d04678$export$855df823ceb9b81b = (vec, rot)=>{\n    const [x, y, z] = vec;\n    const [xRot, yRot, zRot] = rot;\n    return [\n        x * xRot[0] + y * xRot[1] + z * xRot[2],\n        x * yRot[0] + y * yRot[1] + z * yRot[2],\n        x * zRot[0] + y * zRot[1] + z * zRot[2]\n    ];\n};\nconst $dce55f6d26d04678$export$96ec731ed4dcb222 = (vecA, vecB)=>[\n        Math.min(vecA[0], vecB[0]),\n        Math.min(vecA[1], vecB[1]),\n        Math.min(vecA[2], vecB[2])\n    ];\nconst $dce55f6d26d04678$export$8960430cfd85939f = (vecA, vecB)=>[\n        Math.max(vecA[0], vecB[0]),\n        Math.max(vecA[1], vecB[1]),\n        Math.max(vecA[2], vecB[2])\n    ];\nconst $dce55f6d26d04678$export$f475ae3ba4db01b5 = (vecA, vecB = $dce55f6d26d04678$export$8768f694db685fa5())=>Math.abs(vecA[0] - vecB[0]) + Math.abs(vecA[1] - vecB[1]) + Math.abs(vecA[2] - vecB[2]);\nfunction* $dce55f6d26d04678$export$53f1d5ea8de3d7c(start, end) {\n    const delta = $dce55f6d26d04678$export$9100789c9d999364(Math.sign(end[0] - start[0]), Math.sign(end[1] - start[1]), Math.sign(end[2] - start[2]));\n    let current = start;\n    while($dce55f6d26d04678$export$f475ae3ba4db01b5(current, end) > 0){\n        yield current;\n        current = $dce55f6d26d04678$export$e16d8520af44a096(current, delta);\n    }\n    yield end;\n}\nconst $dce55f6d26d04678$export$94132a0e348806d4 = (vecA, vecB)=>vecA[0] * vecB[0] + vecA[1] * vecB[1] + vecA[2] * vecB[2];\nconst $dce55f6d26d04678$export$3756780bcd033d85 = (vec)=>{\n    const len = Math.sqrt($dce55f6d26d04678$export$94132a0e348806d4(vec, vec));\n    return [\n        vec[0] / len,\n        vec[1] / len,\n        vec[2] / len\n    ];\n};\nconst $dce55f6d26d04678$export$bb646b20bb93d339 = (vecA, vecB)=>[\n        vecA[1] * vecB[2] - vecA[2] * vecB[1],\n        vecA[2] * vecB[0] - vecA[0] * vecB[2],\n        vecA[0] * vecB[1] - vecA[1] * vecB[0]\n    ];\nconst $dce55f6d26d04678$export$c46ec7d82fb1f602 = (vec)=>vec[0] === 0 && vec[1] === 0 && vec[2] === 0;\nconst $dce55f6d26d04678$export$dcdf75081b88279d = (vec, factor)=>[\n        vec[0] * factor,\n        vec[1] * factor,\n        vec[2] * factor\n    ];\nconst $dce55f6d26d04678$export$11aa58664e42760c = (vec)=>$dce55f6d26d04678$export$94132a0e348806d4(vec, vec);\n\n});\n\nparcelRegister(\"2kwEI\", function(module, exports) {\n\n$parcel$export(module.exports, \"it\", () => $1b26c7c9393086b6$export$3486a10f30cf1ee4);\n$parcel$export(module.exports, \"iterate\", () => $1b26c7c9393086b6$export$c1a059043cc9c119);\n// @ts-check\n/**\n *\n * @param {IteratorObject<T>} iterable\n * @returns {Iterable<T>}\n * @template T\n */ const $1b26c7c9393086b6$export$3486a10f30cf1ee4 = Iterator.from;\nfunction* $1b26c7c9393086b6$export$d02631cccf789723(start, end, step = 1) {\n    if (start === undefined) start = 0;\n    if (end === undefined) {\n        end = start;\n        start = 0;\n    }\n    if (step === undefined) step = 1;\n    for(let i = start; i < end; i += step)yield i;\n}\nfunction* $1b26c7c9393086b6$export$c1a059043cc9c119(x, f) {\n    let idx = 0;\n    yield x;\n    while(true){\n        x = f(x, idx++);\n        yield x;\n    }\n}\n\n});\n\nparcelRegister(\"7nSYv\", function(module, exports) {\n\n$parcel$export(module.exports, \"PriorityQueue\", () => $56055348226025c2$export$8fbd1ac8e83536df);\n// @ts-check\n// https://stackoverflow.com/a/42919752\nconst $56055348226025c2$var$top = 0;\nconst $56055348226025c2$var$parent = (/** @type {number} */ i)=>(i + 1 >>> 1) - 1;\nconst $56055348226025c2$var$left = (/** @type {number} */ i)=>(i << 1) + 1;\nconst $56055348226025c2$var$right = (/** @type {number} */ i)=>i + 1 << 1;\nclass $56055348226025c2$export$8fbd1ac8e83536df {\n    /**\n\t *\n\t * @param {(a: T, b: T) => number} comparator\n\t */ constructor(comparator = (a, b)=>Number(a > b)){\n        /** @type {T[]} @private */ this._heap = [];\n        /** @private */ this._comparator = comparator;\n    }\n    [Symbol.iterator]() {\n        return {\n            next: ()=>{\n                if (this.size() > 1) return {\n                    value: this.pop(),\n                    done: false\n                };\n                return {\n                    done: true,\n                    value: this.pop()\n                };\n            }\n        };\n    }\n    get length() {\n        return this.size();\n    }\n    size() {\n        return this._heap.length;\n    }\n    isEmpty() {\n        return this.size() == 0;\n    }\n    peek() {\n        return this._heap[$56055348226025c2$var$top];\n    }\n    /**\n\t * @param  {T[]} values\n\t * @returns\n\t */ push(...values) {\n        values.forEach((value)=>{\n            this._heap.push(value);\n            this._siftUp();\n        });\n        return this.size();\n    }\n    pop() {\n        const poppedValue = this.peek();\n        const bottom = this.size() - 1;\n        if (bottom > $56055348226025c2$var$top) this._swap($56055348226025c2$var$top, bottom);\n        this._heap.pop();\n        this._siftDown();\n        return poppedValue;\n    }\n    /**\n\t * @param {T} value\n\t */ replace(value) {\n        const replacedValue = this.peek();\n        this._heap[$56055348226025c2$var$top] = value;\n        this._siftDown();\n        return replacedValue;\n    }\n    /**\n\t * @param {number} i\n\t * @param {number} j\n\t * @private\n\t */ _greater(i, j) {\n        return this._comparator(this._heap[i], this._heap[j]) < 0;\n    }\n    /**\n\t * @param {number} i\n\t * @param {number} j\n\t * @private\n\t */ _swap(i, j) {\n        [this._heap[i], this._heap[j]] = [\n            this._heap[j],\n            this._heap[i]\n        ];\n    }\n    /**\n\t * @private\n\t */ _siftUp() {\n        let node = this.size() - 1;\n        while(node > $56055348226025c2$var$top && this._greater(node, $56055348226025c2$var$parent(node))){\n            this._swap(node, $56055348226025c2$var$parent(node));\n            node = $56055348226025c2$var$parent(node);\n        }\n    }\n    /**\n\t * @private\n\t */ _siftDown() {\n        let node = $56055348226025c2$var$top;\n        while($56055348226025c2$var$left(node) < this.size() && this._greater($56055348226025c2$var$left(node), node) || $56055348226025c2$var$right(node) < this.size() && this._greater($56055348226025c2$var$right(node), node)){\n            let maxChild = $56055348226025c2$var$right(node) < this.size() && this._greater($56055348226025c2$var$right(node), $56055348226025c2$var$left(node)) ? $56055348226025c2$var$right(node) : $56055348226025c2$var$left(node);\n            this._swap(node, maxChild);\n            node = maxChild;\n        }\n    }\n}\n\n});\n\nparcelRegister(\"d81pG\", function(module, exports) {\n\n$parcel$export(module.exports, \"dijkstra\", () => $98ed1e5c454f93db$export$1c27361af35e8f2);\n// @ts-check\n\nvar $7nSYv = parcelRequire(\"7nSYv\");\nfunction* $98ed1e5c454f93db$export$51b654aff22fc5a6(getNext, start, valToHash) {\n    const visited = new Set();\n    const queue = /** @type {PathItem<T>[]} */ [\n        {\n            distance: 0,\n            value: start,\n            parent: null\n        }\n    ];\n    if (valToHash) visited.add(valToHash(start));\n    while(queue.length){\n        const current = queue.pop();\n        yield current;\n        for (const next of getNext(current.value, current))if (valToHash) {\n            const hash = valToHash(next);\n            if (!visited.has(hash)) {\n                visited.add(hash);\n                queue.push({\n                    distance: current.distance + 1,\n                    value: next,\n                    parent: current\n                });\n            }\n        } else queue.push({\n            distance: current.distance + 1,\n            value: next,\n            parent: current\n        });\n    }\n}\nfunction* $98ed1e5c454f93db$export$c9e5a085bf83f8b(getNext, starts, valToHash) {\n    const visited = new Set();\n    /** @type {PathItem<T>[]} */ const queue = [];\n    for (const start of starts){\n        queue.push({\n            distance: 0,\n            value: start,\n            parent: null\n        });\n        if (valToHash) visited.add(valToHash(start));\n    }\n    while(queue.length){\n        const current = queue.shift();\n        yield current;\n        for (const next of getNext(current.value, current))if (valToHash) {\n            const hash = valToHash(next);\n            if (!visited.has(hash)) {\n                visited.add(hash);\n                queue.push({\n                    distance: current.distance + 1,\n                    value: next,\n                    parent: current\n                });\n            }\n        } else queue.push({\n            distance: current.distance + 1,\n            value: next,\n            parent: current\n        });\n    }\n}\nfunction* $98ed1e5c454f93db$export$1c27361af35e8f2(getNext, getDistance, starts, valToHash) {\n    /** @type {Map<unknown, PathItem<T>>} */ const visited = new Map();\n    /** @type {PriorityQueue<PathItem<T>>} */ const queue = new (0, $7nSYv.PriorityQueue)((a, b)=>a.distance - b.distance);\n    for (const start of starts){\n        /** @type {PathItem<T>} */ const item = {\n            distance: getDistance(start),\n            value: start,\n            parent: null,\n            predecessors: []\n        };\n        queue.push(item);\n        if (valToHash) visited.set(valToHash(start), item);\n    }\n    while(queue.length){\n        const current = queue.pop();\n        yield current;\n        for (const next of getNext(current.value, current)){\n            const newDistance = current.distance + getDistance(next);\n            if (valToHash) {\n                const hash = valToHash(next);\n                if (visited.has(hash)) {\n                    const item = visited.get(hash);\n                    if (newDistance < item.distance) {\n                        item.distance = newDistance;\n                        item.parent = current;\n                        queue.push(item);\n                        item.predecessors = [\n                            current\n                        ];\n                    } else if (newDistance === item.distance) item.predecessors.push(current);\n                } else {\n                    /** @type {PathItem<T>} */ const item = {\n                        distance: newDistance,\n                        value: next,\n                        parent: current,\n                        predecessors: [\n                            current\n                        ]\n                    };\n                    visited.set(hash, item);\n                    queue.push(item);\n                }\n            } else queue.push({\n                distance: newDistance,\n                value: next,\n                parent: current,\n                predecessors: [\n                    current\n                ]\n            });\n        }\n    }\n}\n\n});\n\nparcelRegister(\"kFaE0\", function(module, exports) {\n\n$parcel$export(module.exports, \"traverse\", () => $f0afe4b915146d8a$export$df3f009e3d155b20);\n$parcel$export(module.exports, \"rotateCW\", () => $f0afe4b915146d8a$export$d6feddd6ae888657);\n$parcel$export(module.exports, \"rotateCCW\", () => $f0afe4b915146d8a$export$c156984459eedb8a);\n$parcel$export(module.exports, \"parse\", () => $f0afe4b915146d8a$export$98e6a39c04603d36);\n$parcel$export(module.exports, \"create\", () => $f0afe4b915146d8a$export$185802fd694ee1f5);\n$parcel$export(module.exports, \"get\", () => $f0afe4b915146d8a$export$3988ae62b71be9a3);\n$parcel$export(module.exports, \"modGet\", () => $f0afe4b915146d8a$export$e4f849c91c3f2392);\n$parcel$export(module.exports, \"height\", () => $f0afe4b915146d8a$export$ac607276a8fe9f0a);\n$parcel$export(module.exports, \"width\", () => $f0afe4b915146d8a$export$7e3df82ee760448c);\n$parcel$export(module.exports, \"set\", () => $f0afe4b915146d8a$export$adaa4cf7ef1b65be);\n$parcel$export(module.exports, \"imSet\", () => $f0afe4b915146d8a$export$eb9fa3099d8c243c);\n$parcel$export(module.exports, \"clone\", () => $f0afe4b915146d8a$export$9cd59f9826255e47);\n$parcel$export(module.exports, \"toString\", () => $f0afe4b915146d8a$export$f84e8e69fd4488a5);\n$parcel$export(module.exports, \"map\", () => $f0afe4b915146d8a$export$871de8747c9eaa88);\n$parcel$export(module.exports, \"contains\", () => $f0afe4b915146d8a$export$2344b14b097df817);\n$parcel$export(module.exports, \"borders\", () => $f0afe4b915146d8a$export$5a5da632d18030b0);\n$parcel$export(module.exports, \"rows\", () => $f0afe4b915146d8a$export$2dd197b55cf13440);\n$parcel$export(module.exports, \"columns\", () => $f0afe4b915146d8a$export$53b3c91859018cd4);\n$parcel$export(module.exports, \"transpose\", () => $f0afe4b915146d8a$export$9cb09a71b7d66923);\n// @ts-check\nparcelRequire(\"iHpWs\");\nvar $8bK5r = parcelRequire(\"8bK5r\");\n\nvar $k3N1b = parcelRequire(\"k3N1b\");\nfunction* $f0afe4b915146d8a$export$df3f009e3d155b20(xs, by = \"lines\", reverse = false) {\n    const minX = 0;\n    const minY = 0;\n    const maxX = xs[0].length;\n    const maxY = xs.length;\n    if (by === \"lines\") {\n        const y0 = reverse ? maxY - 1 : minY;\n        const y1 = reverse ? minY - 1 : maxY;\n        const yStep = reverse ? -1 : 1;\n        const x0 = reverse ? maxX - 1 : minX;\n        const x1 = reverse ? minX - 1 : maxX;\n        const xStep = reverse ? -1 : 1;\n        for(let y = y0; y !== y1; y += yStep)for(let x = x0; x !== x1; x += xStep)yield {\n            pos: (0, $8bK5r).vec(x, y),\n            value: xs[y][x]\n        };\n    }\n    if (by === \"columns\") {\n        const x0 = reverse ? maxX - 1 : minX;\n        const x1 = reverse ? minX - 1 : maxX;\n        const xStep = reverse ? -1 : 1;\n        const y0 = reverse ? maxY - 1 : minY;\n        const y1 = reverse ? minY - 1 : maxY;\n        const yStep = reverse ? -1 : 1;\n        for(let x = x0; x !== x1; x += xStep)for(let y = y0; y !== y1; y += yStep)yield {\n            pos: (0, $8bK5r).vec(x, y),\n            value: xs[y][x]\n        };\n    }\n}\nfunction $f0afe4b915146d8a$export$d6feddd6ae888657(xs) {\n    const res = [];\n    for(let y = 0; y < xs[0].length; y++){\n        res.push([]);\n        for(let x = 0; x < xs.length; x++)res[y].push(xs[xs.length - x - 1][y]);\n    }\n    return res;\n}\nfunction $f0afe4b915146d8a$export$c156984459eedb8a(xs) {\n    const res = [];\n    for(let y = 0; y < xs[0].length; y++){\n        res.push([]);\n        for(let x = 0; x < xs.length; x++)res[y].push(xs[x][xs[0].length - y - 1]);\n    }\n    return res;\n}\nfunction $f0afe4b915146d8a$export$98e6a39c04603d36(input) {\n    return input.split(\"\\n\").map((l)=>l.split(\"\"));\n}\nfunction $f0afe4b915146d8a$export$185802fd694ee1f5(width, height, getVal) {\n    const res = [];\n    for(let y = 0; y < height; y++){\n        res.push([]);\n        for(let x = 0; x < width; x++)res[y].push(getVal(x, y));\n    }\n    return res;\n}\nfunction $f0afe4b915146d8a$export$3988ae62b71be9a3(xs, pos) {\n    return xs[pos[1]]?.[pos[0]];\n}\nfunction $f0afe4b915146d8a$export$e4f849c91c3f2392(xs, pos) {\n    return xs[(0, $k3N1b.mod)(pos[1], $f0afe4b915146d8a$export$ac607276a8fe9f0a(xs))][(0, $k3N1b.mod)(pos[0], $f0afe4b915146d8a$export$7e3df82ee760448c(xs))];\n}\nfunction $f0afe4b915146d8a$export$adaa4cf7ef1b65be(xs, pos, value) {\n    xs[pos[1]][pos[0]] = value;\n    return xs;\n}\nfunction $f0afe4b915146d8a$export$eb9fa3099d8c243c(xs, pos, value) {\n    return $f0afe4b915146d8a$export$adaa4cf7ef1b65be($f0afe4b915146d8a$export$9cd59f9826255e47(xs), pos, value);\n}\nfunction $f0afe4b915146d8a$export$f84e8e69fd4488a5(xs) {\n    return xs.map((l)=>l.join(\"\")).join(\"\\n\");\n}\nfunction $f0afe4b915146d8a$export$871de8747c9eaa88(xs, fn) {\n    return xs.map((l, y)=>l.map((v, x)=>fn(v, (0, $8bK5r).vec(x, y))));\n}\nfunction $f0afe4b915146d8a$export$ac607276a8fe9f0a(xs) {\n    return xs.length;\n}\nfunction $f0afe4b915146d8a$export$7e3df82ee760448c(xs) {\n    return xs[0].length;\n}\nfunction $f0afe4b915146d8a$export$9cd59f9826255e47(xs) {\n    return xs.map((l)=>l.slice());\n}\nfunction $f0afe4b915146d8a$export$2344b14b097df817(xs, pos) {\n    return pos[0] >= 0 && pos[1] >= 0 && pos[0] < $f0afe4b915146d8a$export$7e3df82ee760448c(xs) && pos[1] < $f0afe4b915146d8a$export$ac607276a8fe9f0a(xs);\n}\nfunction* $f0afe4b915146d8a$export$5a5da632d18030b0(xs) {\n    const w = $f0afe4b915146d8a$export$7e3df82ee760448c(xs);\n    const h = $f0afe4b915146d8a$export$ac607276a8fe9f0a(xs);\n    for(let x = 0; x < w; x++){\n        yield {\n            pos: (0, $8bK5r).vec(x, 0),\n            value: xs[0][x]\n        };\n        yield {\n            pos: (0, $8bK5r).vec(x, h - 1),\n            value: xs[h - 1][x]\n        };\n    }\n    for(let y = 0; y < h; y++){\n        yield {\n            pos: (0, $8bK5r).vec(0, y),\n            value: xs[y][0]\n        };\n        yield {\n            pos: (0, $8bK5r).vec(w - 1, y),\n            value: xs[y][w - 1]\n        };\n    }\n}\nfunction $f0afe4b915146d8a$export$2dd197b55cf13440(xs) {\n    return xs;\n}\nfunction $f0afe4b915146d8a$export$53b3c91859018cd4(xs) {\n    return $f0afe4b915146d8a$export$9cb09a71b7d66923(xs);\n}\nfunction $f0afe4b915146d8a$export$9cb09a71b7d66923(xs) {\n    const res = [];\n    for(let x = 0; x < $f0afe4b915146d8a$export$7e3df82ee760448c(xs); x++){\n        res.push([]);\n        for(let y = 0; y < $f0afe4b915146d8a$export$ac607276a8fe9f0a(xs); y++)res[x].push(xs[y][x]);\n    }\n    return res;\n}\n\n});\n\n\n\n\nparcelRegister(\"7zFg5\", function(module, exports) {\n\n$parcel$export(module.exports, \"scaleCanvasToPixelRatio\", () => $583bce5f07860537$export$54bc8e3f89acb1cd);\n// @ts-check\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {number} width\n * @param {number} height\n * @param {number} [scale]\n */ function $583bce5f07860537$export$54bc8e3f89acb1cd(ctx, width, height, scale = 1) {\n    const pixelRatio = (window.devicePixelRatio ?? 1) * scale;\n    ctx.canvas.width = width * scale * pixelRatio;\n    ctx.canvas.height = height * scale * pixelRatio;\n    ctx.canvas.style.width = `${width * scale}px`;\n    ctx.canvas.style.height = `${height * scale}px`;\n    ctx.scale(pixelRatio, pixelRatio);\n    return pixelRatio;\n}\n\n});\n\n\n//# sourceMappingURL=index.a6661994.js.map\n","import { add, lcm, mul } from \"./lib.js\"\n\nIterator.prototype.first = function () {\n\tfor (const x of this) {\n\t\treturn x\n\t}\n}\n\n/**\n * @template T\n *\n * @param {T} defaultValue\n */\nIterator.prototype.firstOrDefault = function (defaultValue) {\n\tfor (const x of this) {\n\t\treturn x\n\t}\n\treturn defaultValue\n}\n\nIterator.prototype.last = function () {\n\tlet last\n\tfor (const x of this) {\n\t\tlast = x\n\t}\n\treturn last\n}\n\n/**\n * @param {number} n\n */\nIterator.prototype.skip = function* (n) {\n\tlet i = 0\n\tfor (const x of this) {\n\t\tif (i >= n) {\n\t\t\tyield x\n\t\t}\n\t\ti++\n\t}\n}\n\n/**\n * @param {number} n\n */\nIterator.prototype.groupsOf = function* (n) {\n\tlet group = []\n\tfor (const x of this) {\n\t\tgroup.push(x)\n\t\tif (group.length === n) {\n\t\t\tyield group\n\t\t\tgroup = []\n\t\t}\n\t}\n\tif (group.length > 0) {\n\t\tyield group\n\t}\n}\n\n/**\n * @param {(val: K) => T} keyFn\n * @template T\n * @template K\n */\nIterator.prototype.groupBy = function (keyFn) {\n\tconst map = new Map()\n\tfor (const x of this) {\n\t\tconst key = keyFn(x)\n\t\tif (!map.has(key)) {\n\t\t\tmap.set(key, [])\n\t\t}\n\t\tmap.get(key).push(x)\n\t}\n\treturn map\n}\n\n/**\n * @param {IteratorObject<number>} xs\n */\nexport function sum(xs) {\n\treturn xs.reduce(add, 0)\n}\n\nIterator.prototype.sum = function () {\n\treturn sum(this)\n}\n\n/**\n * @param {IteratorObject<number>} xs\n */\nexport function multiply(xs) {\n\treturn xs.reduce(mul, 1)\n}\n\nIterator.prototype.multiply = function () {\n\treturn multiply(this)\n}\n\n/**\n * @template T\n */\nIterator.prototype.count = function (predicate = (/** @type {T} */ x) => true) {\n\tlet count = 0\n\tfor (const x of this) {\n\t\tif (predicate(x)) {\n\t\t\tcount += 1\n\t\t}\n\t}\n\treturn count\n}\n\n/**\n *\n * @param {Iterable<U>} iterableB\n * @returns {IteratorObject<[T, U]>}\n *\n * @template T, U\n */\nIterator.prototype.zip = function* (iterableB) {\n\tconst iterA = this[Symbol.iterator]()\n\tconst iterB = iterableB[Symbol.iterator]()\n\twhile (true) {\n\t\tconst { value: a, done: doneA } = iterA.next()\n\t\tconst { value: b, done: doneB } = iterB.next()\n\t\tif (doneA || doneB) {\n\t\t\treturn\n\t\t}\n\t\tyield [a, b]\n\t}\n}\n\nIterator.prototype.indexed = function () {\n\treturn range(Infinity).zip(this)\n}\n\n/**\n * @param {number} size\n * @returns {IteratorObject<T[]>}\n *\n * @template T\n */\nIterator.prototype.windowed = function* windowed(size) {\n\tconst buffer = []\n\tfor (const x of this) {\n\t\tbuffer.push(x)\n\t\tif (buffer.length === size) {\n\t\t\tyield buffer.slice()\n\t\t\tbuffer.shift()\n\t\t}\n\t}\n}\n\n/**\n * @param {(value: T) => boolean} predicate\n * @returns {number}\n * @template T\n */\nIterator.prototype.findIndex = function (predicate) {\n\tlet i = 0\n\tfor (const x of this) {\n\t\tif (predicate(x)) {\n\t\t\treturn i\n\t\t}\n\t\ti++\n\t}\n\treturn -1\n}\n\n/**\n * @param {T} value\n * @returns {number}\n * @template T\n */\nIterator.prototype.indexOf = function (value) {\n\treturn this.findIndex((x) => x === value)\n}\n\n/**\n * @param {number} [n]\n * @returns {IteratorObject<T>}\n *\n * @template T\n */\nIterator.prototype.skipLast = function* (n = 1) {\n\tif (n <= 0) {\n\t\tyield* this\n\t\treturn\n\t}\n\n\tconst buffer = Array(n)\n\tlet i = 0\n\tfor (const x of this) {\n\t\tif (i >= n) {\n\t\t\tyield buffer[i % n]\n\t\t}\n\t\tbuffer[i % n] = x\n\t\ti++\n\t}\n}\n\n/**\n *\n * @param {number} every\n * @param {number} [skipInitial]\n * @returns {IteratorObject<T>}\n *\n * @template T\n */\nIterator.prototype.takeEvery = function* takeEvery(every, skipInitial = 0) {\n\tif (every <= 0) {\n\t\treturn\n\t}\n\tif (skipInitial < 0) {\n\t\tskipInitial = 0\n\t}\n\n\tfor (const x of this) {\n\t\tif (skipInitial === 0) {\n\t\t\tyield x\n\t\t\tskipInitial = every\n\t\t}\n\t\tskipInitial--\n\t}\n}\n\n/**\n * @param {(value: T) => boolean} predicate\n * @returns {IteratorObject<T>}\n * @template T\n */\nIterator.prototype.takeWhile = function* takeWhile(predicate) {\n\tfor (const x of this) {\n\t\tif (!predicate(x)) {\n\t\t\treturn\n\t\t}\n\t\tyield x\n\t}\n}\n\n/**\n * @param {(value: T) => boolean} predicate\n * @returns {IteratorObject<T>}\n * @template T\n */\nIterator.prototype.takeUntil = function* (predicate) {\n\tfor (const x of this) {\n\t\tif (predicate(x)) {\n\t\t\treturn\n\t\t}\n\t\tyield x\n\t}\n}\n\n/**\n * @param {(arg: T) => any} [mapFn]\n * @returns {IteratorObject<T>}\n * @template T\n */\nIterator.prototype.distinct = function* (mapFn = (x) => x) {\n\tconst set = new Set()\n\tfor (const x of this) {\n\t\tconst key = mapFn(x)\n\t\tif (!set.has(key)) {\n\t\t\tset.add(key)\n\t\t\tyield x\n\t\t}\n\t}\n}\n\nIterator.prototype.min = function () {\n\tlet min\n\tfor (const x of this) {\n\t\tif (min === undefined || x < min) {\n\t\t\tmin = x\n\t\t}\n\t}\n\treturn min\n}\n\nIterator.prototype.max = function () {\n\tlet max\n\tfor (const x of this) {\n\t\tif (max === undefined || x > max) {\n\t\t\tmax = x\n\t\t}\n\t}\n\treturn max\n}\n\n/**\n * @template T\n * @param {(arg: T) => number | string} fn\n * @returns {T}\n */\nIterator.prototype.maxBy = function maxBy(fn) {\n\tlet max\n\tlet maxVal\n\tfor (const x of this) {\n\t\tconst val = fn(x)\n\t\tif (max === undefined || val > maxVal) {\n\t\t\tmax = x\n\t\t\tmaxVal = val\n\t\t}\n\t}\n\treturn max\n}\n\n/**\n * @template T\n */\nIterator.prototype.countFrequencies = function () {\n\treturn this.toMap(\n\t\t(x) => x,\n\t\t(x, map) => (map.get(x) ?? 0) + 1,\n\t)\n}\n\n/**\n * @template T\n *\n * @param {T[]} xs\n * @param {number} count\n * @param {T[]} [current]\n * @returns {IteratorObject<T[]>}\n */\nexport function* combinations(xs, count, current = [], start = 0) {\n\tif (count === 0) {\n\t\tyield [...current]\n\t\treturn\n\t}\n\tfor (let i = start; i < xs.length; i++) {\n\t\tcurrent.push(xs[i])\n\t\tyield* combinations(xs, count - 1, current, i + 1)\n\t\tcurrent.pop()\n\t}\n}\n\nIterator.prototype.combinations = function (/** @type {number} */ count) {\n\treturn combinations(this.toArray(), count)\n}\n\n/**\n * @param {(arg: R, acc: Map<K,V>) => K} keyFn\n * @param {(arg: R, acc: Map<K,V>) => V} valueFn\n * @returns {Map<K,V>}\n *\n * @template R\n * @template K\n * @template V\n */\nIterator.prototype.toMap = function (keyFn, valueFn) {\n\t/** @type {Map<K, V>} */\n\tconst map = new Map()\n\tfor (const x of this) {\n\t\tmap.set(keyFn(x, map), valueFn(x, map))\n\t}\n\treturn map\n}\n\nIterator.prototype.toSet = function () {\n\treturn new Set(this)\n}\n\nIterator.prototype.lcm = function () {\n\treturn this.reduce(lcm, 1)\n}\n\n/**\n * @param {(x: T) => void} fn\n * @template T\n */\nIterator.prototype.tap = function* (fn) {\n\tfor (const x of this) {\n\t\tfn(x)\n\t\tyield x\n\t}\n}\n\n/**\n *\n * @param {(x:Iterable<T>) => IteratorObject<U>} fn\n * @template T\n * @template U\n */\nIterator.prototype.chain = function (fn) {\n\treturn fn(this)\n}\n","// @ts-check\n\nimport { V } from \"./index.js\"\nimport { it } from \"./itertools.js\"\nimport { vec3 } from \"./vec3.js\"\n\n/**\n * @param {T} x\n * @returns {T}\n * @template T\n */\nexport function id(x) {\n\treturn x\n}\n\n/**\n * @param {T[]} xs\n * @param {(arg: T) => string | number} fn\n *\n * @template T\n */\nexport function minBy(xs, fn) {\n\treturn xs.reduce((a, b) => (fn(a) < fn(b) ? a : b))\n}\n\n/**\n * @param {T[]} xs\n * @param {(arg: T) => string | number} fn\n *\n * @template T\n */\nexport function maxBy(xs, fn) {\n\treturn xs.reduce((a, b) => (fn(a) > fn(b) ? a : b))\n}\n\n/**\n * @param {number[]} xs\n */\nexport function min(xs) {\n\treturn minBy(xs, id)\n}\n\n/**\n * @param {number[]} xs\n */\nexport function max(xs) {\n\treturn maxBy(xs, id)\n}\n\n/**\n *\n * @param {T[]} xs\n * @param {T[][]} yss\n * @returns {T[][]}\n *\n * @template T\n */\nexport function zip(xs, ...yss) {\n\tconst minLength = minBy(yss, (ys) => ys.length).length\n\treturn xs.slice(0, minLength).map((val, i) =>\n\t\tyss.reduce(\n\t\t\t(a, arr) => {\n\t\t\t\ta.push(arr[i])\n\t\t\t\treturn a\n\t\t\t},\n\t\t\t[val],\n\t\t),\n\t)\n}\n\n/**\n * @param {string} input\n */\nexport function readLines(input) {\n\treturn input.split(\"\\n\")\n}\n\n/**\n * @param {string} input\n */\nexport function readBlocks(input) {\n\treturn input.split(\"\\n\\n\")\n}\n\n/**\n * @param {string} input\n * @returns\n */\nexport function readIntLines(input) {\n\treturn readLines(input).map(Number)\n}\n\n/**\n * @param {string} input\n * @param {string} [separator]\n */\nexport function readIntArr(input, separator = \",\") {\n\treturn input.split(separator).map(Number)\n}\n\n/**\n * @param {number} n\n * @param {number} m\n * @returns\n */\nexport const mod = (n, m) => ((n % m) + m) % m\n\n/**\n *\n * @param {T} value\n * @template T\n */\nexport function functor(value) {\n\treturn {\n\t\t/**\n\t\t *\n\t\t * @param {(arg: T) => R} fn\n\t\t * @template R\n\t\t */\n\t\tmap(fn) {\n\t\t\treturn functor(fn(value))\n\t\t},\n\t\tget() {\n\t\t\treturn value\n\t\t},\n\t}\n}\n\n/**\n * @param {T[]} xs\n * @param {number} n\n * @template T\n */\nexport function cycle(xs, n) {\n\treturn xs.slice(n).concat(xs.slice(0, n))\n}\n\n/**\n * @param {T[]} xs\n * @param {number} n\n * @template T\n */\nexport function at(xs, n) {\n\tif (n < 0) {\n\t\tn = xs.length + n\n\t}\n\treturn xs[n]\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns\n */\nexport function add(a, b) {\n\treturn a + b\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns\n */\nexport function mul(a, b) {\n\treturn a * b\n}\n\n/**\n *\n * @param {number[][]} m1\n * @param {number[][]} m2\n */\nexport function mulMatrix(m1, m2) {\n\t/** @type {number[][]} */\n\tconst result = []\n\tfor (let i = 0; i < m1.length; i++) {\n\t\tresult[i] = []\n\t\tfor (let j = 0; j < m2[0].length; j++) {\n\t\t\tlet sum = 0\n\t\t\tfor (let k = 0; k < m1[0].length; k++) {\n\t\t\t\tsum += m1[i][k] * m2[k][j]\n\t\t\t}\n\t\t\tresult[i][j] = sum\n\t\t}\n\t}\n\treturn result\n}\n\n/**\n *\n * @param {Record<T, U> | Map<T, U>} map\n * @param {T} key\n * @param {() => U} getValue\n * @returns\n *\n * @template {string | number | symbol} T\n * @template U\n */\nexport function getOrUpdate(map, key, getValue) {\n\tif (map instanceof Map) {\n\t\tif (!map.has(key)) {\n\t\t\tmap.set(key, getValue())\n\t\t}\n\t\treturn map.get(key)\n\t}\n\tif (!(key in map)) {\n\t\tmap[key] = getValue()\n\t}\n\treturn map[key]\n}\n\n/**\n *  @param {number[][]} mat1\n * @param  {...number[][]} mats\n */\nexport function mulMatrices(mat1, ...mats) {\n\treturn mats.reduce(mulMatrix, mat1)\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns\n */\nexport function compareAsc(a, b) {\n\treturn a - b\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns\n */\nexport function compareDesc(a, b) {\n\treturn b - a\n}\n\n/**\n *\n * @param {T[]} xs\n * @param {number} i\n * @param {(arg: T) => T} fn\n *\n * @template T\n */\nexport function update(xs, i, fn) {\n\treturn xs\n\t\t.slice(0, i)\n\t\t.concat(fn(xs[i]))\n\t\t.concat(xs.slice(i + 1))\n}\n\n/**\n * @param {number} x\n */\nexport function inc(x) {\n\treturn x + 1\n}\n\n/**\n * @param {T} xs\n * @param {number} n\n * @returns {[T, T]}\n *\n * @template {{slice(start: number, end?: number): T}} T\n */\nexport function splitAt(xs, n) {\n\treturn [xs.slice(0, n), xs.slice(n)]\n}\n\n/**\n *\n * @param {T[][]} arr\n * @param {boolean} clockwise\n * @returns {T[][]}\n *\n * @template T\n */\nexport function rotate2d(arr, clockwise = true) {\n\tconst height = arr.length\n\tconst width = it(arr)\n\t\t.map((line) => line.length)\n\t\t.max()\n\n\tconst rotated = Array.from({ length: width }, () => Array.from({ length: height }))\n\n\tfor (let y = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tconst value = arr[y]?.[x]\n\t\t\tconst [i, j] = clockwise ? [x, height - y - 1] : [width - x - 1, y]\n\t\t\trotated[i][j] = value\n\t\t}\n\t}\n\n\treturn rotated\n}\n\n/**\n *\n * @param {string[]} strings\n * @param {boolean} clockwise\n */\nexport function rotateStrings2d(strings, clockwise = true) {\n\tconst rotated = rotate2d(\n\t\tstrings.map((str) => str.split(\"\")),\n\t\tclockwise,\n\t)\n\n\treturn rotated.map((line) =>\n\t\tline\n\t\t\t.map((x) => x ?? \" \")\n\t\t\t.join(\"\")\n\t\t\t.trimEnd(),\n\t)\n}\n\n/**\n *\n * @param {string} str\n * @param {boolean} [clockwise]\n *\n * @returns {string}\n */\nexport function rotateString2d(str, clockwise = true) {\n\treturn rotateStrings2d(str.split(\"\\n\"), clockwise).join(\"\\n\")\n}\n\n/**\n *\n * @param  {T} args\n * @returns {T}\n *\n * @template {unknown[]} T\n */\nexport function tuple(...args) {\n\treturn args\n}\n\n/**\n * @type {import(\"./types.js\").RotateFn}\n *\n * @template T\n */\n// @ts-ignore\nexport const rotate = (/** @type {string | string[] | T[][]} */ rotatable, clockwise = true) => {\n\tif (typeof rotatable === \"string\") {\n\t\treturn rotateString2d(rotatable, clockwise)\n\t}\n\tif (typeof rotatable[0] === \"string\") {\n\t\treturn rotateStrings2d(/** @type {string[]} */ (rotatable), clockwise)\n\t}\n\treturn rotate2d(/** @type {T[][]} */ (rotatable), clockwise)\n}\n\n/**\n * Solve a square equation of the form ax^2 + bx + c = 0\n * @param {number} a The coefficient of x^2\n * @param {number} b The coefficient of x\n * @param {number} c The constant term\n * @returns {[] | [number] | [number, number]} An array of solutions for x\n */\nexport function solveSquareEquation(a, b, c) {\n\tconst discriminant = b * b - 4 * a * c\n\tif (discriminant < 0) {\n\t\treturn [] // No real solutions\n\t} else if (discriminant === 0) {\n\t\tconst x = -b / (2 * a)\n\t\treturn [x] // One real solution\n\t} else {\n\t\tconst sqrtDiscriminant = Math.sqrt(discriminant)\n\t\tconst x1 = (-b + sqrtDiscriminant) / (2 * a)\n\t\tconst x2 = (-b - sqrtDiscriminant) / (2 * a)\n\t\treturn [x1, x2] // Two real solutions\n\t}\n}\n\n/**\n * Returns the greatest common divisor of two numbers\n *\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nexport function gcd(a, b) {\n\treturn !b ? a : gcd(b, a % b)\n}\n\n/**\n * Returns the least common multiple of two numbers\n *\n * @param {number} a\n * @param {number} b\n */\nexport function lcm(a, b) {\n\treturn (a * b) / gcd(a, b)\n}\n\n/**\n * @template T\n *\n * @param {T[]} xs\n * @param {number} count\n * @param {T[][]} [result]\n * @param {T[]} [current]\n * @returns {T[][]}\n */\nexport function combinations(xs, count, result = [], current = [], start = 0) {\n\tif (count === 0) {\n\t\tresult.push([...current])\n\t\treturn\n\t}\n\tfor (let i = start; i < xs.length; i++) {\n\t\tcurrent.push(xs[i])\n\t\tcombinations(xs, count - 1, result, current, i + 1)\n\t\tcurrent.pop()\n\t}\n\treturn result\n}\n\n/**\n * @template {Iterable<any>} T\n * @param {T} xs\n * @param {T} delimiters\n * @param {number} count\n *\n * @returns {T extends string ? string : T extends Iterable<infer U> ? U[] : never}\n */\nexport function repeatWithDelimiters(xs, delimiters, count) {\n\t/** @type {any} */\n\tlet result = typeof xs === \"string\" ? \"\" : []\n\tfor (let i = 0; i < count; i++) {\n\t\tif (i > 0) result = result.concat(delimiters)\n\t\tresult = result.concat(xs)\n\t}\n\treturn result\n}\n\n/**\n * @param {object} x\n */\nexport function toString(x) {\n\treturn x.toString()\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n */\nexport function isInRange(value, min, max) {\n\treturn value >= min && value <= max\n}\n\n/**\n * @param {T} x\n * @template T\n * @returns {T}\n */\nexport const identity = (x) => x\n\nexport const asciiBlue = (/** @type {string} */ str) => `\\x1b[34m${str}\\x1b[0m`\nexport const asciiGreen = (/** @type {string} */ str) => `\\x1b[32m${str}\\x1b[0m`\nexport const asciiRed = (/** @type {string} */ str) => `\\x1b[31m${str}\\x1b[0m`\nexport const asciiYellow = (/** @type {string} */ str) => `\\x1b[33m${str}\\x1b[0m`\nexport const asciiMagenta = (/** @type {string} */ str) => `\\x1b[35m${str}\\x1b[0m`\nexport const asciiCyan = (/** @type {string} */ str) => `\\x1b[36m${str}\\x1b[0m`\n","// @ts-check\n\nexport * as V from \"./vec.js\"\nexport * as V3 from \"./vec3.js\"\nexport * as Lib from \"./lib.js\"\nexport * as Itertools from \"./itertools.js\"\nexport { PriorityQueue } from \"./priority-queue.js\"\nexport * as Graph from \"./graph.js\"\nexport * as Array2d from \"./array2d.js\"\n","// @ts-check\n\nimport { Lib } from \"./index.js\"\n\n/**\n * @typedef {readonly [x: number, y: number] & {__opaque: 'StructVec2'}} Vec2\n */\n\n/**\n * @typedef {\"U\" | \"R\"| \"D\" | \"L\"} Dir\n */\n\n/**\n * @typedef {\"^\" | \">\" | \"v\" | \"<\"} Arrow\n */\n\n/**\n * @param {number} x\n * @param {number} y\n * @returns {Vec2}\n */\nconst cache = new Map()\n\n/**\n * Allows compare vecs by reference, e.g. `vec(1, 2) === vec(1, 2)` will be true\n */\nexport function enableCachedVec() {\n\tvec = (x, y) => Lib.getOrUpdate(cache, `${x},${y}`, () => [x, y])\n}\n\n/** @type {(x: number, y: number) => Vec2}  */\nexport let vec = (x, y) => /** @type {any} */ ([x, y])\n\n/** @type {Record<Dir, Vec2>} */\nexport const DIR_TO_VEC = {\n\tU: vec(0, -1),\n\tD: vec(0, 1),\n\tL: vec(-1, 0),\n\tR: vec(1, 0),\n}\n\n/** @type {Record<Arrow, Vec2>} */\nexport const ARROW_TO_VEC = {\n\t\"^\": vec(0, -1),\n\tv: vec(0, 1),\n\t\"<\": vec(-1, 0),\n\t\">\": vec(1, 0),\n}\n\nexport const DIRS_4 = [DIR_TO_VEC.U, DIR_TO_VEC.R, DIR_TO_VEC.D, DIR_TO_VEC.L]\n\nexport const DIRS_8 = [\n\tvec(-1, -1),\n\tvec(0, -1),\n\tvec(1, -1),\n\tvec(-1, 0),\n\tvec(1, 0),\n\tvec(-1, 1),\n\tvec(0, 1),\n\tvec(1, 1),\n]\n\nexport const DIRS_4_DIAG = [vec(-1, -1), vec(1, -1), vec(-1, 1), vec(1, 1)]\n\nexport const around = (/** @type {Vec2} */ vec, dirs = DIRS_8) => dirs.map((d) => add(vec, d))\n\n/**\n *\n * @param {string} dir\n * @returns {Dir}\n */\nexport const asDir = (dir) => {\n\tif (dir in DIR_TO_VEC) {\n\t\treturn /** @type {Dir} */ (dir)\n\t}\n\n\tthrow new Error(`Invalid direction: ${dir}`)\n}\n\n/**\n * @param {string} dir\n * @returns {Arrow}\n */\nexport const asArrow = (dir) => {\n\tif (dir in ARROW_TO_VEC) {\n\t\treturn /** @type {Arrow} */ (dir)\n\t}\n\n\tthrow new Error(`Invalid direction: ${dir}`)\n}\n\n/**\n *\n * @param {Vec2} vec\n * @returns {Vec2}\n */\nexport const signed = ([x, y]) => vec(Math.sign(x), Math.sign(y))\n\n/**\n *\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {Vec2}\n */\nexport const add = ([x1, y1], [x2, y2]) => vec(x1 + x2, y1 + y2)\n\n/**\n *\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {Vec2}\n */\nexport const sub = ([x1, y1], [x2, y2]) => vec(x1 - x2, y1 - y2)\n\n/**\n *\n * @param {Vec2} param0\n * @param {number} s\n * @returns {Vec2}\n */\nexport const scale = ([x, y], s) => vec(x * s, y * s)\n\n/**\n *\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {number}\n */\nexport const cross = ([x1, y1], [x2, y2]) => x1 * y2 - y1 * x2\n\n/**\n *\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {number}\n */\nexport const dot = ([x1, y1], [x2, y2]) => x1 * x2 + y1 * y2\n\n/**\n * @param {Dir} dir\n * @returns {Vec2}\n */\nexport const fromDir = (dir) => DIR_TO_VEC[dir]\n\n/**\n * @param {Arrow} arrow\n * @returns {Vec2}\n */\nexport const fromArrow = (arrow) => ARROW_TO_VEC[arrow]\n\n/**\n * @returns {Vec2}\n */\nexport const zero = () => vec(0, 0)\n\n/**\n * @param {Vec2} vec\n */\nexport const x = (vec) => vec[0]\n\n/**\n * @param {Vec2} vec\n */\nexport const y = (vec) => vec[1]\n\n/**\n * @param {unknown} arg\n * @returns {arg is Vec2}\n */\nexport const isVec = (arg) =>\n\tArray.isArray(arg) && arg.length === 2 && typeof arg[0] === \"number\" && typeof arg[1] === \"number\"\n\n/**\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {boolean}\n */\nexport const eq = (vecA, vecB) => vecA[0] === vecB[0] && vecA[1] === vecB[1]\n\n/**\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {Vec2}\n */\nexport const min = (vecA, vecB) => vec(Math.min(vecA[0], vecB[0]), Math.min(vecA[1], vecB[1]))\n\n/**\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {Vec2}\n */\nexport const max = (vecA, vecB) => vec(Math.max(vecA[0], vecB[0]), Math.max(vecA[1], vecB[1]))\n\n/**\n *\n * @param {Vec2} vecA\n * @returns {Vec2}\n */\nexport const neg = (vecA) => vec(-vecA[0], -vecA[1])\n\n/**\n * @param {Vec2} start\n * @param {Vec2} end\n */\nexport function* segment(start, end) {\n\tconst delta = sub(end, start)\n\tconst dir = signed(delta)\n\tconst steps = cLen(start, end)\n\n\tlet pos = start\n\tyield pos\n\tfor (let i = 0; i < steps; i++) {\n\t\tpos = add(pos, dir)\n\t\tyield pos\n\t}\n}\n\n/**\n * @type {Vec2}\n */\nexport const ZERO = zero()\n\n/**\n * @param {Vec2} vec\n * @returns {number}\n */\nexport const len = (vec) => Math.sqrt(vec[0] ** 2 + vec[1] ** 2)\n\n/**\n *\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {number}\n */\nexport const cLen = (vecA, vecB = zero()) =>\n\tMath.max(Math.abs(vecA[0] - vecB[0]), Math.abs(vecA[1] - vecB[1]))\n\n/**\n * @param {Vec2} vecA\n * @param {Vec2} vecB\n * @returns {number}\n */\nexport const mLen = (vecA, vecB = zero()) =>\n\tMath.abs(vecA[0] - vecB[0]) + Math.abs(vecA[1] - vecB[1])\n\n/**\n *\n * @param {Vec2} vec\n * @param {Vec2} min\n * @param {Vec2} max\n * @returns\n */\nexport const inRange = (vec, min, max) =>\n\tvec[0] >= min[0] && vec[0] <= max[0] && vec[1] >= min[1] && vec[1] <= max[1]\n\n/**\n * @param {Vec2} vec\n */\nexport const toString = ([x, y]) => `${x},${y}`\n\n/**\n * @param {string} str\n * @returns {Vec2}\n */\nexport const fromString = (str) => {\n\tconst [x, y] = str.split(\",\").map(Number)\n\treturn vec(x, y)\n}\n","// @ts-check\n\n/**\n * @typedef {[x: number, y: number, z: number]} Vec3\n */\n\n/**\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @returns {Vec3}\n */\nexport const vec3 = (x, y, z) => [x, y, z]\n\n/** @param {Vec3} vec */\nexport const x = (vec) => vec[0]\n/** @param {Vec3} vec */\nexport const y = (vec) => vec[1]\n/** @param {Vec3} vec */\nexport const z = (vec) => vec[2]\n\n/**\n *\n * @returns {Vec3}\n */\nexport const zero3 = () => [0, 0, 0]\n\n/**\n * @param {Vec3} vecA\n * @param {Vec3} vecB\n * @returns {Vec3}\n */\nexport const add = (vecA, vecB) => [vecA[0] + vecB[0], vecA[1] + vecB[1], vecA[2] + vecB[2]]\n\n/**\n * @param {Vec3} vecA\n * @param {Vec3} vecB\n * @returns {Vec3}\n */\nexport const sub = (vecA, vecB) => [vecA[0] - vecB[0], vecA[1] - vecB[1], vecA[2] - vecB[2]]\n\n/**\n *\n * @param {Vec3} vec\n * @param {number[][]} rot\n * @returns {Vec3}\n */\nexport const rot = (vec, rot) => {\n\tconst [x, y, z] = vec\n\tconst [xRot, yRot, zRot] = rot\n\treturn [\n\t\tx * xRot[0] + y * xRot[1] + z * xRot[2],\n\t\tx * yRot[0] + y * yRot[1] + z * yRot[2],\n\t\tx * zRot[0] + y * zRot[1] + z * zRot[2],\n\t]\n}\n\n/**\n * @param {Vec3} vecA\n * @param {Vec3} vecB\n * @returns {Vec3}\n */\nexport const min = (vecA, vecB) => [\n\tMath.min(vecA[0], vecB[0]),\n\tMath.min(vecA[1], vecB[1]),\n\tMath.min(vecA[2], vecB[2]),\n]\n\n/**\n * @param {Vec3} vecA\n * @param {Vec3} vecB\n * @returns {Vec3}\n */\nexport const max = (vecA, vecB) => [\n\tMath.max(vecA[0], vecB[0]),\n\tMath.max(vecA[1], vecB[1]),\n\tMath.max(vecA[2], vecB[2]),\n]\n\n/**\n *\n * @param {Vec3} vecA\n * @param {Vec3} vecB\n * @returns\n */\nexport const mLen = (vecA, vecB = zero3()) =>\n\tMath.abs(vecA[0] - vecB[0]) + Math.abs(vecA[1] - vecB[1]) + Math.abs(vecA[2] - vecB[2])\n\n/**\n *\n * @param {Vec3} start\n * @param {Vec3} end\n */\nexport function* line(start, end) {\n\tconst delta = vec3(\n\t\tMath.sign(end[0] - start[0]),\n\t\tMath.sign(end[1] - start[1]),\n\t\tMath.sign(end[2] - start[2]),\n\t)\n\n\tlet current = start\n\twhile (mLen(current, end) > 0) {\n\t\tyield current\n\t\tcurrent = add(current, delta)\n\t}\n\tyield end\n}\n\n/**\n * @param {Vec3} vecA\n * @param {Vec3} vecB\n * @returns {number}\n */\nexport const dot = (vecA, vecB) => vecA[0] * vecB[0] + vecA[1] * vecB[1] + vecA[2] * vecB[2]\n\n/**\n * @param {Vec3} vec\n * @returns {Vec3}\n */\nexport const normalized = (vec) => {\n\tconst len = Math.sqrt(dot(vec, vec))\n\treturn [vec[0] / len, vec[1] / len, vec[2] / len]\n}\n\n/**\n * @param {Vec3} vecA\n * @param {Vec3} vecB\n * @returns {Vec3}\n */\nexport const cross = (vecA, vecB) => [\n\tvecA[1] * vecB[2] - vecA[2] * vecB[1],\n\tvecA[2] * vecB[0] - vecA[0] * vecB[2],\n\tvecA[0] * vecB[1] - vecA[1] * vecB[0],\n]\n\n/**\n * @param {Vec3} vec\n * @returns {boolean}\n */\nexport const isZero = (vec) => vec[0] === 0 && vec[1] === 0 && vec[2] === 0\n\n/**\n * @param {Vec3} vec\n * @param {number} factor\n * @returns {Vec3}\n */\nexport const scale = (vec, factor) => [vec[0] * factor, vec[1] * factor, vec[2] * factor]\n\n/**\n * @param {Vec3} vec\n * @returns {number}\n */\nexport const magnitudeSquared = (vec) => dot(vec, vec)\n","// @ts-check\n\n/**\n *\n * @param {IteratorObject<T>} iterable\n * @returns {Iterable<T>}\n * @template T\n */\nexport const it = Iterator.from\n\n/**\n * @param {number} [start]\n * @param {number} [end]\n * @param {number} [step]\n */\nexport function* range(start, end, step = 1) {\n\tif (start === undefined) {\n\t\tstart = 0\n\t}\n\tif (end === undefined) {\n\t\tend = start\n\t\tstart = 0\n\t}\n\tif (step === undefined) {\n\t\tstep = 1\n\t}\n\tfor (let i = start; i < end; i += step) {\n\t\tyield i\n\t}\n}\n\n/**\n *\n * @param {T} x\n * @param {(arg: T, idx: number) => T} f\n *\n * @template T\n */\nexport function* iterate(x, f) {\n\tlet idx = 0\n\tyield x\n\twhile (true) {\n\t\tx = f(x, idx++)\n\t\tyield x\n\t}\n}\n","// @ts-check\n// https://stackoverflow.com/a/42919752\n\nconst top = 0\nconst parent = (/** @type {number} */ i) => ((i + 1) >>> 1) - 1\nconst left = (/** @type {number} */ i) => (i << 1) + 1\nconst right = (/** @type {number} */ i) => (i + 1) << 1\n\n/**\n * @template T\n *\n * @implements {Iterable<T>}\n */\nexport class PriorityQueue {\n\t/**\n\t *\n\t * @param {(a: T, b: T) => number} comparator\n\t */\n\tconstructor(comparator = (a, b) => Number(a > b)) {\n\t\t/** @type {T[]} @private */\n\t\tthis._heap = []\n\t\t/** @private */\n\t\tthis._comparator = comparator\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn {\n\t\t\tnext: () => {\n\t\t\t\tif (this.size() > 1) {\n\t\t\t\t\treturn { value: this.pop(), done: false }\n\t\t\t\t}\n\t\t\t\treturn { done: true, value: this.pop() }\n\t\t\t},\n\t\t}\n\t}\n\n\tget length() {\n\t\treturn this.size()\n\t}\n\n\tsize() {\n\t\treturn this._heap.length\n\t}\n\tisEmpty() {\n\t\treturn this.size() == 0\n\t}\n\tpeek() {\n\t\treturn this._heap[top]\n\t}\n\t/**\n\t * @param  {T[]} values\n\t * @returns\n\t */\n\tpush(...values) {\n\t\tvalues.forEach((value) => {\n\t\t\tthis._heap.push(value)\n\t\t\tthis._siftUp()\n\t\t})\n\t\treturn this.size()\n\t}\n\tpop() {\n\t\tconst poppedValue = this.peek()\n\t\tconst bottom = this.size() - 1\n\t\tif (bottom > top) {\n\t\t\tthis._swap(top, bottom)\n\t\t}\n\t\tthis._heap.pop()\n\t\tthis._siftDown()\n\t\treturn poppedValue\n\t}\n\t/**\n\t * @param {T} value\n\t */\n\treplace(value) {\n\t\tconst replacedValue = this.peek()\n\t\tthis._heap[top] = value\n\t\tthis._siftDown()\n\t\treturn replacedValue\n\t}\n\t/**\n\t * @param {number} i\n\t * @param {number} j\n\t * @private\n\t */\n\t_greater(i, j) {\n\t\treturn this._comparator(this._heap[i], this._heap[j]) < 0\n\t}\n\t/**\n\t * @param {number} i\n\t * @param {number} j\n\t * @private\n\t */\n\t_swap(i, j) {\n\t\t;[this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]]\n\t}\n\t/**\n\t * @private\n\t */\n\t_siftUp() {\n\t\tlet node = this.size() - 1\n\t\twhile (node > top && this._greater(node, parent(node))) {\n\t\t\tthis._swap(node, parent(node))\n\t\t\tnode = parent(node)\n\t\t}\n\t}\n\t/**\n\t * @private\n\t */\n\t_siftDown() {\n\t\tlet node = top\n\t\twhile (\n\t\t\t(left(node) < this.size() && this._greater(left(node), node)) ||\n\t\t\t(right(node) < this.size() && this._greater(right(node), node))\n\t\t) {\n\t\t\tlet maxChild =\n\t\t\t\tright(node) < this.size() && this._greater(right(node), left(node))\n\t\t\t\t\t? right(node)\n\t\t\t\t\t: left(node)\n\t\t\tthis._swap(node, maxChild)\n\t\t\tnode = maxChild\n\t\t}\n\t}\n}\n","// @ts-check\n\nimport { PriorityQueue } from \"./priority-queue.js\"\n\n/**\n * @template T\n *\n * @typedef {Object} PathItem\n * @property {number} distance\n * @property {T} value\n * @property {PathItem<T>} [parent]\n * @property {PathItem<T>[]} [predecessors]\n */\n\n/**\n * @template T\n *\n * @param {(value: T, step: PathItem<T>) => Iterable<T>} getNext\n * @param {T} start\n * @param {(value: T) => unknown} [valToHash]\n *\n * @returns {IteratorObject<PathItem<T>>}\n */\nexport function* dfs(getNext, start, valToHash) {\n\tconst visited = new Set()\n\tconst queue = /** @type {PathItem<T>[]} */ ([{ distance: 0, value: start, parent: null }])\n\tif (valToHash) {\n\t\tvisited.add(valToHash(start))\n\t}\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop()\n\t\tyield current\n\n\t\tfor (const next of getNext(current.value, current)) {\n\t\t\tif (valToHash) {\n\t\t\t\tconst hash = valToHash(next)\n\t\t\t\tif (!visited.has(hash)) {\n\t\t\t\t\tvisited.add(hash)\n\t\t\t\t\tqueue.push({ distance: current.distance + 1, value: next, parent: current })\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tqueue.push({ distance: current.distance + 1, value: next, parent: current })\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @template T\n *\n * @param {(value: T, step: PathItem<T>) => Iterable<T>} getNext\n * @param {T[]} starts\n * @param {(value: T) => unknown} [valToHash]\n *\n * @returns {IteratorObject<PathItem<T>>}\n */\nexport function* bfs(getNext, starts, valToHash) {\n\tconst visited = new Set()\n\n\t/** @type {PathItem<T>[]} */\n\tconst queue = []\n\n\tfor (const start of starts) {\n\t\tqueue.push({ distance: 0, value: start, parent: null })\n\t\tif (valToHash) {\n\t\t\tvisited.add(valToHash(start))\n\t\t}\n\t}\n\n\twhile (queue.length) {\n\t\tconst current = queue.shift()\n\t\tyield current\n\n\t\tfor (const next of getNext(current.value, current)) {\n\t\t\tif (valToHash) {\n\t\t\t\tconst hash = valToHash(next)\n\t\t\t\tif (!visited.has(hash)) {\n\t\t\t\t\tvisited.add(hash)\n\t\t\t\t\tqueue.push({ distance: current.distance + 1, value: next, parent: current })\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tqueue.push({ distance: current.distance + 1, value: next, parent: current })\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @template T\n *\n * @param {(value: T, step: PathItem<T>) => Iterable<T>} getNext\n * @param {(value: T) => number} getDistance\n * @param {T[]} starts\n * @param {(value: T) => unknown} [valToHash]\n */\nexport function* dijkstra(getNext, getDistance, starts, valToHash) {\n\t/** @type {Map<unknown, PathItem<T>>} */\n\tconst visited = new Map()\n\n\t/** @type {PriorityQueue<PathItem<T>>} */\n\tconst queue = new PriorityQueue((a, b) => a.distance - b.distance)\n\n\tfor (const start of starts) {\n\t\t/** @type {PathItem<T>} */\n\t\tconst item = { distance: getDistance(start), value: start, parent: null, predecessors: [] }\n\t\tqueue.push(item)\n\t\tif (valToHash) {\n\t\t\tvisited.set(valToHash(start), item)\n\t\t}\n\t}\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop()\n\t\tyield current\n\n\t\tfor (const next of getNext(current.value, current)) {\n\t\t\tconst newDistance = current.distance + getDistance(next)\n\t\t\tif (valToHash) {\n\t\t\t\tconst hash = valToHash(next)\n\t\t\t\tif (visited.has(hash)) {\n\t\t\t\t\tconst item = visited.get(hash)\n\t\t\t\t\tif (newDistance < item.distance) {\n\t\t\t\t\t\titem.distance = newDistance\n\t\t\t\t\t\titem.parent = current\n\t\t\t\t\t\tqueue.push(item)\n\t\t\t\t\t\titem.predecessors = [current]\n\t\t\t\t\t} else if (newDistance === item.distance) {\n\t\t\t\t\t\titem.predecessors.push(current)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/** @type {PathItem<T>} */\n\t\t\t\t\tconst item = {\n\t\t\t\t\t\tdistance: newDistance,\n\t\t\t\t\t\tvalue: next,\n\t\t\t\t\t\tparent: current,\n\t\t\t\t\t\tpredecessors: [current],\n\t\t\t\t\t}\n\t\t\t\t\tvisited.set(hash, item)\n\t\t\t\t\tqueue.push(item)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tqueue.push({\n\t\t\t\t\tdistance: newDistance,\n\t\t\t\t\tvalue: next,\n\t\t\t\t\tparent: current,\n\t\t\t\t\tpredecessors: [current],\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n","// @ts-check\n\nimport { V } from \"./index.js\"\nimport { mod } from \"./lib.js\"\n\n/**\n * @template T\n * @param {T[][]} xs\n * @param {'lines' | 'columns'} by\n */\nexport function* traverse(xs, by = \"lines\", reverse = false) {\n\tconst minX = 0\n\tconst minY = 0\n\tconst maxX = xs[0].length\n\tconst maxY = xs.length\n\n\tif (by === \"lines\") {\n\t\tconst y0 = reverse ? maxY - 1 : minY\n\t\tconst y1 = reverse ? minY - 1 : maxY\n\t\tconst yStep = reverse ? -1 : 1\n\n\t\tconst x0 = reverse ? maxX - 1 : minX\n\t\tconst x1 = reverse ? minX - 1 : maxX\n\t\tconst xStep = reverse ? -1 : 1\n\n\t\tfor (let y = y0; y !== y1; y += yStep) {\n\t\t\tfor (let x = x0; x !== x1; x += xStep) {\n\t\t\t\tyield { pos: V.vec(x, y), value: xs[y][x] }\n\t\t\t}\n\t\t}\n\t}\n\n\tif (by === \"columns\") {\n\t\tconst x0 = reverse ? maxX - 1 : minX\n\t\tconst x1 = reverse ? minX - 1 : maxX\n\t\tconst xStep = reverse ? -1 : 1\n\n\t\tconst y0 = reverse ? maxY - 1 : minY\n\t\tconst y1 = reverse ? minY - 1 : maxY\n\t\tconst yStep = reverse ? -1 : 1\n\n\t\tfor (let x = x0; x !== x1; x += xStep) {\n\t\t\tfor (let y = y0; y !== y1; y += yStep) {\n\t\t\t\tyield { pos: V.vec(x, y), value: xs[y][x] }\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @template T\n *\n * @param {T[][]} xs\n * @returns {T[][]}\n */\nexport function rotateCW(xs) {\n\tconst res = []\n\n\tfor (let y = 0; y < xs[0].length; y++) {\n\t\tres.push([])\n\t\tfor (let x = 0; x < xs.length; x++) {\n\t\t\tres[y].push(xs[xs.length - x - 1][y])\n\t\t}\n\t}\n\n\treturn res\n}\n\n/**\n * @template T\n *\n * @param {T[][]} xs\n * @returns {T[][]}\n */\nexport function rotateCCW(xs) {\n\tconst res = []\n\n\tfor (let y = 0; y < xs[0].length; y++) {\n\t\tres.push([])\n\t\tfor (let x = 0; x < xs.length; x++) {\n\t\t\tres[y].push(xs[x][xs[0].length - y - 1])\n\t\t}\n\t}\n\n\treturn res\n}\n\n/**\n * @param {string} input\n * @returns {string[][]}\n */\nexport function parse(input) {\n\treturn input.split(\"\\n\").map((l) => l.split(\"\"))\n}\n\n/**\n * @template T\n * @param {number} width\n * @param {number} height\n * @param {(x: number, y: number) => T} getVal\n * @returns {T[][]}\n */\nexport function create(width, height, getVal) {\n\tconst res = []\n\tfor (let y = 0; y < height; y++) {\n\t\tres.push([])\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tres[y].push(getVal(x, y))\n\t\t}\n\t}\n\treturn res\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n * @param {Readonly<V.Vec2>} pos\n */\nexport function get(xs, pos) {\n\treturn xs[pos[1]]?.[pos[0]]\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n * @param {V.Vec2} pos\n * @returns {T}\n */\nexport function modGet(xs, pos) {\n\treturn xs[mod(pos[1], height(xs))][mod(pos[0], width(xs))]\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n * @param {V.Vec2} pos\n * @param {T} value\n */\nexport function set(xs, pos, value) {\n\txs[pos[1]][pos[0]] = value\n\treturn xs\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n * @param {V.Vec2} pos\n * @param {T} value\n */\nexport function imSet(xs, pos, value) {\n\treturn set(clone(xs), pos, value)\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n * @returns {string}\n */\nexport function toString(xs) {\n\treturn xs.map((l) => l.join(\"\")).join(\"\\n\")\n}\n\n/**\n * @template T\n * @template U\n * @param {T[][]} xs\n * @param {(v: T, pos: V.Vec2) => U} fn\n * @returns {U[][]}\n */\nexport function map(xs, fn) {\n\treturn xs.map((l, y) => l.map((v, x) => fn(v, V.vec(x, y))))\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n */\nexport function height(xs) {\n\treturn xs.length\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n */\nexport function width(xs) {\n\treturn xs[0].length\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n * @returns {T[][]}\n */\nexport function clone(xs) {\n\treturn xs.map((l) => l.slice())\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n * @param {V.Vec2} pos\n * @returns {boolean}\n */\nexport function contains(xs, pos) {\n\treturn pos[0] >= 0 && pos[1] >= 0 && pos[0] < width(xs) && pos[1] < height(xs)\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n */\nexport function* borders(xs) {\n\tconst w = width(xs)\n\tconst h = height(xs)\n\tfor (let x = 0; x < w; x++) {\n\t\tyield { pos: V.vec(x, 0), value: xs[0][x] }\n\t\tyield { pos: V.vec(x, h - 1), value: xs[h - 1][x] }\n\t}\n\tfor (let y = 0; y < h; y++) {\n\t\tyield { pos: V.vec(0, y), value: xs[y][0] }\n\t\tyield { pos: V.vec(w - 1, y), value: xs[y][w - 1] }\n\t}\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n */\nexport function rows(xs) {\n\treturn xs\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n */\nexport function columns(xs) {\n\treturn transpose(xs)\n}\n\n/**\n * @template T\n * @param {T[][]} xs\n * @returns {T[][]}\n */\nexport function transpose(xs) {\n\tconst res = []\n\tfor (let x = 0; x < width(xs); x++) {\n\t\tres.push([])\n\t\tfor (let y = 0; y < height(xs); y++) {\n\t\t\tres[x].push(xs[y][x])\n\t\t}\n\t}\n\treturn res\n}\n","// @ts-check\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {number} width\n * @param {number} height\n * @param {number} [scale]\n */\nexport function scaleCanvasToPixelRatio(ctx, width, height, scale = 1) {\n  const pixelRatio = (window.devicePixelRatio ?? 1) * scale\n  ctx.canvas.width = width * scale * pixelRatio\n  ctx.canvas.height = height * scale * pixelRatio\n  ctx.canvas.style.width = `${width * scale}px`\n  ctx.canvas.style.height = `${height * scale}px`\n  ctx.scale(pixelRatio, pixelRatio)\n  return pixelRatio\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$k3N1b","Iterator","prototype","first","x","firstOrDefault","defaultValue","last","skip","i","groupsOf","group","push","length","groupBy","keyFn","map","Map","key","has","sum","xs","reduce","add","multiply","mul","count","predicate","zip","iterableB","iterA","Symbol","iterator","iterB","value","a","done","doneA","next","b","doneB","indexed","range","Infinity","windowed","size","buffer","slice","shift","findIndex","indexOf","skipLast","Array","takeEvery","every","skipInitial","takeWhile","takeUntil","distinct","mapFn","Set","min","undefined","max","maxBy","fn","maxVal","val","countFrequencies","toMap","combinations","$e6c658af85052922$export$bdfcf4c6b5766439","current","start","pop","toArray","valueFn","toSet","lcm","tap","chain","$e9aa1c6a1338d6d9$export$d560c7e4a29451c2","$e9aa1c6a1338d6d9$export$8c826aa0fa59ac68","$e9aa1c6a1338d6d9$export$ad1963a493908da4","$e9aa1c6a1338d6d9$export$96ec731ed4dcb222","$e9aa1c6a1338d6d9$export$8960430cfd85939f","$e9aa1c6a1338d6d9$export$8901015135f2fb22","$e9aa1c6a1338d6d9$export$6bb5b649d10f0d08","$e9aa1c6a1338d6d9$export$648c56967e30a000","$e9aa1c6a1338d6d9$export$6202c886dc3c644a","$e9aa1c6a1338d6d9$export$f262cea8b5044687","$e9aa1c6a1338d6d9$export$842a2cf37af977e1","$e9aa1c6a1338d6d9$export$7b497825bcf7300e","$e9aa1c6a1338d6d9$export$c04a9f24a4230e1f","$e9aa1c6a1338d6d9$export$493d36ec626b6698","$e9aa1c6a1338d6d9$export$e16d8520af44a096","$e9aa1c6a1338d6d9$export$6e3a27864ab166fe","$e9aa1c6a1338d6d9$export$9a3bcbc9ecb31ece","$e9aa1c6a1338d6d9$export$35c77d5f3f89d786","$e9aa1c6a1338d6d9$export$c3de52d0189e49e3","$e9aa1c6a1338d6d9$export$fe114145ae75d197","$e9aa1c6a1338d6d9$export$ed84005ac9356f7a","$e9aa1c6a1338d6d9$export$722fbec263ad908a","$e9aa1c6a1338d6d9$export$64d41e6bd9c791f3","$e9aa1c6a1338d6d9$export$b0d75975ac0be0e1","$e9aa1c6a1338d6d9$export$20f44181aab6418b","$e9aa1c6a1338d6d9$export$339f06398d202c41","$e9aa1c6a1338d6d9$export$616ccb8a781f9858","$e9aa1c6a1338d6d9$export$65e3907585753458","$e9aa1c6a1338d6d9$export$bb628a54ab399bc9","$e9aa1c6a1338d6d9$export$e953585137da4724","$e9aa1c6a1338d6d9$export$f81847884871263e","$e9aa1c6a1338d6d9$export$f686d97e407ec4ef","$e9aa1c6a1338d6d9$export$bdfcf4c6b5766439","result","$e9aa1c6a1338d6d9$export$7760d2980011f652","$e9aa1c6a1338d6d9$export$f84e8e69fd4488a5","$e9aa1c6a1338d6d9$export$6dabbcb26357acf4","$e9aa1c6a1338d6d9$export$f0954fd7d5368655","$e9aa1c6a1338d6d9$export$7defdc6ed6a51a62","$e9aa1c6a1338d6d9$export$4eec9fac012014f5","$e9aa1c6a1338d6d9$export$497fcc5709efd67","$e9aa1c6a1338d6d9$export$fc692673e49534a2","$e9aa1c6a1338d6d9$export$1c465f11f31c489b","$e9aa1c6a1338d6d9$export$75288e2ff97cec76","$2kwEI","yss","minLength","ys","arr","input","split","Number","separator","m","concat","m1","m2","j","k","getValue","mat1","mats","clockwise","height","width","it","line","rotated","from","y","strings","str","join","trimEnd","args","rotatable","c","discriminant","sqrtDiscriminant","Math","sqrt","delimiters","toString","$5f6319ad1808f177$export$c1ee3046673c2e8d","$5f6319ad1808f177$export$202e0172ed3c7be0","$5f6319ad1808f177$export$71a2b7e4ca1456c0","$5f6319ad1808f177$export$9fe09ea95e3d92c4","$5f6319ad1808f177$export$ef1ead63b140c91","$5f6319ad1808f177$export$a96b5f514908765e","$5f6319ad1808f177$export$d6f400809f379ec0","$5f6319ad1808f177$export$e17a4c71e68ee954","$5f6319ad1808f177$export$e16d8520af44a096","$5f6319ad1808f177$export$222e698ec63014a5","$5f6319ad1808f177$export$323d945568d78b44","$5f6319ad1808f177$export$a785de3a2a8dd1aa","$5f6319ad1808f177$export$f93b5905241a7cca","$5f6319ad1808f177$export$dcdf75081b88279d","$5f6319ad1808f177$export$bb646b20bb93d339","$5f6319ad1808f177$export$94132a0e348806d4","$5f6319ad1808f177$export$e588626963949c9c","$5f6319ad1808f177$export$507b5e4d2c64d9af","$5f6319ad1808f177$export$7f9972325ebfd559","$5f6319ad1808f177$export$d141bba7fdc215a3","$5f6319ad1808f177$export$4a5767248b18ef41","$5f6319ad1808f177$export$9fd36a9547ed1c6f","$5f6319ad1808f177$export$9663ddc1cf085b32","$5f6319ad1808f177$export$96ec731ed4dcb222","$5f6319ad1808f177$export$8960430cfd85939f","$5f6319ad1808f177$export$d9493ff0dfa0fdd5","$5f6319ad1808f177$export$6519c25590136c5e","$5f6319ad1808f177$export$89ebf43b06e712ad","$5f6319ad1808f177$export$2a1795c9359f92b9","$5f6319ad1808f177$export$fc1400facf92c78","$5f6319ad1808f177$export$f475ae3ba4db01b5","$5f6319ad1808f177$export$ddf89a9c5af38f94","$5f6319ad1808f177$export$f84e8e69fd4488a5","$5f6319ad1808f177$export$3004f64547af360e","$5f6319ad1808f177$var$cache","getOrUpdate","U","D","L","R","vec","dirs","d","dir","sign","x1","y1","x2","y2","arrow","arg","isArray","vecA","vecB","end","steps","pos","abs","$dce55f6d26d04678$export$9100789c9d999364","$dce55f6d26d04678$export$d141bba7fdc215a3","$dce55f6d26d04678$export$4a5767248b18ef41","$dce55f6d26d04678$export$df995fae86a55f06","$dce55f6d26d04678$export$8768f694db685fa5","$dce55f6d26d04678$export$e16d8520af44a096","$dce55f6d26d04678$export$f93b5905241a7cca","$dce55f6d26d04678$export$855df823ceb9b81b","$dce55f6d26d04678$export$96ec731ed4dcb222","$dce55f6d26d04678$export$8960430cfd85939f","$dce55f6d26d04678$export$f475ae3ba4db01b5","$dce55f6d26d04678$export$53f1d5ea8de3d7c","$dce55f6d26d04678$export$94132a0e348806d4","$dce55f6d26d04678$export$3756780bcd033d85","$dce55f6d26d04678$export$bb646b20bb93d339","$dce55f6d26d04678$export$c46ec7d82fb1f602","$dce55f6d26d04678$export$dcdf75081b88279d","$dce55f6d26d04678$export$11aa58664e42760c","z","rot","xRot","yRot","zRot","delta","len","factor","$1b26c7c9393086b6$export$3486a10f30cf1ee4","$1b26c7c9393086b6$export$c1a059043cc9c119","f","idx","$56055348226025c2$export$8fbd1ac8e83536df","$56055348226025c2$var$parent","$56055348226025c2$var$left","$56055348226025c2$var$right","constructor","comparator","_heap","_comparator","isEmpty","peek","values","forEach","_siftUp","poppedValue","bottom","_swap","_siftDown","replace","replacedValue","_greater","node","maxChild","$98ed1e5c454f93db$export$1c27361af35e8f2","$7nSYv","getNext","getDistance","starts","valToHash","visited","queue","PriorityQueue","distance","item","parent","predecessors","newDistance","hash","$f0afe4b915146d8a$export$df3f009e3d155b20","$f0afe4b915146d8a$export$d6feddd6ae888657","$f0afe4b915146d8a$export$c156984459eedb8a","$f0afe4b915146d8a$export$98e6a39c04603d36","$f0afe4b915146d8a$export$185802fd694ee1f5","$f0afe4b915146d8a$export$3988ae62b71be9a3","$f0afe4b915146d8a$export$e4f849c91c3f2392","$f0afe4b915146d8a$export$ac607276a8fe9f0a","$f0afe4b915146d8a$export$7e3df82ee760448c","$f0afe4b915146d8a$export$adaa4cf7ef1b65be","$f0afe4b915146d8a$export$eb9fa3099d8c243c","$f0afe4b915146d8a$export$9cd59f9826255e47","$f0afe4b915146d8a$export$f84e8e69fd4488a5","$f0afe4b915146d8a$export$871de8747c9eaa88","$f0afe4b915146d8a$export$2344b14b097df817","$f0afe4b915146d8a$export$5a5da632d18030b0","$f0afe4b915146d8a$export$2dd197b55cf13440","$f0afe4b915146d8a$export$53b3c91859018cd4","$f0afe4b915146d8a$export$9cb09a71b7d66923","$8bK5r","by","reverse","maxX","maxY","y0","minY","yStep","x0","minX","xStep","res","l","getVal","mod","w","h","$583bce5f07860537$export$54bc8e3f89acb1cd","ctx","scale","pixelRatio","window","devicePixelRatio","canvas","style"],"version":3,"file":"index.a6661994.js.map"}