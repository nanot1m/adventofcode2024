{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,E,S,I,E,E,S,E,E,S,E,E,SEiCO,MAAM,EAAa,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,KAAK,CAAC,CACjC,EAAA,OAAM,CACN,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EACE,GAAG,GACH,GAAG,CAAC,AAAC,GAAM,EAAE,UAAU,CAAC,KAAM,KAC9B,GAAG,CAAC,AAAC,GAAM,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,AAAA,EAAA,CAAA,CAAE,OAAO,GACtC,EAAE,KAAK,CAEF,EAAQ,AAAuB,GAAM,AAAM,MAAN,GAAa,AAAM,MAAN,GAAa,AAAM,MAAN,EAE/D,EAAe,CAA2B,EAA2B,IAC1E,AAA0B,MAA1B,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,GACd,CAAC,EAAK,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC,EAAK,AAAA,EAAA,CAAA,CAAE,UAAU,CAAC,CAAC,EAAE,CACjC,AAA0B,MAA1B,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,GACjB,CAAC,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC,EAAK,AAAA,EAAA,CAAA,CAAE,UAAU,CAAC,CAAC,EAAG,EAAI,CACjC,CAAC,EAAI,C,I,E,E,S,E,E,SD1CT,MAAM,EAAS,SAAS,cAAc,CAAC,UACvC,GAAI,CAAE,CAAA,aAAkB,iBAAA,EAAoB,MAAM,AAAI,MAAM,aAE5D,MAAM,EAAM,EAAO,UAAU,CAAC,MAC9B,GAAI,CAAC,EAAK,MAAM,AAAI,MAAM,UAM1B,AAAA,CAAA,EAAA,EAAA,uBAAsB,AAAtB,EAAwB,EAAK,IAAyB,KAEtD,MAAM,EAAS,CACd,MAAO,UACP,IAAK,UACL,OAAQ,UACR,KAAM,SACP,EAEA,IAAI,EAAM,EACN,EAAc,KAAO,EA4HzB,MAAM,EAAY,SAAS,cAAc,CAAC,cAC1C,GAAI,CAAE,CAAA,aAAqB,eAAA,EAAkB,MAAM,AAAI,MAAM,WAE7D,EAAU,gBAAgB,CAAC,SAAU,SAAU,CAAC,EAC/C,EAAE,cAAc,GAChB,IAAM,EAAW,IAAI,SAAS,IAAI,GAGlC,AA9HD,SAAc,CAAK,CAAE,CAAG,CAAE,CAAK,EAC9B,qBAAqB,GACrB,IACA,GAAI,CAAC,EAAK,EAAO,CAAG,AAAA,EAAW,GAE3B,EAAQ,OAAO,UAAU,CAAG,EAAI,GAChC,EAAS,EAET,IACH,ECuGM,ADvGS,ECuGL,GAAG,CAAC,AAAC,GACf,EAAI,OAAO,CAAC,AAAC,GACL,AAAS,MAAT,EAAe,CAAC,IAAK,IAAI,CAAG,AAAS,MAAT,EAAe,CAAC,IAAK,IAAI,CAAG,CAAC,EAAM,IAAI,GDxG3E,GAAS,GAGV,IAAM,EAAW,CAAG,CAAC,EAAE,CAAC,MAAM,CACxB,EAAQ,EAAQ,EAEtB,AAAA,CAAA,EAAA,EAAA,uBAAsB,AAAtB,EAAwB,EAAK,EAAO,GAEpC,EAAI,MAAM,CAAC,cAAc,CAAC,CAAE,SAAU,QAAS,GAE/C,IAAM,EAAU,CAA2B,EAA2B,KACrE,EAAI,SAAS,CAAC,EAAG,EAAG,EAAO,GAC3B,EAAI,IAAI,CAAG,CAAA,EAAG,EAAM,YAAY,CAAC,CACjC,EAAI,OAAO,CAAC,CAAC,EAAK,KACjB,EAAI,OAAO,CAAC,CAAC,EAAM,KAClB,EAAI,SAAS,CAAG,QAChB,EAAI,QAAQ,CAAC,EAAI,EAAO,EAAI,EAAO,EAAO,GAE1C,IAAM,EAAU,AAAQ,IAAR,CAGhB,CAAA,EAAI,SAAS,CAAG,EAAO,MAAM,CAC7B,EAAI,QAAQ,CACX,EAAI,EAAQ,EACZ,EAAI,EAAQ,EACZ,EAAQ,AAAU,EAAV,EACR,EAAQ,AAAU,EAAV,GAGT,EAAI,IAAI,CAAG,CAAA,EAAG,EAAM,YAAY,CAAC,CACjC,EAAI,SAAS,CAAG,SAChB,EAAI,YAAY,CAAG,MAEf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,EAAE,CAAC,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC,EAAG,GAAI,KAErB,EAAI,SAAS,CAAG,EAAO,IAAI,CAC3B,EAAI,QAAQ,CAAC,eAAM,EAAI,EAAQ,EAAQ,EAAG,EAAI,IAGlC,MAAT,IAEH,EAAI,SAAS,CAAG,EAAO,GAAG,CAC1B,EAAI,QAAQ,CACX,EAAI,EAAQ,EACZ,EAAI,EAAQ,EACZ,EAAQ,AAAU,EAAV,EACR,EAAQ,AAAU,EAAV,GAET,EAAI,SAAS,CAAG,EAAO,IAAI,CAC3B,EAAI,QAAQ,CAAC,EAAM,EAAI,EAAQ,EAAQ,EAAG,EAAI,EAAQ,AAAU,EAAV,IAG1C,MAAT,IAEH,EAAI,SAAS,CAAG,EAAO,KAAK,CAC5B,EAAI,QAAQ,CACX,EAAI,EAAQ,EACZ,EAAI,EAAQ,EACZ,EAAQ,AAAU,EAAV,EACR,EAAQ,AAAU,EAAV,GAET,EAAI,SAAS,CAAG,EAAO,IAAI,CAC3B,EAAI,QAAQ,CAAC,EAAM,EAAI,EAAQ,EAAQ,EAAG,EAAI,EAAQ,AAAU,EAAV,IAG1C,MAAT,IAEH,EAAI,SAAS,CAAG,EAAO,KAAK,CAC5B,EAAI,QAAQ,CACX,EAAI,EAAQ,EACZ,EAAI,EAAQ,EACZ,EAAQ,EACR,EAAQ,AAAU,EAAV,GAET,EAAI,SAAS,CAAG,EAAO,IAAI,CAC3B,EAAI,QAAQ,CAAC,EAAM,EAAI,EAAQ,EAAQ,EAAG,EAAI,EAAQ,AAAU,EAAV,IAG1C,MAAT,IAEH,EAAI,SAAS,CAAG,EAAO,KAAK,CAC5B,EAAI,QAAQ,CAAC,EAAI,EAAO,EAAI,EAAQ,EAAS,EAAQ,EAAS,EAAQ,AAAU,EAAV,GACtE,EAAI,SAAS,CAAG,EAAO,IAAI,CAC3B,EAAI,QAAQ,CAAC,EAAM,EAAI,EAAQ,EAAQ,EAAG,EAAI,EAAQ,AAAU,EAAV,GAExD,EACD,EACD,EAEM,EAAO,AAAA,UClBS,CAAG,CAAE,CAAM,EACjC,IAAM,EAAQ,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,QAAQ,CAAC,GAAK,IAAI,CAAC,AAAC,GAAM,AAAY,MAAZ,EAAE,KAAK,EAAU,GAAG,CACpE,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,EAAO,KAExB,IAAI,EAAM,EAGV,IAAK,IAAM,KAFX,KAAM,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,EAAK,EAAK,SAEF,GACnB,EAAM,AAlER,SAAkB,CAAG,CAAE,CAAG,CAAE,CAAK,EAChC,IAAM,EAAM,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,SAAS,CAAC,GAClB,EAAY,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC,EAAK,GAE7B,GAAI,AAAgC,MAAhC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,GACpB,OAAO,EAGR,GAAI,AAAgC,MAAhC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,GACpB,OAAO,EAGR,GAAI,EAAM,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,IAAa,CACvC,IAAM,EAAW,EAAE,CAEf,EAAQ,EAAa,EAAK,GAExB,EAAU,IAAI,IACpB,KAAO,EAAM,MAAM,CAAG,GAAG,CACxB,IAAM,EAAM,EAAM,GAAG,GAErB,GAAI,EAAQ,GAAG,CAAC,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,QAAQ,CAAC,IAC1B,SAED,EAAQ,GAAG,CAAC,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,QAAQ,CAAC,IACvB,EAAS,IAAI,CAAC,GAEd,IAAM,EAAO,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC,EAAK,GACpB,EAAM,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,KAC1B,EAAM,IAAI,IAAI,EAAa,EAAK,GAElC,CAGA,GAAI,CADY,EAAS,KAAK,CAAC,AAAC,GAAQ,AAAsC,MAAtC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC,EAAK,KAEnE,OAAO,EAMR,IAAK,IAAM,KAFX,EAAS,IAAI,CAAC,CAAC,EAAG,IAAM,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,IAAI,CAAC,EAAG,GAAa,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,IAAI,CAAC,EAAG,IAEvC,GAAU,CAC3B,IAAM,EAAQ,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,GAC/B,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,EAAK,KACtB,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAAG,CAAC,EAAK,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC,EAAK,GAAM,EACnC,CAEA,OAAO,CACR,CAEA,MAAM,AAAI,MAAM,eACjB,EAeiB,EAAK,EAAK,GACzB,KAAM,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,EAAK,EAAK,EAExB,EDOoB,EAAK,GAEpB,EAAS,EACb,EAAM,sBAAsB,SAAS,EAAO,CAAE,EAC7C,GAAI,EAAK,EAAS,GAAI,CACrB,EAAS,EACT,GAAM,CAAA,MAAE,CAAK,CAAA,KAAE,CAAI,CAAE,CAAG,EAAK,IAAI,GACjC,GAAI,EAAM,CACT,IACA,MACD,CACA,GAAM,CAAC,EAAO,EAAI,CAAG,EACrB,EAAQ,EAAK,EACd,CAEA,EAAM,sBAAsB,EAC7B,EACD,EAUM,AAFS,CAAA,EAAS,GAAG,CAAC,UAAU,YAAc,EAAnD,EAEW,IAAI,GAAI,EAAK,EAAS,GAAG,CAAC,UAAU,aAAe,KAC/D,GAGA,EAAU,aAAa,CAAC,UAAU,WAAW,CAAG,CAAC;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;AAqBqB,sEAAA,CAAC","sources":["<anon>","src/day15/index.js","../js/solutions/15.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n// @ts-check\nparcelRequire(\"bICZs\");\n// @ts-check\n\nvar $3Ru88 = parcelRequire(\"3Ru88\");\n\nvar $i4wae = parcelRequire(\"i4wae\");\n\nvar $kxxN7 = parcelRequire(\"kxxN7\");\nconst $d5336385da37ea28$export$c2ab8e3711492050 = false;\nconst $d5336385da37ea28$export$a92a7d01225c1610 = `\\\n##########\n#..O..O.O#\n#......O.#\n#.OO..O.O#\n#..O@..O.#\n#O#..O...#\n#O..O..O.#\n#.OO.O.OO#\n#....O...#\n##########\n\n<vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^\nvvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v\n><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<\n<<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^\n^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><\n^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^\n>^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^\n<><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>\n^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>\nv^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^`;\nconst $d5336385da37ea28$export$20bebb8aee8dd3f5 = (0, $kxxN7.t).tuple([\n    (0, $3Ru88.Array2d),\n    (0, $kxxN7.t).str().map((l)=>l.replaceAll(\"\\n\", \"\")).map((l)=>l.split(\"\").map((0, $3Ru88.V).asArrow))\n]).parse;\nconst $d5336385da37ea28$var$isBox = (/** @type {string} */ c)=>c === \"O\" || c === \"[\" || c === \"]\";\nconst $d5336385da37ea28$var$boxPositions = (/** @type {string[][]} */ map, /** @type {V.Vec2} */ pos)=>(0, $3Ru88.Array2d).get(map, pos) === \"[\" ? [\n        pos,\n        (0, $3Ru88.V).add(pos, (0, $3Ru88.V).DIR_TO_VEC.R)\n    ] // []\n     : (0, $3Ru88.Array2d).get(map, pos) === \"]\" ? [\n        (0, $3Ru88.V).add(pos, (0, $3Ru88.V).DIR_TO_VEC.L),\n        pos\n    ] // []\n     : [\n        pos\n    ] // O\n;\n/**\n * @param {string[][]} map\n * @param {V.Vec2} pos\n * @param {V.Arrow} arrow\n */ function $d5336385da37ea28$var$makeMove(map, pos, arrow) {\n    const dir = (0, $3Ru88.V).fromArrow(arrow);\n    const targetPos = (0, $3Ru88.V).add(pos, dir);\n    if ((0, $3Ru88.Array2d).get(map, targetPos) === \"#\") return pos;\n    if ((0, $3Ru88.Array2d).get(map, targetPos) === \".\") return targetPos;\n    if ($d5336385da37ea28$var$isBox((0, $3Ru88.Array2d).get(map, targetPos))) {\n        const allBoxes = [];\n        let queue = $d5336385da37ea28$var$boxPositions(map, targetPos);\n        const visited = new Set();\n        while(queue.length > 0){\n            const box = queue.pop();\n            if (visited.has((0, $3Ru88.V).toString(box))) continue;\n            visited.add((0, $3Ru88.V).toString(box));\n            allBoxes.push(box);\n            const next = (0, $3Ru88.V).add(box, dir);\n            if ($d5336385da37ea28$var$isBox((0, $3Ru88.Array2d).get(map, next))) queue.push(...$d5336385da37ea28$var$boxPositions(map, next));\n        }\n        const canMove = allBoxes.every((box)=>(0, $3Ru88.Array2d).get(map, (0, $3Ru88.V).add(box, dir)) !== \"#\");\n        if (!canMove) return pos;\n        // sort by moving direction\n        allBoxes.sort((a, b)=>(0, $3Ru88.V).mLen(b, targetPos) - (0, $3Ru88.V).mLen(a, targetPos));\n        for (const box of allBoxes){\n            const value = (0, $3Ru88.Array2d).get(map, box);\n            (0, $3Ru88.Array2d).set(map, box, \".\");\n            (0, $3Ru88.Array2d).set(map, (0, $3Ru88.V).add(box, dir), value);\n        }\n        return targetPos;\n    }\n    throw new Error(\"Invalid move\");\n}\nfunction* $d5336385da37ea28$export$f13c3f1b35f97f1a(map, arrows) {\n    const start = (0, $3Ru88.Array2d).traverse(map).find((p)=>p.value === \"@\").pos;\n    (0, $3Ru88.Array2d).set(map, start, \".\");\n    let cur = start;\n    yield (0, $i4wae.tuple)(cur, map, \"start\");\n    for (const arrow of arrows){\n        cur = $d5336385da37ea28$var$makeMove(map, cur, arrow);\n        yield (0, $i4wae.tuple)(cur, map, arrow);\n    }\n}\nfunction $d5336385da37ea28$export$6e3fa38cfddb4746(input) {\n    const [map, arrows] = input;\n    const lst = $d5336385da37ea28$export$f13c3f1b35f97f1a(map, arrows).last();\n    return (0, $3Ru88.Array2d).traverse(lst[1]).filter((p)=>p.value === \"O\").map((p)=>(0, $3Ru88.V).y(p.pos) * 100 + (0, $3Ru88.V).x(p.pos)).sum();\n}\nfunction $d5336385da37ea28$export$c1996d2fd5595c6b(map) {\n    return map.map((row)=>row.flatMap((cell)=>{\n            return cell === \"#\" ? [\n                \"#\",\n                \"#\"\n            ] : cell === \"O\" ? [\n                \"[\",\n                \"]\"\n            ] : [\n                cell,\n                \".\"\n            ];\n        }));\n}\nfunction $d5336385da37ea28$export$9fb73bf15c9f3bcd(input) {\n    const [map, arrows] = input;\n    const wideMap = $d5336385da37ea28$export$c1996d2fd5595c6b(map);\n    const lst = $d5336385da37ea28$export$f13c3f1b35f97f1a(wideMap, arrows).last();\n    return (0, $3Ru88.Array2d).traverse(lst[1]).filter((p)=>p.value === \"[\").map((p)=>(0, $3Ru88.V).y(p.pos) * 100 + (0, $3Ru88.V).x(p.pos)).sum();\n}\n\n\n\nvar $3Ru88 = parcelRequire(\"3Ru88\");\n\nvar $7zFg5 = parcelRequire(\"7zFg5\");\nconst $e05c23bb78ca56be$var$canvas = document.getElementById(\"canvas\");\nif (!($e05c23bb78ca56be$var$canvas instanceof HTMLCanvasElement)) throw new Error(\"no canvas\");\nconst $e05c23bb78ca56be$var$ctx = $e05c23bb78ca56be$var$canvas.getContext(\"2d\");\nif (!$e05c23bb78ca56be$var$ctx) throw new Error(\"no ctx\");\nconst $e05c23bb78ca56be$var$INIT_WIDTH = 300;\nconst $e05c23bb78ca56be$var$INIT_HEIGHT = 300;\nconst $e05c23bb78ca56be$var$INIT_SCALE = 1;\n(0, $7zFg5.scaleCanvasToPixelRatio)($e05c23bb78ca56be$var$ctx, $e05c23bb78ca56be$var$INIT_WIDTH * $e05c23bb78ca56be$var$INIT_SCALE, $e05c23bb78ca56be$var$INIT_HEIGHT * $e05c23bb78ca56be$var$INIT_SCALE);\nconst $e05c23bb78ca56be$var$colors = {\n    green: \"#91cfa1\",\n    red: \"#ea859a\",\n    yellow: \"#fef59d\",\n    text: '#fee15b'\n};\nlet $e05c23bb78ca56be$var$raf = 0;\nlet $e05c23bb78ca56be$var$unsubscribe = ()=>{};\n/**\n * @param {string} input\n * @param {CanvasRenderingContext2D} ctx\n * @param {boolean} part2\n */ function $e05c23bb78ca56be$var$draw(input, ctx, part2) {\n    cancelAnimationFrame($e05c23bb78ca56be$var$raf);\n    $e05c23bb78ca56be$var$unsubscribe();\n    let [map, arrows] = (0, $d5336385da37ea28$export$20bebb8aee8dd3f5)(input);\n    let width = window.innerWidth / 2 - 32;\n    let height = width;\n    if (part2) {\n        map = (0, $d5336385da37ea28$export$c1996d2fd5595c6b)(map);\n        width *= 2;\n    }\n    const mapWidth = map[0].length;\n    const scale = width / mapWidth;\n    (0, $7zFg5.scaleCanvasToPixelRatio)(ctx, width, height);\n    ctx.canvas.scrollIntoView({\n        behavior: \"smooth\"\n    });\n    const drawMap = (/** @type {string[][]} */ map, /** @type {V.Vec2} */ robot)=>{\n        ctx.clearRect(0, 0, width, height);\n        ctx.font = `${scale}px monospace`;\n        map.forEach((row, y)=>{\n            row.forEach((cell, x)=>{\n                ctx.fillStyle = 'white';\n                ctx.fillRect(x * scale, y * scale, scale, scale);\n                const padding = scale * 0.05;\n                // draw floor tile\n                ctx.fillStyle = $e05c23bb78ca56be$var$colors.yellow;\n                ctx.fillRect(x * scale + padding, y * scale + padding, scale - padding * 2, scale - padding * 2);\n                ctx.font = `${scale}px monospace`;\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"top\";\n                if ((0, $3Ru88.V).eq((0, $3Ru88.V).vec(x, y), robot)) {\n                    // draw robot emoji\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.text;\n                    ctx.fillText(\"\\uD83E\\uDD16\", x * scale + scale / 2, y * scale);\n                }\n                if (cell === \"#\") {\n                    // draw wall\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.red;\n                    ctx.fillRect(x * scale + padding, y * scale + padding, scale - padding * 2, scale - padding * 2);\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.text;\n                    ctx.fillText(cell, x * scale + scale / 2, y * scale + padding * 2);\n                }\n                if (cell === \"O\") {\n                    // draw box on the floor\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.green;\n                    ctx.fillRect(x * scale + padding, y * scale + padding, scale - padding * 2, scale - padding * 2);\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.text;\n                    ctx.fillText(cell, x * scale + scale / 2, y * scale + padding * 2);\n                }\n                if (cell === \"[\") {\n                    // draw box on the floor\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.green;\n                    ctx.fillRect(x * scale + padding, y * scale + padding, scale - padding, scale - padding * 2);\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.text;\n                    ctx.fillText(cell, x * scale + scale / 2, y * scale + padding * 2);\n                }\n                if (cell === \"]\") {\n                    // draw box on the floor\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.green;\n                    ctx.fillRect(x * scale, y * scale + padding, scale - padding, scale - padding * 2);\n                    ctx.fillStyle = $e05c23bb78ca56be$var$colors.text;\n                    ctx.fillText(cell, x * scale + scale / 2, y * scale + padding * 2);\n                }\n            });\n        });\n    };\n    const iter = (0, $d5336385da37ea28$export$f13c3f1b35f97f1a)(map, arrows);\n    let lastDt = 0;\n    $e05c23bb78ca56be$var$raf = requestAnimationFrame(function render(dt) {\n        if (dt - lastDt > 30) {\n            lastDt = dt;\n            const { value: value, done: done } = iter.next();\n            if (done) {\n                $e05c23bb78ca56be$var$unsubscribe();\n                return;\n            }\n            const [robot, map] = value;\n            drawMap(map, robot);\n        }\n        $e05c23bb78ca56be$var$raf = requestAnimationFrame(render);\n    });\n}\nconst $e05c23bb78ca56be$var$inputForm = document.getElementById(\"input-form\");\nif (!($e05c23bb78ca56be$var$inputForm instanceof HTMLFormElement)) throw new Error(\"no form\");\n$e05c23bb78ca56be$var$inputForm.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    const formData = new FormData(this);\n    const input = formData.get(\"input\")?.toString() ?? \"\";\n    $e05c23bb78ca56be$var$draw(input.trim(), $e05c23bb78ca56be$var$ctx, formData.get(\"part2\")?.toString() === \"on\");\n});\n// @ts-ignore\n$e05c23bb78ca56be$var$inputForm.querySelector(\"#input\").textContent = `\\\n##########\n#..O..O.O#\n#......O.#\n#.OO..O.O#\n#..O@..O.#\n#O#..O...#\n#O..O..O.#\n#.OO.O.OO#\n#....O...#\n##########\n\n<vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^\nvvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v\n><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<\n<<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^\n^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><\n^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^\n>^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^\n<><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>\n^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>\nv^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^`;\n\n\n//# sourceMappingURL=index.94bcbca0.js.map\n","// @ts-check\nimport \"../../../js/modules/iterator-extensions.js\"\nimport { parseInput, moves, widenMap } from \"../../../js/solutions/15.js\"\nimport { V } from \"../../../js/modules/index.js\"\nimport { scaleCanvasToPixelRatio } from \"../common.js\"\n\nconst canvas = document.getElementById(\"canvas\")\nif (!(canvas instanceof HTMLCanvasElement)) throw new Error(\"no canvas\")\n\nconst ctx = canvas.getContext(\"2d\")\nif (!ctx) throw new Error(\"no ctx\")\n\nconst INIT_WIDTH = 300\nconst INIT_HEIGHT = 300\nconst INIT_SCALE = 1\n\nscaleCanvasToPixelRatio(ctx, INIT_WIDTH * INIT_SCALE, INIT_HEIGHT * INIT_SCALE)\n\nconst colors = {\n\tgreen: \"#91cfa1\",\n\tred: \"#ea859a\",\n\tyellow: \"#fef59d\",\n\ttext: '#fee15b'\n}\n\nlet raf = 0\nlet unsubscribe = () => {}\n/**\n * @param {string} input\n * @param {CanvasRenderingContext2D} ctx\n * @param {boolean} part2\n */\nfunction draw(input, ctx, part2) {\n\tcancelAnimationFrame(raf)\n\tunsubscribe()\n\tlet [map, arrows] = parseInput(input)\n\n\tlet width = window.innerWidth / 2 - 32\n\tlet height = width\n\n\tif (part2) {\n\t\tmap = widenMap(map)\n\t\twidth *= 2\n\t}\n\n\tconst mapWidth = map[0].length\n\tconst scale = width / mapWidth\n\n\tscaleCanvasToPixelRatio(ctx, width, height)\n\n\tctx.canvas.scrollIntoView({ behavior: \"smooth\" })\n\n\tconst drawMap = (/** @type {string[][]} */ map, /** @type {V.Vec2} */ robot) => {\n\t\tctx.clearRect(0, 0, width, height)\n\t\tctx.font = `${scale}px monospace`\n\t\tmap.forEach((row, y) => {\n\t\t\trow.forEach((cell, x) => {\n\t\t\t\tctx.fillStyle = 'white'\n\t\t\t\tctx.fillRect(x * scale, y * scale, scale, scale)\n\t\t\t\t\n\t\t\t\tconst padding = scale * 0.05\n\t\t\t\t\n\t\t\t\t// draw floor tile\n\t\t\t\tctx.fillStyle = colors.yellow\n\t\t\t\tctx.fillRect(\n\t\t\t\t\tx * scale + padding,\n\t\t\t\t\ty * scale + padding,\n\t\t\t\t\tscale - padding * 2,\n\t\t\t\t\tscale - padding * 2,\n\t\t\t\t)\n\n\t\t\t\tctx.font = `${scale}px monospace`\n\t\t\t\tctx.textAlign = \"center\"\n\t\t\t\tctx.textBaseline = \"top\"\n\n\t\t\t\tif (V.eq(V.vec(x, y), robot)) {\n\t\t\t\t\t// draw robot emoji\n\t\t\t\t\tctx.fillStyle = colors.text\n\t\t\t\t\tctx.fillText(\"🤖\", x * scale + scale / 2, y * scale)\n\t\t\t\t}\n\n\t\t\t\tif (cell === \"#\") {\n\t\t\t\t\t// draw wall\n\t\t\t\t\tctx.fillStyle = colors.red\n\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\tx * scale + padding,\n\t\t\t\t\t\ty * scale + padding,\n\t\t\t\t\t\tscale - padding * 2,\n\t\t\t\t\t\tscale - padding * 2,\n\t\t\t\t\t)\n\t\t\t\t\tctx.fillStyle = colors.text\n\t\t\t\t\tctx.fillText(cell, x * scale + scale / 2, y * scale + padding * 2)\n\t\t\t\t}\n\n\t\t\t\tif (cell === \"O\") {\n\t\t\t\t\t// draw box on the floor\n\t\t\t\t\tctx.fillStyle = colors.green\n\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\tx * scale + padding,\n\t\t\t\t\t\ty * scale + padding,\n\t\t\t\t\t\tscale - padding * 2,\n\t\t\t\t\t\tscale - padding * 2,\n\t\t\t\t\t)\n\t\t\t\t\tctx.fillStyle = colors.text\n\t\t\t\t\tctx.fillText(cell, x * scale + scale / 2, y * scale + padding * 2)\n\t\t\t\t}\n\n\t\t\t\tif (cell === \"[\") {\n\t\t\t\t\t// draw box on the floor\n\t\t\t\t\tctx.fillStyle = colors.green\n\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\tx * scale + padding,\n\t\t\t\t\t\ty * scale + padding,\n\t\t\t\t\t\tscale - padding,\n\t\t\t\t\t\tscale - padding * 2,\n\t\t\t\t\t)\n\t\t\t\t\tctx.fillStyle = colors.text\n\t\t\t\t\tctx.fillText(cell, x * scale + scale / 2, y * scale + padding * 2)\n\t\t\t\t}\n\n\t\t\t\tif (cell === \"]\") {\n\t\t\t\t\t// draw box on the floor\n\t\t\t\t\tctx.fillStyle = colors.green\n\t\t\t\t\tctx.fillRect(x * scale, y * scale + padding, scale - padding, scale - padding * 2)\n\t\t\t\t\tctx.fillStyle = colors.text\n\t\t\t\t\tctx.fillText(cell, x * scale + scale / 2, y * scale + padding * 2)\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tconst iter = moves(map, arrows)\n\n\tlet lastDt = 0\n\traf = requestAnimationFrame(function render(dt) {\n\t\tif (dt - lastDt > 30) {\n\t\t\tlastDt = dt\n\t\t\tconst { value, done } = iter.next()\n\t\t\tif (done) {\n\t\t\t\tunsubscribe()\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst [robot, map] = value\n\t\t\tdrawMap(map, robot)\n\t\t}\n\n\t\traf = requestAnimationFrame(render)\n\t})\n}\n\nconst inputForm = document.getElementById(\"input-form\")\nif (!(inputForm instanceof HTMLFormElement)) throw new Error(\"no form\")\n\ninputForm.addEventListener(\"submit\", function (e) {\n\te.preventDefault()\n\tconst formData = new FormData(this)\n\tconst input = formData.get(\"input\")?.toString() ?? \"\"\n\n\tdraw(input.trim(), ctx, formData.get(\"part2\")?.toString() === \"on\")\n})\n\n// @ts-ignore\ninputForm.querySelector(\"#input\").textContent = `\\\n##########\n#..O..O.O#\n#......O.#\n#.OO..O.O#\n#..O@..O.#\n#O#..O...#\n#O..O..O.#\n#.OO.O.OO#\n#....O...#\n##########\n\n<vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^\nvvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v\n><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<\n<<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^\n^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><\n^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^\n>^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^\n<><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>\n^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>\nv^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^`\n","// @ts-check\n\nimport { Array2d, V } from \"../modules/index.js\"\nimport { tuple } from \"../modules/lib.js\"\nimport { t } from \"../modules/parser.js\"\n\nexport const useExample = false\n\nexport const exampleInput = `\\\n##########\n#..O..O.O#\n#......O.#\n#.OO..O.O#\n#..O@..O.#\n#O#..O...#\n#O..O..O.#\n#.OO.O.OO#\n#....O...#\n##########\n\n<vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^\nvvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v\n><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<\n<<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^\n^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><\n^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^\n>^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^\n<><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>\n^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>\nv^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^`\n\n/** @typedef {ReturnType<typeof parseInput>} InputType */\n\nexport const parseInput = t.tuple([\n\tArray2d,\n\tt\n\t\t.str()\n\t\t.map((l) => l.replaceAll(\"\\n\", \"\"))\n\t\t.map((l) => l.split(\"\").map(V.asArrow)),\n]).parse\n\nconst isBox = (/** @type {string} */ c) => c === \"O\" || c === \"[\" || c === \"]\"\n\nconst boxPositions = (/** @type {string[][]} */ map, /** @type {V.Vec2} */ pos) =>\n\tArray2d.get(map, pos) === \"[\"\n\t\t? [pos, V.add(pos, V.DIR_TO_VEC.R)] // []\n\t\t: Array2d.get(map, pos) === \"]\"\n\t\t? [V.add(pos, V.DIR_TO_VEC.L), pos] // []\n\t\t: [pos] // O\n\n/**\n * @param {string[][]} map\n * @param {V.Vec2} pos\n * @param {V.Arrow} arrow\n */\nfunction makeMove(map, pos, arrow) {\n\tconst dir = V.fromArrow(arrow)\n\tconst targetPos = V.add(pos, dir)\n\n\tif (Array2d.get(map, targetPos) === \"#\") {\n\t\treturn pos\n\t}\n\n\tif (Array2d.get(map, targetPos) === \".\") {\n\t\treturn targetPos\n\t}\n\n\tif (isBox(Array2d.get(map, targetPos))) {\n\t\tconst allBoxes = []\n\n\t\tlet queue = boxPositions(map, targetPos)\n\n\t\tconst visited = new Set()\n\t\twhile (queue.length > 0) {\n\t\t\tconst box = queue.pop()\n\n\t\t\tif (visited.has(V.toString(box))) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tvisited.add(V.toString(box))\n\t\t\tallBoxes.push(box)\n\n\t\t\tconst next = V.add(box, dir)\n\t\t\tif (isBox(Array2d.get(map, next))) {\n\t\t\t\tqueue.push(...boxPositions(map, next))\n\t\t\t}\n\t\t}\n\n\t\tconst canMove = allBoxes.every((box) => Array2d.get(map, V.add(box, dir)) !== \"#\")\n\t\tif (!canMove) {\n\t\t\treturn pos\n\t\t}\n\n\t\t// sort by moving direction\n\t\tallBoxes.sort((a, b) => V.mLen(b, targetPos) - V.mLen(a, targetPos))\n\n\t\tfor (const box of allBoxes) {\n\t\t\tconst value = Array2d.get(map, box)\n\t\t\tArray2d.set(map, box, \".\")\n\t\t\tArray2d.set(map, V.add(box, dir), value)\n\t\t}\n\n\t\treturn targetPos\n\t}\n\n\tthrow new Error(\"Invalid move\")\n}\n\n/**\n *\n * @param {string[][]} map\n * @param {V.Arrow[]} arrows\n */\nexport function* moves(map, arrows) {\n\tconst start = Array2d.traverse(map).find((p) => p.value === \"@\").pos\n\tArray2d.set(map, start, \".\")\n\n\tlet cur = start\n\tyield tuple(cur, map, \"start\")\n\n\tfor (const arrow of arrows) {\n\t\tcur = makeMove(map, cur, arrow)\n\t\tyield tuple(cur, map, arrow)\n\t}\n}\n\n/**\n * @param {InputType} input\n */\nexport function part1(input) {\n\tconst [map, arrows] = input\n\n\tconst lst = moves(map, arrows).last()\n\n\treturn Array2d.traverse(lst[1])\n\t\t.filter((p) => p.value === \"O\")\n\t\t.map((p) => V.y(p.pos) * 100 + V.x(p.pos))\n\t\t.sum()\n}\n\n/**\n * @param {string[][]} map\n */\nexport function widenMap(map) {\n\treturn map.map((row) =>\n\t\trow.flatMap((cell) => {\n\t\t\treturn cell === \"#\" ? [\"#\", \"#\"] : cell === \"O\" ? [\"[\", \"]\"] : [cell, \".\"]\n\t\t}),\n\t)\n}\n\n/**\n * @param {InputType} input\n */\nexport function part2(input) {\n\tconst [map, arrows] = input\n\tconst wideMap = widenMap(map)\n\n\tconst lst = moves(wideMap, arrows).last()\n\n\treturn Array2d.traverse(lst[1])\n\t\t.filter((p) => p.value === \"[\")\n\t\t.map((p) => V.y(p.pos) * 100 + V.x(p.pos))\n\t\t.sum()\n}\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$3Ru88","$i4wae","$kxxN7","$d5336385da37ea28$export$20bebb8aee8dd3f5","t","tuple","Array2d","str","map","l","replaceAll","split","V","asArrow","parse","$d5336385da37ea28$var$isBox","c","$d5336385da37ea28$var$boxPositions","pos","get","add","DIR_TO_VEC","R","L","$7zFg5","$e05c23bb78ca56be$var$canvas","document","getElementById","HTMLCanvasElement","$e05c23bb78ca56be$var$ctx","getContext","scaleCanvasToPixelRatio","$e05c23bb78ca56be$var$INIT_WIDTH","$e05c23bb78ca56be$var$INIT_HEIGHT","$e05c23bb78ca56be$var$colors","green","red","yellow","text","$e05c23bb78ca56be$var$raf","$e05c23bb78ca56be$var$unsubscribe","$e05c23bb78ca56be$var$inputForm","HTMLFormElement","addEventListener","e","preventDefault","formData","FormData","$e05c23bb78ca56be$var$draw","input","ctx","part2","cancelAnimationFrame","arrows","width","window","innerWidth","height","row","flatMap","cell","mapWidth","length","scale","canvas","scrollIntoView","behavior","drawMap","robot","clearRect","font","forEach","y","x","fillStyle","fillRect","padding","textAlign","textBaseline","eq","vec","fillText","iter","start","traverse","find","p","value","set","cur","arrow","$d5336385da37ea28$var$makeMove","dir","fromArrow","targetPos","allBoxes","queue","visited","Set","box","pop","has","toString","push","next","every","sort","a","b","mLen","lastDt","requestAnimationFrame","render","dt","done","trim","querySelector","textContent"],"version":3,"file":"index.94bcbca0.js.map"}