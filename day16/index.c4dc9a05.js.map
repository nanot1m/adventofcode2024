{"mappings":"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","sources":["<anon>","src/day16/index.js","../js/solutions/16.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n// @ts-check\nparcelRequire(\"bICZs\");\n// @ts-check\n\nvar $dENGy = parcelRequire(\"dENGy\");\n\nvar $3Ru88 = parcelRequire(\"3Ru88\");\nconst $73271751cf8497c6$export$c2ab8e3711492050 = false;\nconst $73271751cf8497c6$export$a92a7d01225c1610 = `\\\n#################\n#...#...#...#..E#\n#.#.#.#.#.#.#.#.#\n#.#.#.#...#...#.#\n#.#.#.#.###.#.#.#\n#...#.#.#.....#.#\n#.#.#.#.#.#####.#\n#.#...#.#.#.....#\n#.#.#####.#.###.#\n#.#.#.......#...#\n#.#.###.#####.###\n#.#.#...#.....#.#\n#.#.#.#####.###.#\n#.#.#.........#.#\n#.#.#.#########.#\n#S#.............#\n#################`;\nconst $73271751cf8497c6$export$20bebb8aee8dd3f5 = (0, $3Ru88.Array2d).parse;\n/**\n * @param {string[][]} input\n * @param {V.Vec2} start\n * @param {V.Vec2} end\n */ function $73271751cf8497c6$var$findOptimalRoute(input, start, end) {\n    /** @param {{ pos: V.Vec2; dir: number; }} x */ const next = (x)=>[\n            {\n                value: {\n                    pos: (0, $3Ru88.V).add(x.pos, (0, $3Ru88.V).DIRS_4[x.dir]),\n                    dir: x.dir\n                },\n                distance: 1\n            },\n            {\n                value: {\n                    pos: x.pos,\n                    dir: (0, $3Ru88.Lib).mod(x.dir + 1, 4)\n                },\n                distance: 1000\n            },\n            {\n                value: {\n                    pos: x.pos,\n                    dir: (0, $3Ru88.Lib).mod(x.dir - 1, 4)\n                },\n                distance: 1000\n            }\n        ].filter(({ value: value })=>(0, $3Ru88.Array2d).get(input, value.pos) !== \"#\");\n    /** @param {{ pos: V.Vec2; dir: number; }} x */ const toHash = (x)=>`${x.pos[0]},${x.pos[1]},${x.dir}`;\n    const init = [\n        {\n            value: {\n                pos: start,\n                dir: 1\n            },\n            distance: 0\n        }\n    ];\n    return (0, $dENGy.dijkstra)(next, init, toHash).find((v)=>(0, $3Ru88.V).eq(v.value.pos, end));\n}\nfunction $73271751cf8497c6$export$6e3fa38cfddb4746(input) {\n    const start = (0, $3Ru88.Array2d).traverse(input).find((v)=>v.value === \"S\").pos;\n    const end = (0, $3Ru88.Array2d).traverse(input).find((v)=>v.value === \"E\").pos;\n    return $73271751cf8497c6$var$findOptimalRoute(input, start, end).distance;\n}\n/**\n * @typedef {import(\"../modules/graph.js\").PathItem<T>} PathItem\n * @template T\n */ /**\n * @param {PathItem<{pos: V.Vec2, dir: number}>} item\n * @param {Set<PathItem<{pos: V.Vec2, dir: number}>>} result\n */ const $73271751cf8497c6$var$getPredecessorsSet = (item, result = new Set())=>{\n    result.add(item);\n    for (const v of item.predecessors)$73271751cf8497c6$var$getPredecessorsSet(v, result);\n    return result;\n};\nfunction $73271751cf8497c6$export$264029930fc37d03(input) {\n    const start = (0, $3Ru88.Array2d).traverse(input).find((v)=>v.value === \"S\").pos;\n    const end = (0, $3Ru88.Array2d).traverse(input).find((v)=>v.value === \"E\").pos;\n    const result = $73271751cf8497c6$var$findOptimalRoute(input, start, end);\n    const visited = $73271751cf8497c6$var$getPredecessorsSet(result);\n    return {\n        visited: visited,\n        start: start,\n        end: end\n    };\n}\nfunction $73271751cf8497c6$export$9fb73bf15c9f3bcd(input) {\n    const { visited: visited } = $73271751cf8497c6$export$264029930fc37d03(input);\n    return visited.values().distinct((x)=>(0, $3Ru88.V).toString(x.value.pos)).count();\n}\n\n\n\nvar $3Ru88 = parcelRequire(\"3Ru88\");\n\nvar $7zFg5 = parcelRequire(\"7zFg5\");\nconst $65a8332f9d3d07aa$var$canvas = document.getElementById(\"canvas\");\nif (!($65a8332f9d3d07aa$var$canvas instanceof HTMLCanvasElement)) throw new Error(\"no canvas\");\nconst $65a8332f9d3d07aa$var$ctx = $65a8332f9d3d07aa$var$canvas.getContext(\"2d\");\nif (!$65a8332f9d3d07aa$var$ctx) throw new Error(\"no ctx\");\nconst $65a8332f9d3d07aa$var$INIT_WIDTH = 300;\nconst $65a8332f9d3d07aa$var$INIT_HEIGHT = 300;\nconst $65a8332f9d3d07aa$var$INIT_SCALE = 1;\n(0, $7zFg5.scaleCanvasToPixelRatio)($65a8332f9d3d07aa$var$ctx, $65a8332f9d3d07aa$var$INIT_WIDTH * $65a8332f9d3d07aa$var$INIT_SCALE, $65a8332f9d3d07aa$var$INIT_HEIGHT * $65a8332f9d3d07aa$var$INIT_SCALE);\nconst $65a8332f9d3d07aa$var$colors = {\n    green: \"#91cfa1\",\n    red: \"#ea859a\",\n    yellow: \"#fef59d\",\n    black: \"black\",\n    white: \"white\"\n};\nlet $65a8332f9d3d07aa$var$raf = 0;\nlet $65a8332f9d3d07aa$var$unsubscribe = ()=>{};\nconst $65a8332f9d3d07aa$var$popupNode = document.createElement(\"div\");\n$65a8332f9d3d07aa$var$popupNode.style.position = \"fixed\";\n$65a8332f9d3d07aa$var$popupNode.style.zIndex = \"1000\";\n$65a8332f9d3d07aa$var$popupNode.style.pointerEvents = \"none\";\n$65a8332f9d3d07aa$var$popupNode.style.padding = \"5px\";\n$65a8332f9d3d07aa$var$popupNode.style.border = \"1px solid black\";\n$65a8332f9d3d07aa$var$popupNode.style.borderRadius = \"5px\";\n$65a8332f9d3d07aa$var$popupNode.style.backgroundColor = \"white\";\n$65a8332f9d3d07aa$var$popupNode.style.color = \"black\";\n$65a8332f9d3d07aa$var$popupNode.style.display = \"none\";\n$65a8332f9d3d07aa$var$popupNode.style.fontFamily = \"monospace\";\n$65a8332f9d3d07aa$var$popupNode.style.fontSize = \"12px\";\ndocument.body.appendChild($65a8332f9d3d07aa$var$popupNode);\n/**\n * @param {string} input\n * @param {CanvasRenderingContext2D} ctx\n * @param {boolean} part2\n */ function $65a8332f9d3d07aa$var$draw(input, ctx, part2) {\n    cancelAnimationFrame($65a8332f9d3d07aa$var$raf);\n    $65a8332f9d3d07aa$var$unsubscribe();\n    let map = (0, $73271751cf8497c6$export$20bebb8aee8dd3f5)(input);\n    let width = map[0].length;\n    let height = map.length;\n    const scale = 10;\n    (0, $7zFg5.scaleCanvasToPixelRatio)(ctx, width * scale, height * scale);\n    ctx.canvas.scrollIntoView({\n        behavior: \"smooth\"\n    });\n    const drawText = (x, y, text, color = $65a8332f9d3d07aa$var$colors.white)=>{\n        ctx.font = `${scale}px monospace`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = color;\n        ctx.fillText(text, x * scale + scale / 2, y * scale + scale / 2);\n    };\n    let hoveredX = -1;\n    let hoveredY = -1;\n    const drawPopup = (x, y, text)=>{\n        $65a8332f9d3d07aa$var$popupNode.textContent = text;\n        $65a8332f9d3d07aa$var$popupNode.style.left = `${x}px`;\n        $65a8332f9d3d07aa$var$popupNode.style.top = `${y - 30}px`;\n        $65a8332f9d3d07aa$var$popupNode.style.display = \"block\";\n    };\n    const hidePopup = ()=>{\n        $65a8332f9d3d07aa$var$popupNode.style.display = \"none\";\n    };\n    const { visited: visited, end: end, start: start } = (0, $73271751cf8497c6$export$264029930fc37d03)(map);\n    const sortedPath = Array.from(visited).sort((a, b)=>a.distance - b.distance);\n    const drawMap = ()=>{\n        $65a8332f9d3d07aa$var$unsubscribe();\n        const mapData = (0, $3Ru88.Array2d).map(map, (x, pos)=>{\n            if (x === \"#\") return {\n                type: \"wall\",\n                distance: 0,\n                dir: 0\n            };\n            if ((0, $3Ru88.V).eq(pos, start)) return {\n                type: \"start\",\n                distance: 0,\n                dir: 1\n            };\n            if ((0, $3Ru88.V).eq(pos, end)) return {\n                type: \"end\",\n                distance: 0,\n                dir: 0\n            };\n            return {\n                type: \"empty\",\n                distance: 0,\n                dir: 0\n            };\n        });\n        for (const x of sortedPath){\n            if ((0, $3Ru88.V).eq(x.value.pos, start)) continue;\n            if ((0, $3Ru88.V).eq(x.value.pos, end)) {\n                (0, $3Ru88.Array2d).set(mapData, x.value.pos, {\n                    type: \"end\",\n                    distance: x.distance,\n                    dir: x.value.dir\n                });\n                continue;\n            }\n            (0, $3Ru88.Array2d).set(mapData, x.value.pos, {\n                type: \"visited\",\n                distance: x.distance,\n                dir: x.value.dir\n            });\n        }\n        function render() {\n            ctx.fillStyle = $65a8332f9d3d07aa$var$colors.black;\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            for (const p of (0, $3Ru88.Array2d).traverse(mapData)){\n                const { type: type } = p.value;\n                const [x, y] = p.pos;\n                let isHovered = x === hoveredX && y === hoveredY;\n                let textColor = isHovered ? $65a8332f9d3d07aa$var$colors.black : $65a8332f9d3d07aa$var$colors.white;\n                if (x === hoveredX && y === hoveredY) {\n                    ctx.fillStyle = $65a8332f9d3d07aa$var$colors.yellow;\n                    ctx.fillRect(x * scale, y * scale, scale, scale);\n                }\n                switch(type){\n                    case \"wall\":\n                        drawText(x, y, \"#\", $65a8332f9d3d07aa$var$colors.green);\n                        break;\n                    case \"start\":\n                        drawText(x, y, \"S\", textColor);\n                        break;\n                    case \"end\":\n                        drawText(x, y, \"E\", textColor);\n                        break;\n                    case \"empty\":\n                        drawText(x, y, \".\", textColor);\n                        break;\n                    case \"visited\":\n                        const ch = [\n                            \"^\",\n                            \">\",\n                            \"v\",\n                            \"<\"\n                        ][p.value.dir];\n                        drawText(x, y, ch, $65a8332f9d3d07aa$var$colors.red);\n                        break;\n                }\n            }\n        }\n        render();\n        function handleMouseOver(e) {\n            const x = Math.floor(e.offsetX / scale);\n            const y = Math.floor(e.offsetY / scale);\n            hoveredX = x;\n            hoveredY = y;\n            const pos = (0, $3Ru88.V).vec(x, y);\n            const data = (0, $3Ru88.Array2d).get(mapData, pos);\n            if (data && [\n                \"visited\",\n                \"start\",\n                \"end\"\n            ].includes(data.type)) {\n                render();\n                drawPopup(e.clientX, e.clientY, `${data.type} ${data.distance}`);\n            } else {\n                render();\n                hidePopup();\n            }\n        }\n        if ($65a8332f9d3d07aa$var$canvas) {\n            $65a8332f9d3d07aa$var$canvas.addEventListener(\"mousemove\", handleMouseOver);\n            $65a8332f9d3d07aa$var$unsubscribe = ()=>$65a8332f9d3d07aa$var$canvas.removeEventListener(\"mousemove\", handleMouseOver);\n        }\n    };\n    drawMap();\n}\nconst $65a8332f9d3d07aa$var$inputForm = document.getElementById(\"input-form\");\nif (!($65a8332f9d3d07aa$var$inputForm instanceof HTMLFormElement)) throw new Error(\"no form\");\n$65a8332f9d3d07aa$var$inputForm.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    const formData = new FormData(this);\n    const input = formData.get(\"input\")?.toString() ?? \"\";\n    $65a8332f9d3d07aa$var$draw(input.trim(), $65a8332f9d3d07aa$var$ctx, formData.get(\"part2\")?.toString() === \"on\");\n});\n// @ts-ignore\n$65a8332f9d3d07aa$var$inputForm.querySelector(\"#input\").textContent = `\\\n###########\n##...######\n##.#.######\n##.#.....E#\n##.#####.##\n#S...###.##\n####.###.##\n####.###.##\n####.###.##\n####.###.##\n####.....##\n###########`;\n\n\n//# sourceMappingURL=index.c4dc9a05.js.map\n","// @ts-check\nimport \"../../../js/modules/iterator-extensions.js\"\nimport { parseInput, findPathWithPredecessors } from \"../../../js/solutions/16.js\"\nimport { Array2d, V } from \"../../../js/modules/index.js\"\nimport { scaleCanvasToPixelRatio } from \"../common.js\"\n\nconst canvas = document.getElementById(\"canvas\")\nif (!(canvas instanceof HTMLCanvasElement)) throw new Error(\"no canvas\")\n\nconst ctx = canvas.getContext(\"2d\")\nif (!ctx) throw new Error(\"no ctx\")\n\nconst INIT_WIDTH = 300\nconst INIT_HEIGHT = 300\nconst INIT_SCALE = 1\n\nscaleCanvasToPixelRatio(ctx, INIT_WIDTH * INIT_SCALE, INIT_HEIGHT * INIT_SCALE)\n\nconst colors = {\n\tgreen: \"#91cfa1\",\n\tred: \"#ea859a\",\n\tyellow: \"#fef59d\",\n\tblack: \"black\",\n\twhite: \"white\",\n}\n\nlet raf = 0\nlet unsubscribe = () => {}\n\nconst popupNode = document.createElement(\"div\")\npopupNode.style.position = \"fixed\"\npopupNode.style.zIndex = \"1000\"\npopupNode.style.pointerEvents = \"none\"\npopupNode.style.padding = \"5px\"\npopupNode.style.border = \"1px solid black\"\npopupNode.style.borderRadius = \"5px\"\npopupNode.style.backgroundColor = \"white\"\npopupNode.style.color = \"black\"\npopupNode.style.display = \"none\"\npopupNode.style.fontFamily = \"monospace\"\npopupNode.style.fontSize = \"12px\"\n\ndocument.body.appendChild(popupNode)\n\n/**\n * @param {string} input\n * @param {CanvasRenderingContext2D} ctx\n * @param {boolean} part2\n */\nfunction draw(input, ctx, part2) {\n\tcancelAnimationFrame(raf)\n\tunsubscribe()\n\tlet map = parseInput(input)\n\n\tlet width = map[0].length\n\tlet height = map.length\n\n\tconst scale = 10\n\n\tscaleCanvasToPixelRatio(ctx, width * scale, height * scale)\n\n\tctx.canvas.scrollIntoView({ behavior: \"smooth\" })\n\n\tconst drawText = (x, y, text, color = colors.white) => {\n\t\tctx.font = `${scale}px monospace`\n\t\tctx.textAlign = \"center\"\n\t\tctx.textBaseline = \"middle\"\n\t\tctx.fillStyle = color\n\t\tctx.fillText(text, x * scale + scale / 2, y * scale + scale / 2)\n\t}\n\n\tlet hoveredX = -1\n\tlet hoveredY = -1\n\n\tconst drawPopup = (x, y, text) => {\n\t\tpopupNode.textContent = text\n\t\tpopupNode.style.left = `${x}px`\n\t\tpopupNode.style.top = `${y - 30}px`\n\t\tpopupNode.style.display = \"block\"\n\t}\n\n\tconst hidePopup = () => {\n\t\tpopupNode.style.display = \"none\"\n\t}\n\n\tconst { visited, end, start } = findPathWithPredecessors(map)\n\n\tconst sortedPath = Array.from(visited).sort((a, b) => a.distance - b.distance)\n\n\tconst drawMap = () => {\n\t\tunsubscribe()\n\n\t\tconst mapData = Array2d.map(map, (x, pos) => {\n\t\t\tif (x === \"#\") return { type: \"wall\", distance: 0, dir: 0 }\n\t\t\tif (V.eq(pos, start)) return { type: \"start\", distance: 0, dir: 1 }\n\t\t\tif (V.eq(pos, end)) return { type: \"end\", distance: 0, dir: 0 }\n\t\t\treturn { type: \"empty\", distance: 0, dir: 0 }\n\t\t})\n\t\tfor (const x of sortedPath) {\n\t\t\tif (V.eq(x.value.pos, start)) continue\n\t\t\tif (V.eq(x.value.pos, end)) {\n\t\t\t\tArray2d.set(mapData, x.value.pos, { type: \"end\", distance: x.distance, dir: x.value.dir })\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tArray2d.set(mapData, x.value.pos, { type: \"visited\", distance: x.distance, dir: x.value.dir })\n\t\t}\n\n\t\tfunction render() {\n\t\t\tctx.fillStyle = colors.black\n\t\t\tctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n\t\t\tfor (const p of Array2d.traverse(mapData)) {\n\t\t\t\tconst { type } = p.value\n\t\t\t\tconst [x, y] = p.pos\n\t\t\t\tlet isHovered = x === hoveredX && y === hoveredY\n\t\t\t\tlet textColor = isHovered ? colors.black : colors.white\n\t\t\t\tif (x === hoveredX && y === hoveredY) {\n\t\t\t\t\tctx.fillStyle = colors.yellow\n\t\t\t\t\tctx.fillRect(x * scale, y * scale, scale, scale)\n\t\t\t\t}\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase \"wall\":\n\t\t\t\t\t\tdrawText(x, y, \"#\", colors.green)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"start\":\n\t\t\t\t\t\tdrawText(x, y, \"S\", textColor)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\tdrawText(x, y, \"E\", textColor)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"empty\":\n\t\t\t\t\t\tdrawText(x, y, \".\", textColor)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"visited\":\n\t\t\t\t\t\tconst ch = [\"^\", \">\", \"v\", \"<\"][p.value.dir]\n\t\t\t\t\t\tdrawText(x, y, ch, colors.red)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trender()\n\n\t\tfunction handleMouseOver(e) {\n\t\t\tconst x = Math.floor(e.offsetX / scale)\n\t\t\tconst y = Math.floor(e.offsetY / scale)\n\t\t\thoveredX = x\n\t\t\thoveredY = y\n\t\t\tconst pos = V.vec(x, y)\n\t\t\tconst data = Array2d.get(mapData, pos)\n\t\t\tif (data && [\"visited\", \"start\", \"end\"].includes(data.type)) {\n\t\t\t\trender()\n\t\t\t\tdrawPopup(e.clientX, e.clientY, `${data.type} ${data.distance}`)\n\t\t\t} else {\n\t\t\t\trender()\n\t\t\t\thidePopup()\n\t\t\t}\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tcanvas.addEventListener(\"mousemove\", handleMouseOver)\n\t\t\tunsubscribe = () => canvas.removeEventListener(\"mousemove\", handleMouseOver)\n\t\t}\n\t}\n\n\tdrawMap()\n}\n\nconst inputForm = document.getElementById(\"input-form\")\nif (!(inputForm instanceof HTMLFormElement)) throw new Error(\"no form\")\n\ninputForm.addEventListener(\"submit\", function (e) {\n\te.preventDefault()\n\tconst formData = new FormData(this)\n\tconst input = formData.get(\"input\")?.toString() ?? \"\"\n\n\tdraw(input.trim(), ctx, formData.get(\"part2\")?.toString() === \"on\")\n})\n\n// @ts-ignore\ninputForm.querySelector(\"#input\").textContent = `\\\n###########\n##...######\n##.#.######\n##.#.....E#\n##.#####.##\n#S...###.##\n####.###.##\n####.###.##\n####.###.##\n####.###.##\n####.....##\n###########`\n","// @ts-check\n\nimport { dijkstra } from \"../modules/graph.js\"\nimport { Array2d, Lib, V } from \"../modules/index.js\"\n\nexport const useExample = false\n\nexport const exampleInput = `\\\n#################\n#...#...#...#..E#\n#.#.#.#.#.#.#.#.#\n#.#.#.#...#...#.#\n#.#.#.#.###.#.#.#\n#...#.#.#.....#.#\n#.#.#.#.#.#####.#\n#.#...#.#.#.....#\n#.#.#####.#.###.#\n#.#.#.......#...#\n#.#.###.#####.###\n#.#.#...#.....#.#\n#.#.#.#####.###.#\n#.#.#.........#.#\n#.#.#.#########.#\n#S#.............#\n#################`\n\n/** @typedef {ReturnType<typeof parseInput>} InputType */\n\nexport const parseInput = Array2d.parse\n\n/**\n * @param {string[][]} input\n * @param {V.Vec2} start\n * @param {V.Vec2} end\n */\nfunction findOptimalRoute(input, start, end) {\n\t/** @param {{ pos: V.Vec2; dir: number; }} x */\n\tconst next = (x) =>\n\t\t[\n\t\t\t{ value: { pos: V.add(x.pos, V.DIRS_4[x.dir]), dir: x.dir }, distance: 1 },\n\t\t\t{ value: { pos: x.pos, dir: Lib.mod(x.dir + 1, 4) }, distance: 1000 },\n\t\t\t{ value: { pos: x.pos, dir: Lib.mod(x.dir - 1, 4) }, distance: 1000 },\n\t\t].filter(({ value }) => Array2d.get(input, value.pos) !== \"#\")\n\n\t/** @param {{ pos: V.Vec2; dir: number; }} x */\n\tconst toHash = (x) => `${x.pos[0]},${x.pos[1]},${x.dir}`\n\n\tconst init = [{ value: { pos: start, dir: 1 }, distance: 0 }]\n\n\treturn dijkstra(next, init, toHash).find((v) => V.eq(v.value.pos, end))\n}\n\n/**\n * @param {InputType} input\n */\nexport function part1(input) {\n\tconst start = Array2d.traverse(input).find((v) => v.value === \"S\").pos\n\tconst end = Array2d.traverse(input).find((v) => v.value === \"E\").pos\n\n\treturn findOptimalRoute(input, start, end).distance\n}\n\n/**\n * @typedef {import(\"../modules/graph.js\").PathItem<T>} PathItem\n * @template T\n */\n\n/**\n * @param {PathItem<{pos: V.Vec2, dir: number}>} item\n * @param {Set<PathItem<{pos: V.Vec2, dir: number}>>} result\n */\nconst getPredecessorsSet = (item, result = new Set()) => {\n\tresult.add(item)\n\tfor (const v of item.predecessors) {\n\t\tgetPredecessorsSet(v, result)\n\t}\n\treturn result\n}\n\n/**\n * @param {InputType} input\n */\nexport function findPathWithPredecessors(input) {\n\tconst start = Array2d.traverse(input).find((v) => v.value === \"S\").pos\n\tconst end = Array2d.traverse(input).find((v) => v.value === \"E\").pos\n\tconst result = findOptimalRoute(input, start, end)\n\tconst visited = getPredecessorsSet(result)\n\treturn { visited, start, end }\n}\n\n/**\n * @param {InputType} input\n */\nexport function part2(input) {\n\tconst { visited } = findPathWithPredecessors(input)\n\n\treturn visited\n\t\t.values()\n\t\t.distinct((x) => V.toString(x.value.pos))\n\t\t.count()\n}\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dENGy","$3Ru88","$73271751cf8497c6$export$20bebb8aee8dd3f5","Array2d","parse","$73271751cf8497c6$var$getPredecessorsSet","item","result","Set","v","add","predecessors","$7zFg5","$65a8332f9d3d07aa$var$canvas","document","getElementById","HTMLCanvasElement","$65a8332f9d3d07aa$var$ctx","getContext","scaleCanvasToPixelRatio","$65a8332f9d3d07aa$var$INIT_WIDTH","$65a8332f9d3d07aa$var$INIT_HEIGHT","$65a8332f9d3d07aa$var$colors","green","red","yellow","black","white","$65a8332f9d3d07aa$var$unsubscribe","$65a8332f9d3d07aa$var$popupNode","createElement","style","position","zIndex","pointerEvents","padding","border","borderRadius","backgroundColor","color","display","fontFamily","fontSize","body","appendChild","$65a8332f9d3d07aa$var$inputForm","HTMLFormElement","addEventListener","e","preventDefault","formData","FormData","$65a8332f9d3d07aa$var$draw","input","ctx","part2","cancelAnimationFrame","map","width","length","height","canvas","scrollIntoView","behavior","drawText","x","y","text","font","textAlign","textBaseline","fillStyle","fillText","scale","hoveredX","hoveredY","drawPopup","textContent","left","top","hidePopup","visited","end","start","traverse","find","value","pos","dijkstra","V","DIRS_4","dir","distance","Lib","mod","filter","get","eq","sortedPath","Array","from","sort","a","b","drawMap","mapData","type","set","render","p","fillRect","textColor","isHovered","handleMouseOver","Math","floor","offsetX","offsetY","vec","data","includes","clientX","clientY","removeEventListener","toString","trim","querySelector"],"version":3,"file":"index.c4dc9a05.js.map"}