{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,I,C,I,I,E,I,K,E,W,C,E,a,C,C,G,I,E,E,SCOA,SAAS,EAAgB,CAAM,EAE9B,IAAK,IAAM,IADQ,CAAC,OAAQ,KAAM,OAAQ,KAAM,IAAK,MAAO,IAAK,IAAI,CAEpE,GAAI,EAAO,QAAQ,CAAC,GACnB,OAAO,EAGT,OAAO,IACR,CA2BA,IAAM,EAA0B,CAC/B,IAA2B,CAC1B,KAAM,MACN,MAAO,AAAC,GAAQ,AAAQ,QAAR,EAChB,MAAO,AAAC,GAAW,SAAS,EAAQ,GACrC,EACA,IAA2B,CAC1B,KAAM,MACN,MAAO,AAAC,GAAQ,AAAQ,QAAR,EAChB,MAAO,AAAC,GAAW,CACpB,EACA,IAA2B,CAC1B,KAAM,MACN,MAAO,AAAC,GAAQ,AAAQ,QAAR,EAChB,MAAO,AAAC,IACP,IAAM,EAAY,EAAgB,GAClC,GAAI,CAAC,EACJ,MAAM,AAAI,MAAM,CAAC,aAAa,EAAE,EAAA,CAAQ,EAEzC,GAAM,CAAC,EAAG,EAAE,CAAG,EAAO,KAAK,CAAC,GAAW,GAAG,CAAC,QAC3C,MAAO,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC,EAAG,EACjB,CACD,EACA,KAA4B,CAC3B,KAAM,OACN,MAAO,AAAC,GAAQ,AAAQ,SAAR,EAChB,MAAO,AAAC,IACP,IAAM,EAAY,EAAgB,GAClC,GAAI,CAAC,EACJ,MAAM,AAAI,MAAM,CAAC,cAAc,EAAE,EAAA,CAAQ,EAE1C,GAAM,CAAC,EAAG,EAAG,EAAE,CAAG,EAAO,KAAK,CAAC,GAAW,GAAG,CAAC,QAC9C,MAAO,AAAA,CAAA,EAAA,EAAA,EAAC,AAAD,EAAG,IAAI,CAAC,EAAG,EAAG,EACtB,CACD,EACA,IAA2B,CAC1B,KAAM,MACN,MAAO,AAAC,GAAQ,EAAI,QAAQ,CAAC,MAC7B,MAAO,CAAC,EAAQ,EAAM,EAAE,IACvB,IAAM,EAAO,EAAI,KAAK,CAAC,EAAG,IACpB,EAAS,EAAgB,GAC/B,GAAI,CAAC,EACJ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAK,MAAM,EAAE,EAAI,CAAC,CAAC,EAE3D,IAAM,EAAY,EAAgB,IAAW,IAC7C,OAAO,EACL,KAAK,CAAC,GACN,MAAM,CAAC,AAAC,GAAM,AAAM,KAAN,GACd,GAAG,CAAC,AAAC,GAAM,EAAO,KAAK,CAAC,EAAE,IAAI,GAAI,GACrC,CACD,EACA,MAA6B,CAC5B,KAAM,QACN,MAAO,AAAC,GAAQ,EAAI,UAAU,CAAC,MAAQ,EAAI,QAAQ,CAAC,KACpD,MAAO,CAAC,EAAQ,EAAM,EAAE,IACvB,IAAM,EAAQ,EAAI,KAAK,CAAC,EAAG,IAAI,KAAK,CAAC,KAC/B,EAAY,EAAgB,IAAW,IAC7C,OAAO,EAAO,KAAK,CAAC,GAAW,GAAG,CAAC,CAAC,EAAG,KACtC,IAAM,EAAS,EAAgB,CAAK,CAAC,EAAE,EACvC,GAAI,CAAC,EACJ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,CAAK,CAAC,EAAE,CAAC,MAAM,EAAE,EAAI,CAAC,CAAC,EAE/D,OAAO,EAAO,KAAK,CAAC,EAAG,CAAK,CAAC,EAAE,CAChC,EACD,CACD,CACD,EAMA,SAAS,EAAgB,CAAI,EAC5B,IAAK,IAAM,KAAO,EACjB,GAAI,CAAO,CAAsC,EAAK,CAAC,KAAK,CAAC,GAC5D,OAAO,CAAO,CAAsC,EAAK,CAG3D,OAAO,IACR,CA+FA,SAAS,EAAe,CAAM,EAC7B,MAAO,CACN,GAAG,CAAM,CAKT,IAAK,AAAC,GAAO,EAAe,CAAE,GAAG,CAAM,CAAE,MAAO,AAAC,GAAM,EAAG,EAAO,KAAK,CAAC,GAAI,EAC5E,CACD,CAqFO,IAAM,EAAI,CApKhB,IAAK,IAAM,EAAe,EAAQ,GAAG,EAErC,IAAK,IAAM,EAAe,EAAQ,GAAG,EAErC,IAAK,IAAM,EAAe,EAAQ,GAAG,EAErC,KAAM,IAAM,EAAe,EAAQ,IAAI,EAQvC,IAAK,CAAC,EAAM,IACX,EAAe,CACd,MAAO,AAAC,GACA,EACL,KAAK,CAAC,GAAa,EAAgB,IAAW,KAC9C,GAAG,CAAC,AAAC,GAAM,EAAE,IAAI,IACjB,MAAM,CAAC,AAAC,GAAM,AAAM,KAAN,GACd,GAAG,CAAC,AAAC,GAAM,EAAK,KAAK,CAAC,GAE1B,GAQD,MAAO,CAAC,EAAO,IACd,EAAe,CAKd,MAAO,AAAC,GAEA,EACL,KAAK,CAAC,GAAa,EAAgB,IAAW,KAC9C,GAAG,CAAC,CAAC,EAAG,IAAM,CAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAEjC,GAOD,KAAM,CAAC,GAAG,IACT,EAAe,CAKd,MAAO,AAAC,IAEP,GAAI,CAAC,EAAO,QAAQ,CAAC,GACpB,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAO,CAAC,CAAC,EAEjD,OAAO,CACR,CACD,GAuGD,MAhDD,SAAe,CAAI,CAAE,CAAM,EAC1B,MAAO,CACN,GAAG,CAAM,CACT,KAAA,CACD,CACD,EA4CC,IAhFD,SAAa,CAAO,CAAE,GAAG,CAAI,EAoB5B,OAAO,EAAe,CAAE,MAfxB,SAAuB,CAAK,EAE3B,IAAM,EAAQ,CAAC,EACX,EAAY,EAChB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CACrC,IAAM,EAAQ,CAAO,CAAC,EAAE,CAAC,MAAM,CAAG,EAC5B,EAAM,CAAO,CAAC,EAAI,EAAE,CAAG,EAAM,OAAO,CAAC,CAAO,CAAC,EAAI,EAAE,CAAE,GAAS,EAAM,MAAM,CAC1E,EAAS,EAAM,KAAK,CAAC,EAAO,GAC5B,CAAC,EAAK,EAAK,CAAG,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAClC,CAAA,CAAK,CAAC,EAAI,CAAG,AArHhB,SAAe,CAAM,CAAE,CAAI,EAC1B,IAAM,EAAS,EAAgB,GAC/B,GAAI,CAAC,EACJ,MAAM,AAAI,MAAM,CAAC,cAAc,EAAE,EAAK,CAAC,CAAC,EAEzC,OAAyB,EAAO,KAAK,CAAC,EAAQ,EAC/C,EA+GsB,EAAQ,GAC3B,EAAY,CACb,CACA,OAA2B,CAC5B,CAE6C,EAC9C,EA4DC,KA3BD,SAAc,CAAO,CAAE,GAAG,CAAI,EAoB7B,OAAO,EAAe,CAAE,MAfxB,SAAuB,CAAK,EAE3B,IAAM,EAAQ,CAAC,EACX,EAAY,EAChB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CACrC,IAAM,EAAQ,CAAO,CAAC,EAAE,CAAC,MAAM,CAAG,EAC5B,EAAM,CAAO,CAAC,EAAI,EAAE,CAAG,EAAM,OAAO,CAAC,CAAO,CAAC,EAAI,EAAE,CAAE,GAAS,EAAM,MAAM,CAC1E,EAAS,EAAM,KAAK,CAAC,EAAO,GAC5B,EAAc,CAAI,CAAC,EAAE,AAC3B,CAAA,CAAK,CAAC,EAAY,IAAI,CAAC,CAAG,EAAY,KAAK,CAAC,GAC5C,EAAY,CACb,CACA,OAA2B,CAC5B,CAE6C,EAC9C,CAOA,C,G,E,S,I,E,E,S,E,E,SE3SO,MAAM,EAAa,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAE,GAAG,CAAC;YACpB,EAAE,QAAQ;YACV,EAAE,QAAQ;YACV,EAAE,QAAQ;;SAEb,EAAE,gBAAgB,CAAC,CAAC,KAAK,CAcrB,EAAW,CACvB,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,IAAM,EACT,EAAG,AAAC,GAAM,EAAE,CAAC,CACb,EAAG,AAAC,GAAM,EAAE,CAAC,CACb,EAAG,AAAC,GAAM,EAAE,CAAC,AACd,EAKa,EAAa,CACzB,EAAG,CAAC,EAAU,KACb,IAAM,EAAU,CAAQ,CAAC,EAAQ,CAAC,EAClC,CAAA,EAAS,CAAC,CAAG,KAAK,KAAK,CAAC,EAAS,CAAC,CAAG,GAAK,GAC1C,EAAS,EAAE,EAAI,CAChB,EACA,EAAG,CAAC,EAAU,KACb,EAAS,CAAC,CAAG,EAAS,CAAC,CAAG,EAC1B,EAAS,EAAE,EAAI,CAChB,EACA,EAAG,CAAC,EAAU,KACb,IAAM,EAAU,CAAQ,CAAC,EAAQ,CAAC,EAClC,CAAA,EAAS,CAAC,CAAG,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,EAAI,EAAS,GAC1B,EAAS,EAAE,EAAI,CAChB,EACA,EAAG,CAAC,EAAU,KACb,EAAS,EAAE,CAAG,AAAe,IAAf,EAAS,CAAC,CAAS,EAAU,EAAS,EAAE,CAAG,CAC1D,EACA,EAAG,CAAC,EAAU,KACb,EAAS,CAAC,CAAG,EAAS,CAAC,CAAG,EAAS,CAAC,CACpC,EAAS,EAAE,EAAI,CAChB,EACA,EAAG,CAAC,EAAU,KACb,IAAM,EAAU,CAAQ,CAAC,EAAQ,CAAC,GAClC,EAAS,MAAM,CAAC,IAAI,CAAC,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,EAAI,EAAS,IAClC,EAAS,EAAE,EAAI,CAChB,EACA,EAAG,CAAC,EAAU,KACb,IAAM,EAAU,CAAQ,CAAC,EAAQ,CAAC,EAClC,CAAA,EAAS,CAAC,CAAG,KAAK,KAAK,CAAC,EAAS,CAAC,CAAG,GAAK,GAC1C,EAAS,EAAE,EAAI,CAChB,EACA,EAAG,CAAC,EAAU,KACb,IAAM,EAAU,CAAQ,CAAC,EAAQ,CAAC,EAClC,CAAA,EAAS,CAAC,CAAG,KAAK,KAAK,CAAC,EAAS,CAAC,CAAG,GAAK,GAC1C,EAAS,EAAE,EAAI,CAChB,CACD,E,E,S,I,E,E,SD/EA,MAAM,EAAS,SAAS,cAAc,CAAC,UACvC,GAAI,CAAE,CAAA,aAAkB,iBAAA,EAAoB,MAAM,AAAI,MAAM,aAE5D,MAAM,EAAM,EAAO,UAAU,CAAC,MAC9B,GAAI,CAAC,EAAK,MAAM,AAAI,MAAM,UAM1B,AAAA,CAAA,EAAA,EAAA,uBAAsB,AAAtB,EAAwB,EAAK,IAAyB,KAEtD,MAAM,EAAS,CACd,MAAO,UACP,IAAK,UAEL,KAAM,OACN,MAAO,QACP,MAAO,OACR,EAEA,IAAI,EAAM,EACN,EAAc,KAAO,EAEzB,MAAM,EAAY,SAAS,aAAa,CAAC,MACzC,CAAA,EAAU,KAAK,CAAC,QAAQ,CAAG,QAC3B,EAAU,KAAK,CAAC,MAAM,CAAG,OACzB,EAAU,KAAK,CAAC,aAAa,CAAG,OAChC,EAAU,KAAK,CAAC,OAAO,CAAG,MAC1B,EAAU,KAAK,CAAC,MAAM,CAAG,kBACzB,EAAU,KAAK,CAAC,YAAY,CAAG,MAC/B,EAAU,KAAK,CAAC,eAAe,CAAG,QAClC,EAAU,KAAK,CAAC,KAAK,CAAG,QACxB,EAAU,KAAK,CAAC,OAAO,CAAG,OAC1B,EAAU,KAAK,CAAC,UAAU,CAAG,YAC7B,EAAU,KAAK,CAAC,QAAQ,CAAG,OAE3B,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,MAAM,EAAkB,CACvB,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,GACJ,EAEM,EAAoB,CAAC,EAAI,EAAS,IACvC,AAAI,AAAO,IAAP,EACI,CAAC,UAAU,EAAE,CAAe,CAAC,EAAQ,CAAA,CAAE,CAE3C,AAAO,IAAP,EACI,CAAC,QAAQ,EAAE,EAAA,CAAS,CAExB,AAAO,IAAP,EACI,CAAC,IAAI,EAAE,CAAe,CAAC,EAAQ,CAAC,IAAI,CAAC,CAEzC,AAAO,IAAP,EACI,CAAC,SAAS,EAAE,EAAQ,SAAS,CAAC,CAElC,AAAO,IAAP,EACI,YAEJ,AAAO,IAAP,EACI,CAAC,MAAM,EAAE,CAAe,CAAC,EAAQ,CAAC,IAAI,CAAC,CAE3C,AAAO,IAAP,EACI,CAAC,UAAU,EAAE,CAAe,CAAC,EAAQ,CAAA,CAAE,CAE3C,AAAO,IAAP,EACI,CAAC,UAAU,EAAE,CAAe,CAAC,EAAQ,CAAA,CAAE,QAIhD,IAAI,EAAe,CAAA,EAEnB,MAAM,EAAc,SAAS,cAAc,CAAC,YAC5C,GAAI,CAAE,CAAA,aAAuB,iBAAA,EAAoB,MAAM,AAAI,MAAM,sBAejE,EAAY,gBAAgB,CAAC,QAb7B,WAEC,GADA,EAAe,CAAC,EACZ,CAAE,CAAA,aAAuB,iBAAA,EAAoB,MAAM,AAAI,MAAM,qBACjE,CAAA,EAAY,WAAW,CAAG,EAAe,QAAU,UACpD,GAWA,MAAM,EAAS,SAAS,cAAc,CAAC,gBACvC,GAAI,CAAE,CAAA,aAAkB,mBAAA,EAAsB,MAAM,AAAI,MAAM,aAE9D,MAAM,EAAe,AAAC,IACrB,EAAO,WAAW,EAAI,EAAO,KAE7B,EAAO,SAAS,CAAG,EAAO,YAAY,AACvC,EAEM,EAAc,KACnB,EAAO,WAAW,CAAG,EACtB,EAgKM,EAAY,SAAS,cAAc,CAAC,cAC1C,GAAI,CAAE,CAAA,aAAqB,eAAA,EAAkB,MAAM,AAAI,MAAM,WAI7D,EAAU,gBAAgB,CAAC,SAAU,SAAU,CAAC,EAC/C,EAAE,cAAc,GAChB,IAAM,EAAW,IAAI,SAAS,IAAI,EAOlC,GAFA,AArKD,SAAc,CAAK,CAAE,CAAG,CAAE,CAAK,EAC9B,qBAAqB,GACrB,IAEA,GAAI,CAAA,EAAE,CAAC,CAAA,EAAE,CAAC,CAAA,EAAE,CAAC,CAAA,QAAE,CAAO,CAAE,CAAG,AAAA,EAAW,GAEhC,EAAW,CAChB,EAAA,EACA,EAAA,EACA,EAAA,EACA,GAAI,EACJ,OAAQ,EAAE,AACX,EAKI,EAAS,KAAK,GAAG,CAAC,GAAI,EAAQ,MAAM,CAAG,GAE3C,AAAA,CAAA,EAAA,EAAA,uBAAsB,AAAtB,EAAwB,EAAK,IAAe,AAL9B,GAK8B,GAE5C,EAAI,MAAM,CAAC,cAAc,CAAC,CAAE,SAAU,QAAS,GAE/C,IAAM,EAAW,CAAC,EAAG,EAAG,EAAM,KAC7B,EAAI,IAAI,CAAG,iBACX,EAAI,SAAS,CAAG,SAChB,EAAI,YAAY,CAAG,SACnB,EAAI,SAAS,CAAG,EAChB,EAAI,QAAQ,CAAC,EAAM,AAdN,GAcM,EAAY,EAAW,AAd7B,GAc6B,EAAY,EAAY,IACnE,EAgBA,SAAS,EAAW,CAAC,CAAE,CAAC,CAAE,CAAI,CAAE,EAAQ,EAAO,KAAK,EACnD,EAAK,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,EAAI,IAAM,EAAS,EAAI,EAAG,EAAG,EAAI,GAC1D,CAoCA,SAAS,IACR,EAAI,SAAS,CAAG,EAAO,KAAK,CAC5B,EAAI,QAAQ,CAAC,EAAG,EAAG,IAAe,AAvErB,GAuEqB,GAGlC,EAAI,WAAW,CAAG,YAClB,EAAI,SAAS,CAAG,EAChB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,IAC3B,IAAK,IAAI,EAAI,EAAG,EA3EN,GA2EiB,IAC1B,EAAI,UAAU,CAAC,AA9EJ,GA8EI,EAAW,AA9Ef,GA8Ee,EA9Ef,GAAA,IAkFb,AA/CD,CAAA,SAA6B,CAAC,CAAE,CAAC,CAAE,EAAQ,EAAO,KAAK,EACtD,EA8CoB,EAAG,EA9CN,CAAC,IAAI,EAAE,EAAS,CAAC,CAAA,CAAE,CAAE,GACtC,EA6CoB,EA7CN,EAAO,CAAC,IAAI,EAAE,EAAS,CAAC,CAAA,CAAE,CAAE,GAC1C,EA4CoB,EA5CN,EAAO,CAAC,IAAI,EAAE,EAAS,CAAC,CAAA,CAAE,CAAE,GAC1C,EAAW,EAAG,EAAI,EAAG,CAAC,IAAI,EAAE,EAAS,EAAE,CAAA,CAAE,CAAE,GAC3C,EAAW,EAAG,EAAI,EAAG,CAAC,KAAK,EAAE,EAAS,MAAM,CAAC,IAAI,CAAC,KAAA,CAAM,CAAE,EAC3D,CAAA,EAyCqB,EAAG,GACvB,AAtCD,SAAuB,CAAC,CAAE,CAAC,CAAE,EAAQ,EAAO,KAAK,EAChD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,MAAM,CAAE,IAAK,CACxC,IAAM,EAAK,CAAO,CAAC,EAAE,CACrB,EALS,EAOR,AAiCgB,EAjCZ,EACJ,CAAA,EAAG,EAAA,CAAI,CACP,IAAM,EAAS,EAAE,CAAG,EAAO,KAAK,CAAG,IAAM,EAAS,EAAE,CAAG,EAAI,EAAO,GAAG,CAAG,EAE1E,CACD,EAZW,EAwCQ,GAClB,AA3BD,SAAkB,CAAC,CAAE,CAAC,CAAE,EAAQ,EAAO,KAAK,EAC3C,EAAW,EAAO,AA0BL,EA1BS,EAAS,EAAE,CAAE,IAAK,EACzC,EAhBW,EAyCG,GACb,AAxBD,SAA0B,CAAC,CAAE,CAAC,CAAE,EAAQ,EAAO,IAAI,EAClD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,MAAM,CAAE,GAAK,EAAG,CAC3C,IAAM,EAAK,CAAO,CAAC,EAAE,CACf,EAAU,CAAO,CAAC,EAAI,EAAE,CAC9B,EAAW,EAAO,AAoBE,EApBE,EAAG,EAAkB,EAAI,EAAS,GAAW,EACpE,CACD,EAxBW,EA0CW,EACtB,CAIA,SAAS,EAAgB,CAAC,EACJ,EAAE,OAAO,CACT,EAAE,OAAO,AAG/B,CAPA,IASI,IACH,EAAO,gBAAgB,CAAC,YAAa,GACrC,EAAc,IAAM,EAAO,mBAAmB,CAAC,YAAa,IAG7D,IAAI,EAAI,EAmBJ,EAAS,EACb,EAAM,sBAAsB,SAAS,EAAK,CAAE,EAC3C,GAAI,CAAC,EAAc,CAClB,EAAS,EACT,EAAM,sBAAsB,GAC5B,MACD,CAEI,EAAK,EAAS,MACjB,EAAS,EACT,AA5BF,WACC,GAAI,EAAS,EAAE,EAAI,EAAQ,MAAM,CAAE,EAClC,AAlJH,WAEC,GADA,EAAe,CAAA,EACX,CAAE,CAAA,aAAuB,iBAAA,EAAoB,MAAM,AAAI,MAAM,qBACjE,CAAA,EAAY,WAAW,CAAG,OAC1B,EAAY,QAAQ,CAAG,CAAA,CACxB,IA8IG,MACD,CACA,AAAA,CAAA,SCvJiC,CAAO,CAAE,CAAQ,EACnD,IAAM,EAAW,CAAO,CAAC,EAAS,EAAE,CAAC,CAC/B,EAAU,CAAO,CAAC,EAAS,EAAE,CAAG,EAAE,CAExC,CAAU,CAAC,EAAS,CAAC,EAAU,EAChC,CDkJE,EAAmB,EAAS,GAE5B,EAAa,wBACb,EAAa,CAAC,KAAK,EAAE,IAAA,CAAK,EAC1B,EAAa,CAAC,GAAG,EAAE,EAAS,CAAC,CAAA,CAAE,EAC/B,EAAa,CAAC,GAAG,EAAE,EAAS,CAAC,CAAA,CAAE,EAC/B,EAAa,CAAC,GAAG,EAAE,EAAS,CAAC,CAAA,CAAE,EAC/B,EAAa,CAAC,IAAI,EAAE,EAAS,EAAE,CAAA,CAAE,EACjC,EAAa,CAAC,QAAQ,EAAE,EAAS,MAAM,CAAC,IAAI,CAAC,KAAA,CAAM,EACnD,EAAa,wBACb,EAAa,GACd,IAaE,KAGD,EAAM,sBAAsB,EAC7B,EACD,EAcM,AAJS,CAAA,EAAS,GAAG,CAAC,UAAU,YAAc,EAAnD,EAIW,IAAI,GAAI,EAAK,EAAS,GAAG,CAAC,UAAU,YAE3C,CAAE,CAAA,aAAuB,iBAAA,EAAoB,MAAM,AAAI,MAAM,qBACjE,CAAA,EAAY,QAAQ,CAAG,CAAA,EAEvB,GACD,GAGA,EAAU,aAAa,CAAC,UAAU,WAAW,CAAG,CAAC;A;A;A;A;AAKT,wCAAA,CAAC","sources":["<anon>","../js/modules/parser.js","src/day17/index.js","../js/solutions/17.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"kxxN7\", function(module, exports) {\n\n$parcel$export(module.exports, \"t\", () => $ef4119ef3a0ad5e7$export$625550452a3fa3ec);\n// @ts-check\n\nvar $3Ru88 = parcelRequire(\"3Ru88\");\n/**\n * @param {string} strVal\n */ function $ef4119ef3a0ad5e7$var$tryGetSeparator(strVal) {\n    const separators = [\n        \"\\n\\n\",\n        \"\\n\",\n        \" -> \",\n        \", \",\n        \",\",\n        \" - \",\n        \" \",\n        \"-\"\n    ];\n    for (const separator of separators){\n        if (strVal.includes(separator)) return separator;\n    }\n    return null;\n}\n/**\n * @template T\n *\n * @typedef {Object} ParserRegistryItem\n * @property {(input: string) => boolean} check\n * @property {(input: string, key?: string) => T} parse\n *\n */ /**\n * @template {ParserRegistryItem<unknown>} T\n *\n * @typedef {T & {withSeparator: (separator: string) => T}} WithSeparator\n */ /**\n * @template {Record<string, ParserRegistryItem<unknown>>} T\n *\n * @param {T} parsers\n * @returns {T}\n */ function $ef4119ef3a0ad5e7$var$registerParsers(parsers) {\n    return parsers;\n}\nconst $ef4119ef3a0ad5e7$var$PARSERS = $ef4119ef3a0ad5e7$var$registerParsers({\n    int: /** @type {const} */ {\n        name: \"int\",\n        check: (key)=>key === \"int\",\n        parse: (strVal)=>parseInt(strVal, 10)\n    },\n    str: /** @type {const} */ {\n        name: \"str\",\n        check: (key)=>key === \"str\",\n        parse: (strVal)=>strVal\n    },\n    vec: /** @type {const} */ {\n        name: \"vec\",\n        check: (key)=>key === \"vec\",\n        parse: (strVal)=>{\n            const separator = $ef4119ef3a0ad5e7$var$tryGetSeparator(strVal);\n            if (!separator) throw new Error(`Invalid vec: ${strVal}`);\n            const [x, y] = strVal.split(separator).map(Number);\n            return (0, $3Ru88.V).vec(x, y);\n        }\n    },\n    vec3: /** @type {const} */ {\n        name: \"vec3\",\n        check: (key)=>key === \"vec3\",\n        parse: (strVal)=>{\n            const separator = $ef4119ef3a0ad5e7$var$tryGetSeparator(strVal);\n            if (!separator) throw new Error(`Invalid vec3: ${strVal}`);\n            const [x, y, z] = strVal.split(separator).map(Number);\n            return (0, $3Ru88.V3).vec3(x, y, z);\n        }\n    },\n    arr: /** @type {const} */ {\n        name: \"arr\",\n        check: (key)=>key.endsWith(\"[]\"),\n        parse: (strVal, key = \"\")=>{\n            const type = key.slice(0, -2);\n            const parser = $ef4119ef3a0ad5e7$var$getParserByType(type);\n            if (!parser) throw new Error(`Invalid array type \"${type}\" in \"${key}\"`);\n            const separator = $ef4119ef3a0ad5e7$var$tryGetSeparator(strVal) ?? \",\";\n            return strVal.split(separator).filter((x)=>x !== \"\").map((x)=>parser.parse(x.trim(), type));\n        }\n    },\n    tuple: /** @type {const} */ {\n        name: \"tuple\",\n        check: (key)=>key.startsWith(\"(\") && key.endsWith(\")\"),\n        parse: (strVal, key = \"\")=>{\n            const types = key.slice(1, -1).split(\",\");\n            const separator = $ef4119ef3a0ad5e7$var$tryGetSeparator(strVal) ?? \",\";\n            return strVal.split(separator).map((x, i)=>{\n                const parser = $ef4119ef3a0ad5e7$var$getParserByType(types[i]);\n                if (!parser) throw new Error(`Invalid tuple type \"${types[i]}\" in \"${key}\"`);\n                return parser.parse(x, types[i]);\n            });\n        }\n    }\n});\n/**\n * @param {string} type\n * @returns {ParserRegistryItem<unknown> | null}\n */ function $ef4119ef3a0ad5e7$var$getParserByType(type) {\n    for(const key in $ef4119ef3a0ad5e7$var$PARSERS){\n        if ($ef4119ef3a0ad5e7$var$PARSERS[/** @type {keyof typeof PARSERS} */ key].check(type)) return $ef4119ef3a0ad5e7$var$PARSERS[/** @type {keyof typeof PARSERS} */ key];\n    }\n    return null;\n}\n/**\n * @template T\n *\n * @param {string} strVal\n * @param {string} type\n * @returns {T}\n */ function $ef4119ef3a0ad5e7$var$parse(strVal, type) {\n    const parser = $ef4119ef3a0ad5e7$var$getParserByType(type);\n    if (!parser) throw new Error(`Invalid type \"${type}\"`);\n    return /** @type {T} */ parser.parse(strVal, type);\n}\n/**\n * @template T\n *\n * @typedef {Object} Parser\n * @property {(strVal: string) => T} parse\n */ const $ef4119ef3a0ad5e7$var$commonTypes = {\n    int: ()=>$ef4119ef3a0ad5e7$var$mappableParser($ef4119ef3a0ad5e7$var$PARSERS.int),\n    str: ()=>$ef4119ef3a0ad5e7$var$mappableParser($ef4119ef3a0ad5e7$var$PARSERS.str),\n    vec: ()=>$ef4119ef3a0ad5e7$var$mappableParser($ef4119ef3a0ad5e7$var$PARSERS.vec),\n    vec3: ()=>$ef4119ef3a0ad5e7$var$mappableParser($ef4119ef3a0ad5e7$var$PARSERS.vec3),\n    /**\n\t * @template T\n\t *\n\t * @param {Parser<T>} type\n\t * @param {string | RegExp} [separator]\n\t */ arr: (type, separator)=>$ef4119ef3a0ad5e7$var$mappableParser({\n            parse: (strVal)=>{\n                return strVal.split(separator ?? $ef4119ef3a0ad5e7$var$tryGetSeparator(strVal) ?? \",\").map((x)=>x.trim()).filter((x)=>x !== \"\").map((x)=>type.parse(x));\n            }\n        }),\n    /**\n\t * @template {Parser<unknown>[]} T\n\t *\n\t * @param {import(\"ts-toolbelt\").F.Narrow<T>} types\n\t * @param {string} [separator]\n\t */ tuple: (types, separator)=>$ef4119ef3a0ad5e7$var$mappableParser({\n            /**\n\t\t\t * @param {string} strVal\n\t\t\t * @returns {{[K in keyof T]: T[K] extends Parser<infer U> ? U : never}}\n\t\t\t */ parse: (strVal)=>{\n                // @ts-ignore\n                return strVal.split(separator ?? $ef4119ef3a0ad5e7$var$tryGetSeparator(strVal) ?? \",\").map((x, i)=>types[i].parse(x));\n            }\n        }),\n    /**\n\t * @template {readonly string[]} T\n\t *\n\t * @param {T} values\n\t */ enum: (...values)=>$ef4119ef3a0ad5e7$var$mappableParser({\n            /**\n\t\t\t * @param {string} strVal\n\t\t\t * @returns {T[number]}\n\t\t\t */ parse: (strVal)=>{\n                // @ts-ignore\n                if (!values.includes(strVal)) throw new Error(`Invalid enum value \"${strVal}\"`);\n                return strVal;\n            }\n        })\n};\n/**\n * @template T\n * @param {Parser<T>} parser\n */ function $ef4119ef3a0ad5e7$var$mappableParser(parser) {\n    return {\n        ...parser,\n        /**\n\t\t * @template U\n\t\t * @param {(val: T) => U} fn\n\t\t */ map: (fn)=>$ef4119ef3a0ad5e7$var$mappableParser({\n                ...parser,\n                parse: (x)=>fn(parser.parse(x))\n            })\n    };\n}\n/**\n * @template {(string)[]} T\n *\n * @param {TemplateStringsArray} strings\n * @param {T} keys\n */ function $ef4119ef3a0ad5e7$var$tpl(strings, ...keys) {\n    /**\n\t * @param {string} input\n\t * @returns {{[P in T[number] as import(\"./types.js\").TemplateKey<P>]: import(\"./types.js\").TemplateValue<P> }}\n\t */ function parseInternal(input) {\n        /** @type {Record<string, any>} */ const model = {};\n        let lastIndex = 0;\n        for(let i = 0; i < keys.length; i++){\n            const start = strings[i].length + lastIndex;\n            const end = strings[i + 1] ? input.indexOf(strings[i + 1], start) : input.length;\n            const strVal = input.slice(start, end);\n            const [key, type] = keys[i].split(\"|\");\n            model[key] = $ef4119ef3a0ad5e7$var$parse(strVal, type);\n            lastIndex = end;\n        }\n        return /** @type {any} */ model;\n    }\n    return $ef4119ef3a0ad5e7$var$mappableParser({\n        parse: parseInternal\n    });\n}\n/**\n * @template {string} K\n * @template T\n *\n * @param {K} name\n * @param {Parser<T>} parser\n * @returns {NamedParser<K, T>}\n */ function $ef4119ef3a0ad5e7$var$named(name, parser) {\n    return {\n        ...parser,\n        name: name\n    };\n}\n/**\n * @template {string} K\n * @template T\n *\n * @typedef {object} NamedParser\n *\n * @property {(strVal: string) => T} parse\n * @property {K} name\n */ /**\n * @template {NamedParser<any, any>[]} T\n *\n * @param {TemplateStringsArray} strings\n * @param  {T} keys\n */ function $ef4119ef3a0ad5e7$var$tpl2(strings, ...keys) {\n    /**\n\t * @param {string} input\n\t * @returns {{[P in T[number] as P['name']]: ReturnType<P['parse']> }}\n\t */ function parseInternal(input) {\n        /** @type {Record<string, any>} */ const model = {};\n        let lastIndex = 0;\n        for(let i = 0; i < keys.length; i++){\n            const start = strings[i].length + lastIndex;\n            const end = strings[i + 1] ? input.indexOf(strings[i + 1], start) : input.length;\n            const strVal = input.slice(start, end);\n            const namedParser = keys[i];\n            model[namedParser.name] = namedParser.parse(strVal);\n            lastIndex = end;\n        }\n        return /** @type {any} */ model;\n    }\n    return $ef4119ef3a0ad5e7$var$mappableParser({\n        parse: parseInternal\n    });\n}\nconst $ef4119ef3a0ad5e7$export$625550452a3fa3ec = {\n    ...$ef4119ef3a0ad5e7$var$commonTypes,\n    named: $ef4119ef3a0ad5e7$var$named,\n    tpl: $ef4119ef3a0ad5e7$var$tpl,\n    tpl2: $ef4119ef3a0ad5e7$var$tpl2\n};\n\n});\n\n// @ts-check\nparcelRequire(\"bICZs\");\n// @ts-check\n\nvar $i4wae = parcelRequire(\"i4wae\");\n\nvar $kxxN7 = parcelRequire(\"kxxN7\");\nconst $8009a9e29e5df3d6$export$c2ab8e3711492050 = false;\nconst $8009a9e29e5df3d6$export$a92a7d01225c1610 = `\\\nRegister A: 2024\nRegister B: 0\nRegister C: 0\n\nProgram: 0,3,5,4,3,0`;\nconst $8009a9e29e5df3d6$export$20bebb8aee8dd3f5 = (0, $kxxN7.t).tpl`\\\nRegister A: ${\"a|int\"}\nRegister B: ${\"b|int\"}\nRegister C: ${\"c|int\"}\n\nProgram: ${\"program|int[]\"}`.parse;\nconst $8009a9e29e5df3d6$export$6df42f4898a1bea9 = {\n    0: ()=>0,\n    1: ()=>1,\n    2: ()=>2,\n    3: ()=>3,\n    4: (p)=>p.a,\n    5: (p)=>p.b,\n    6: (p)=>p.c\n};\nconst $8009a9e29e5df3d6$export$59894c102379d64a = {\n    0: (computer, literal)=>{\n        const operand = $8009a9e29e5df3d6$export$6df42f4898a1bea9[literal](computer);\n        computer.a = Math.floor(computer.a / 2 ** operand);\n        computer.ip += 2;\n    },\n    1: (computer, literal)=>{\n        computer.b = computer.b ^ literal;\n        computer.ip += 2;\n    },\n    2: (computer, literal)=>{\n        const operand = $8009a9e29e5df3d6$export$6df42f4898a1bea9[literal](computer);\n        computer.b = (0, $i4wae.mod)(operand, 8);\n        computer.ip += 2;\n    },\n    3: (computer, literal)=>{\n        computer.ip = computer.a !== 0 ? literal : computer.ip + 2;\n    },\n    4: (computer, literal)=>{\n        computer.b = computer.b ^ computer.c;\n        computer.ip += 2;\n    },\n    5: (computer, literal)=>{\n        const operand = $8009a9e29e5df3d6$export$6df42f4898a1bea9[literal](computer);\n        computer.output.push((0, $i4wae.mod)(operand, 8));\n        computer.ip += 2;\n    },\n    6: (computer, literal)=>{\n        const operand = $8009a9e29e5df3d6$export$6df42f4898a1bea9[literal](computer);\n        computer.b = Math.floor(computer.a / 2 ** operand);\n        computer.ip += 2;\n    },\n    7: (computer, literal)=>{\n        const operand = $8009a9e29e5df3d6$export$6df42f4898a1bea9[literal](computer);\n        computer.c = Math.floor(computer.a / 2 ** operand);\n        computer.ip += 2;\n    }\n};\nfunction $8009a9e29e5df3d6$export$98123a455ed70b91(program, computer) {\n    const operator = program[computer.ip];\n    const literal = program[computer.ip + 1];\n    $8009a9e29e5df3d6$export$59894c102379d64a[operator](computer, literal);\n}\nfunction $8009a9e29e5df3d6$export$6e3fa38cfddb4746({ a: a, b: b, c: c, program: program }) {\n    /** @type {Computer} */ const computer = {\n        ip: 0,\n        a: a,\n        b: b,\n        c: c,\n        output: []\n    };\n    while(computer.ip < program.length)$8009a9e29e5df3d6$export$98123a455ed70b91(program, computer);\n    return computer.output.join(\",\");\n}\nfunction $8009a9e29e5df3d6$export$9fb73bf15c9f3bcd({ b: b, c: c, program: program }) {\n    let a = 0;\n    for(let i = 1; i <= program.length; i++){\n        const tail = program.slice(-i).join(\",\");\n        while(true){\n            /** @type {Computer} */ const computer = {\n                ip: 0,\n                a: a,\n                b: b,\n                c: c,\n                output: []\n            };\n            while(computer.ip < program.length)$8009a9e29e5df3d6$export$98123a455ed70b91(program, computer);\n            if (computer.output.join(\",\") === tail) {\n                if (computer.output.length === program.length) return a;\n                break;\n            }\n            a++;\n        }\n        a *= 8;\n    }\n}\n\n\nparcelRequire(\"3Ru88\");\n\nvar $7zFg5 = parcelRequire(\"7zFg5\");\nconst $baf881f743c6817f$var$canvas = document.getElementById(\"canvas\");\nif (!($baf881f743c6817f$var$canvas instanceof HTMLCanvasElement)) throw new Error(\"no canvas\");\nconst $baf881f743c6817f$var$ctx = $baf881f743c6817f$var$canvas.getContext(\"2d\");\nif (!$baf881f743c6817f$var$ctx) throw new Error(\"no ctx\");\nconst $baf881f743c6817f$var$INIT_WIDTH = 32;\nconst $baf881f743c6817f$var$INIT_HEIGHT = 24;\nconst $baf881f743c6817f$var$INIT_SCALE = 14;\n(0, $7zFg5.scaleCanvasToPixelRatio)($baf881f743c6817f$var$ctx, $baf881f743c6817f$var$INIT_WIDTH * $baf881f743c6817f$var$INIT_SCALE, $baf881f743c6817f$var$INIT_HEIGHT * $baf881f743c6817f$var$INIT_SCALE);\nconst $baf881f743c6817f$var$colors = {\n    green: \"#91cfa1\",\n    red: \"#ea859a\",\n    yellow: \"#fef59d\",\n    blue: \"blue\",\n    black: \"black\",\n    white: \"white\"\n};\nlet $baf881f743c6817f$var$raf = 0;\nlet $baf881f743c6817f$var$unsubscribe = ()=>{};\nconst $baf881f743c6817f$var$popupNode = document.createElement(\"div\");\n$baf881f743c6817f$var$popupNode.style.position = \"fixed\";\n$baf881f743c6817f$var$popupNode.style.zIndex = \"1000\";\n$baf881f743c6817f$var$popupNode.style.pointerEvents = \"none\";\n$baf881f743c6817f$var$popupNode.style.padding = \"5px\";\n$baf881f743c6817f$var$popupNode.style.border = \"1px solid black\";\n$baf881f743c6817f$var$popupNode.style.borderRadius = \"5px\";\n$baf881f743c6817f$var$popupNode.style.backgroundColor = \"white\";\n$baf881f743c6817f$var$popupNode.style.color = \"black\";\n$baf881f743c6817f$var$popupNode.style.display = \"none\";\n$baf881f743c6817f$var$popupNode.style.fontFamily = \"monospace\";\n$baf881f743c6817f$var$popupNode.style.fontSize = \"12px\";\ndocument.body.appendChild($baf881f743c6817f$var$popupNode);\nconst $baf881f743c6817f$var$literalToString = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"A\",\n    5: \"B\",\n    6: \"C\"\n};\nconst $baf881f743c6817f$var$operationToString = (op, literal, computer)=>{\n    if (op === 0) return `A = A / 2^${$baf881f743c6817f$var$literalToString[literal]}`;\n    if (op === 1) return `B = B ^ ${literal}`;\n    if (op === 2) return `B = ${$baf881f743c6817f$var$literalToString[literal]} % 8`;\n    if (op === 3) return `IP = A ? ${literal} : IP + 2`;\n    if (op === 4) return `B = B ^ C`;\n    if (op === 5) return `Out > ${$baf881f743c6817f$var$literalToString[literal]} % 8`;\n    if (op === 6) return `B = A / 2^${$baf881f743c6817f$var$literalToString[literal]}`;\n    if (op === 7) return `C = A / 2^${$baf881f743c6817f$var$literalToString[literal]}`;\n};\nlet $baf881f743c6817f$var$isSimulating = false;\nconst $baf881f743c6817f$var$simulateBtn = document.getElementById(\"simulate\");\nif (!($baf881f743c6817f$var$simulateBtn instanceof HTMLButtonElement)) throw new Error(\"no simulate button\");\nfunction $baf881f743c6817f$var$toggleSimulate() {\n    $baf881f743c6817f$var$isSimulating = !$baf881f743c6817f$var$isSimulating;\n    if (!($baf881f743c6817f$var$simulateBtn instanceof HTMLButtonElement)) throw new Error(\"no simulate button\");\n    $baf881f743c6817f$var$simulateBtn.textContent = $baf881f743c6817f$var$isSimulating ? \"Pause\" : \"Simulate\";\n}\nfunction $baf881f743c6817f$var$stopSimulation() {\n    $baf881f743c6817f$var$isSimulating = false;\n    if (!($baf881f743c6817f$var$simulateBtn instanceof HTMLButtonElement)) throw new Error(\"no simulate button\");\n    $baf881f743c6817f$var$simulateBtn.textContent = \"Done\";\n    $baf881f743c6817f$var$simulateBtn.disabled = true;\n}\n$baf881f743c6817f$var$simulateBtn.addEventListener(\"click\", $baf881f743c6817f$var$toggleSimulate);\nconst $baf881f743c6817f$var$output = document.getElementById(\"output-input\");\nif (!($baf881f743c6817f$var$output instanceof HTMLTextAreaElement)) throw new Error(\"no output\");\nconst $baf881f743c6817f$var$appendOutput = (text)=>{\n    $baf881f743c6817f$var$output.textContent += text + \"\\n\";\n    $baf881f743c6817f$var$output.scrollTop = $baf881f743c6817f$var$output.scrollHeight;\n};\nconst $baf881f743c6817f$var$clearOutput = ()=>{\n    $baf881f743c6817f$var$output.textContent = \"\";\n};\n/**\n * @param {string} input\n * @param {CanvasRenderingContext2D} ctx\n * @param {boolean} part2\n */ function $baf881f743c6817f$var$draw(input, ctx, part2) {\n    cancelAnimationFrame($baf881f743c6817f$var$raf);\n    $baf881f743c6817f$var$unsubscribe();\n    let { a: a, b: b, c: c, program: program } = (0, $8009a9e29e5df3d6$export$20bebb8aee8dd3f5)(input);\n    /** @type {import(\"../../../js/solutions/17.js\").Computer} */ const computer = {\n        a: a,\n        b: b,\n        c: c,\n        ip: 0,\n        output: []\n    };\n    const scale = 14;\n    let width = 32;\n    let height = Math.max(24, program.length + 8);\n    (0, $7zFg5.scaleCanvasToPixelRatio)(ctx, width * scale, height * scale);\n    ctx.canvas.scrollIntoView({\n        behavior: \"smooth\"\n    });\n    const drawText = (x, y, text, color)=>{\n        ctx.font = `${scale}px monospace`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = color;\n        ctx.fillText(text, x * scale + scale / 2, y * scale + scale / 2 + scale / 10);\n    };\n    let hoveredX = -1;\n    let hoveredY = -1;\n    const drawPopup = (x, y, text)=>{\n        $baf881f743c6817f$var$popupNode.textContent = text;\n        $baf881f743c6817f$var$popupNode.style.left = `${x}px`;\n        $baf881f743c6817f$var$popupNode.style.top = `${y - 30}px`;\n        $baf881f743c6817f$var$popupNode.style.display = \"block\";\n    };\n    const hidePopup = ()=>{\n        $baf881f743c6817f$var$popupNode.style.display = \"none\";\n    };\n    function renderText(x, y, text, color = $baf881f743c6817f$var$colors.black) {\n        text.split(\"\").forEach((ch, i)=>drawText(x + i, y, ch, color));\n    }\n    function renderComputerState(x, y, color = $baf881f743c6817f$var$colors.black) {\n        renderText(x, y, `A : ${computer.a}`, color);\n        renderText(x, y + 1, `B : ${computer.b}`, color);\n        renderText(x, y + 2, `C : ${computer.c}`, color);\n        renderText(x, y + 3, `IP: ${computer.ip}`, color);\n        renderText(x, y + 4, `Out: ${computer.output.join(\",\")}`, color);\n    }\n    const cx = 2;\n    function renderProgram(x, y, color = $baf881f743c6817f$var$colors.black) {\n        for(let i = 0; i < program.length; i++){\n            const op = program[i];\n            renderText(x, y + i, `${op}`, i === computer.ip ? $baf881f743c6817f$var$colors.green : i === computer.ip + 1 ? $baf881f743c6817f$var$colors.red : color);\n        }\n    }\n    function renderIP(x, y, color = $baf881f743c6817f$var$colors.black) {\n        renderText(x - 1, y + computer.ip, \"\\u25B8\", color);\n    }\n    function renderOperations(x, y, color = $baf881f743c6817f$var$colors.blue) {\n        for(let i = 0; i < program.length; i += 2){\n            const op = program[i];\n            const literal = program[i + 1];\n            renderText(x + 2, y + i, $baf881f743c6817f$var$operationToString(op, literal, computer), color);\n        }\n    }\n    function render() {\n        ctx.fillStyle = $baf881f743c6817f$var$colors.white;\n        ctx.fillRect(0, 0, width * scale, height * scale);\n        // draw grid\n        ctx.strokeStyle = \"lightgray\";\n        ctx.lineWidth = 1;\n        for(let y = 0; y < height; y++)for(let x = 0; x < width; x++)ctx.strokeRect(x * scale, y * scale, scale, scale);\n        renderComputerState(1, 1);\n        renderProgram(cx, 7);\n        renderIP(cx, 7);\n        renderOperations(cx, 7);\n    }\n    render();\n    function handleMouseOver(e) {\n        const x = Math.floor(e.offsetX / scale);\n        const y = Math.floor(e.offsetY / scale);\n        hoveredX = x;\n        hoveredY = y;\n    }\n    if ($baf881f743c6817f$var$canvas) {\n        $baf881f743c6817f$var$canvas.addEventListener(\"mousemove\", handleMouseOver);\n        $baf881f743c6817f$var$unsubscribe = ()=>$baf881f743c6817f$var$canvas.removeEventListener(\"mousemove\", handleMouseOver);\n    }\n    let i = 0;\n    function step() {\n        if (computer.ip >= program.length) {\n            $baf881f743c6817f$var$stopSimulation();\n            return;\n        }\n        (0, $8009a9e29e5df3d6$export$98123a455ed70b91)(program, computer);\n        $baf881f743c6817f$var$appendOutput(\"--------------------\");\n        $baf881f743c6817f$var$appendOutput(`Step ${i++}`);\n        $baf881f743c6817f$var$appendOutput(`A: ${computer.a}`);\n        $baf881f743c6817f$var$appendOutput(`B: ${computer.b}`);\n        $baf881f743c6817f$var$appendOutput(`C: ${computer.c}`);\n        $baf881f743c6817f$var$appendOutput(`IP: ${computer.ip}`);\n        $baf881f743c6817f$var$appendOutput(`Output: ${computer.output.join(\",\")}`);\n        $baf881f743c6817f$var$appendOutput(\"--------------------\");\n        $baf881f743c6817f$var$appendOutput(\"\");\n    }\n    let lastDt = 0;\n    $baf881f743c6817f$var$raf = requestAnimationFrame(function loop(dt) {\n        if (!$baf881f743c6817f$var$isSimulating) {\n            lastDt = dt;\n            $baf881f743c6817f$var$raf = requestAnimationFrame(loop);\n            return;\n        }\n        if (dt - lastDt > 1000) {\n            lastDt = dt;\n            step();\n            render();\n        }\n        $baf881f743c6817f$var$raf = requestAnimationFrame(loop);\n    });\n}\nconst $baf881f743c6817f$var$inputForm = document.getElementById(\"input-form\");\nif (!($baf881f743c6817f$var$inputForm instanceof HTMLFormElement)) throw new Error(\"no form\");\nlet $baf881f743c6817f$var$lastInput = \"\";\n$baf881f743c6817f$var$inputForm.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    const formData = new FormData(this);\n    const input = formData.get(\"input\")?.toString() ?? \"\";\n    $baf881f743c6817f$var$lastInput = input;\n    $baf881f743c6817f$var$draw(input.trim(), $baf881f743c6817f$var$ctx, formData.get(\"part2\")?.toString() === \"on\");\n    if (!($baf881f743c6817f$var$simulateBtn instanceof HTMLButtonElement)) throw new Error(\"no simulate button\");\n    $baf881f743c6817f$var$simulateBtn.disabled = false;\n    $baf881f743c6817f$var$clearOutput();\n});\n// @ts-ignore\n$baf881f743c6817f$var$inputForm.querySelector(\"#input\").textContent = `\\\nRegister A: 21539243\nRegister B: 0\nRegister C: 0\n\nProgram: 2,4,1,3,7,5,1,5,0,3,4,1,5,5,3,0`;\n\n\n//# sourceMappingURL=index.696de443.js.map\n","// @ts-check\n\nimport { V, V3 } from \"./index.js\"\n\n/**\n * @param {string} strVal\n */\nfunction tryGetSeparator(strVal) {\n\tconst separators = [\"\\n\\n\", \"\\n\", \" -> \", \", \", \",\", \" - \", \" \", \"-\"]\n\tfor (const separator of separators) {\n\t\tif (strVal.includes(separator)) {\n\t\t\treturn separator\n\t\t}\n\t}\n\treturn null\n}\n\n/**\n * @template T\n *\n * @typedef {Object} ParserRegistryItem\n * @property {(input: string) => boolean} check\n * @property {(input: string, key?: string) => T} parse\n *\n */\n\n/**\n * @template {ParserRegistryItem<unknown>} T\n *\n * @typedef {T & {withSeparator: (separator: string) => T}} WithSeparator\n */\n\n/**\n * @template {Record<string, ParserRegistryItem<unknown>>} T\n *\n * @param {T} parsers\n * @returns {T}\n */\nfunction registerParsers(parsers) {\n\treturn parsers\n}\n\nconst PARSERS = registerParsers({\n\tint: /** @type {const} */ ({\n\t\tname: \"int\",\n\t\tcheck: (key) => key === \"int\",\n\t\tparse: (strVal) => parseInt(strVal, 10),\n\t}),\n\tstr: /** @type {const} */ ({\n\t\tname: \"str\",\n\t\tcheck: (key) => key === \"str\",\n\t\tparse: (strVal) => strVal,\n\t}),\n\tvec: /** @type {const} */ ({\n\t\tname: \"vec\",\n\t\tcheck: (key) => key === \"vec\",\n\t\tparse: (strVal) => {\n\t\t\tconst separator = tryGetSeparator(strVal)\n\t\t\tif (!separator) {\n\t\t\t\tthrow new Error(`Invalid vec: ${strVal}`)\n\t\t\t}\n\t\t\tconst [x, y] = strVal.split(separator).map(Number)\n\t\t\treturn V.vec(x, y)\n\t\t},\n\t}),\n\tvec3: /** @type {const} */ ({\n\t\tname: \"vec3\",\n\t\tcheck: (key) => key === \"vec3\",\n\t\tparse: (strVal) => {\n\t\t\tconst separator = tryGetSeparator(strVal)\n\t\t\tif (!separator) {\n\t\t\t\tthrow new Error(`Invalid vec3: ${strVal}`)\n\t\t\t}\n\t\t\tconst [x, y, z] = strVal.split(separator).map(Number)\n\t\t\treturn V3.vec3(x, y, z)\n\t\t},\n\t}),\n\tarr: /** @type {const} */ ({\n\t\tname: \"arr\",\n\t\tcheck: (key) => key.endsWith(\"[]\"),\n\t\tparse: (strVal, key = \"\") => {\n\t\t\tconst type = key.slice(0, -2)\n\t\t\tconst parser = getParserByType(type)\n\t\t\tif (!parser) {\n\t\t\t\tthrow new Error(`Invalid array type \"${type}\" in \"${key}\"`)\n\t\t\t}\n\t\t\tconst separator = tryGetSeparator(strVal) ?? \",\"\n\t\t\treturn strVal\n\t\t\t\t.split(separator)\n\t\t\t\t.filter((x) => x !== \"\")\n\t\t\t\t.map((x) => parser.parse(x.trim(), type))\n\t\t},\n\t}),\n\ttuple: /** @type {const} */ ({\n\t\tname: \"tuple\",\n\t\tcheck: (key) => key.startsWith(\"(\") && key.endsWith(\")\"),\n\t\tparse: (strVal, key = \"\") => {\n\t\t\tconst types = key.slice(1, -1).split(\",\")\n\t\t\tconst separator = tryGetSeparator(strVal) ?? \",\"\n\t\t\treturn strVal.split(separator).map((x, i) => {\n\t\t\t\tconst parser = getParserByType(types[i])\n\t\t\t\tif (!parser) {\n\t\t\t\t\tthrow new Error(`Invalid tuple type \"${types[i]}\" in \"${key}\"`)\n\t\t\t\t}\n\t\t\t\treturn parser.parse(x, types[i])\n\t\t\t})\n\t\t},\n\t}),\n})\n\n/**\n * @param {string} type\n * @returns {ParserRegistryItem<unknown> | null}\n */\nfunction getParserByType(type) {\n\tfor (const key in PARSERS) {\n\t\tif (PARSERS[/** @type {keyof typeof PARSERS} */ (key)].check(type)) {\n\t\t\treturn PARSERS[/** @type {keyof typeof PARSERS} */ (key)]\n\t\t}\n\t}\n\treturn null\n}\n\n/**\n * @template T\n *\n * @param {string} strVal\n * @param {string} type\n * @returns {T}\n */\nfunction parse(strVal, type) {\n\tconst parser = getParserByType(type)\n\tif (!parser) {\n\t\tthrow new Error(`Invalid type \"${type}\"`)\n\t}\n\treturn /** @type {T} */ (parser.parse(strVal, type))\n}\n\n/**\n * @template T\n *\n * @typedef {Object} Parser\n * @property {(strVal: string) => T} parse\n */\n\nconst commonTypes = {\n\tint: () => mappableParser(PARSERS.int),\n\n\tstr: () => mappableParser(PARSERS.str),\n\n\tvec: () => mappableParser(PARSERS.vec),\n\n\tvec3: () => mappableParser(PARSERS.vec3),\n\n\t/**\n\t * @template T\n\t *\n\t * @param {Parser<T>} type\n\t * @param {string | RegExp} [separator]\n\t */\n\tarr: (type, separator) =>\n\t\tmappableParser({\n\t\t\tparse: (strVal) => {\n\t\t\t\treturn strVal\n\t\t\t\t\t.split(separator ?? tryGetSeparator(strVal) ?? \",\")\n\t\t\t\t\t.map((x) => x.trim())\n\t\t\t\t\t.filter((x) => x !== \"\")\n\t\t\t\t\t.map((x) => type.parse(x))\n\t\t\t},\n\t\t}),\n\n\t/**\n\t * @template {Parser<unknown>[]} T\n\t *\n\t * @param {import(\"ts-toolbelt\").F.Narrow<T>} types\n\t * @param {string} [separator]\n\t */\n\ttuple: (types, separator) =>\n\t\tmappableParser({\n\t\t\t/**\n\t\t\t * @param {string} strVal\n\t\t\t * @returns {{[K in keyof T]: T[K] extends Parser<infer U> ? U : never}}\n\t\t\t */\n\t\t\tparse: (strVal) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn strVal\n\t\t\t\t\t.split(separator ?? tryGetSeparator(strVal) ?? \",\")\n\t\t\t\t\t.map((x, i) => types[i].parse(x))\n\t\t\t},\n\t\t}),\n\n\t/**\n\t * @template {readonly string[]} T\n\t *\n\t * @param {T} values\n\t */\n\tenum: (...values) =>\n\t\tmappableParser({\n\t\t\t/**\n\t\t\t * @param {string} strVal\n\t\t\t * @returns {T[number]}\n\t\t\t */\n\t\t\tparse: (strVal) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (!values.includes(strVal)) {\n\t\t\t\t\tthrow new Error(`Invalid enum value \"${strVal}\"`)\n\t\t\t\t}\n\t\t\t\treturn strVal\n\t\t\t},\n\t\t}),\n}\n\n/**\n * @template T\n * @param {Parser<T>} parser\n */\nfunction mappableParser(parser) {\n\treturn {\n\t\t...parser,\n\t\t/**\n\t\t * @template U\n\t\t * @param {(val: T) => U} fn\n\t\t */\n\t\tmap: (fn) => mappableParser({ ...parser, parse: (x) => fn(parser.parse(x)) }),\n\t}\n}\n\n/**\n * @template {(string)[]} T\n *\n * @param {TemplateStringsArray} strings\n * @param {T} keys\n */\nfunction tpl(strings, ...keys) {\n\t/**\n\t * @param {string} input\n\t * @returns {{[P in T[number] as import(\"./types.js\").TemplateKey<P>]: import(\"./types.js\").TemplateValue<P> }}\n\t */\n\tfunction parseInternal(input) {\n\t\t/** @type {Record<string, any>} */\n\t\tconst model = {}\n\t\tlet lastIndex = 0\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst start = strings[i].length + lastIndex\n\t\t\tconst end = strings[i + 1] ? input.indexOf(strings[i + 1], start) : input.length\n\t\t\tconst strVal = input.slice(start, end)\n\t\t\tconst [key, type] = keys[i].split(\"|\")\n\t\t\tmodel[key] = parse(strVal, type)\n\t\t\tlastIndex = end\n\t\t}\n\t\treturn /** @type {any} */ (model)\n\t}\n\n\treturn mappableParser({ parse: parseInternal })\n}\n\n/**\n * @template {string} K\n * @template T\n *\n * @param {K} name\n * @param {Parser<T>} parser\n * @returns {NamedParser<K, T>}\n */\nfunction named(name, parser) {\n\treturn {\n\t\t...parser,\n\t\tname,\n\t}\n}\n\n/**\n * @template {string} K\n * @template T\n *\n * @typedef {object} NamedParser\n *\n * @property {(strVal: string) => T} parse\n * @property {K} name\n */\n\n/**\n * @template {NamedParser<any, any>[]} T\n *\n * @param {TemplateStringsArray} strings\n * @param  {T} keys\n */\nfunction tpl2(strings, ...keys) {\n\t/**\n\t * @param {string} input\n\t * @returns {{[P in T[number] as P['name']]: ReturnType<P['parse']> }}\n\t */\n\tfunction parseInternal(input) {\n\t\t/** @type {Record<string, any>} */\n\t\tconst model = {}\n\t\tlet lastIndex = 0\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst start = strings[i].length + lastIndex\n\t\t\tconst end = strings[i + 1] ? input.indexOf(strings[i + 1], start) : input.length\n\t\t\tconst strVal = input.slice(start, end)\n\t\t\tconst namedParser = keys[i]\n\t\t\tmodel[namedParser.name] = namedParser.parse(strVal)\n\t\t\tlastIndex = end\n\t\t}\n\t\treturn /** @type {any} */ (model)\n\t}\n\n\treturn mappableParser({ parse: parseInternal })\n}\n\nexport const t = {\n\t...commonTypes,\n\tnamed,\n\ttpl,\n\ttpl2,\n}\n","// @ts-check\nimport \"../../../js/modules/iterator-extensions.js\"\nimport { parseInput, executeInstruction } from \"../../../js/solutions/17.js\"\nimport { Array2d, V } from \"../../../js/modules/index.js\"\nimport { scaleCanvasToPixelRatio } from \"../common.js\"\n\nconst canvas = document.getElementById(\"canvas\")\nif (!(canvas instanceof HTMLCanvasElement)) throw new Error(\"no canvas\")\n\nconst ctx = canvas.getContext(\"2d\")\nif (!ctx) throw new Error(\"no ctx\")\n\nconst INIT_WIDTH = 32\nconst INIT_HEIGHT = 24\nconst INIT_SCALE = 14\n\nscaleCanvasToPixelRatio(ctx, INIT_WIDTH * INIT_SCALE, INIT_HEIGHT * INIT_SCALE)\n\nconst colors = {\n\tgreen: \"#91cfa1\",\n\tred: \"#ea859a\",\n\tyellow: \"#fef59d\",\n\tblue: \"blue\",\n\tblack: \"black\",\n\twhite: \"white\",\n}\n\nlet raf = 0\nlet unsubscribe = () => {}\n\nconst popupNode = document.createElement(\"div\")\npopupNode.style.position = \"fixed\"\npopupNode.style.zIndex = \"1000\"\npopupNode.style.pointerEvents = \"none\"\npopupNode.style.padding = \"5px\"\npopupNode.style.border = \"1px solid black\"\npopupNode.style.borderRadius = \"5px\"\npopupNode.style.backgroundColor = \"white\"\npopupNode.style.color = \"black\"\npopupNode.style.display = \"none\"\npopupNode.style.fontFamily = \"monospace\"\npopupNode.style.fontSize = \"12px\"\n\ndocument.body.appendChild(popupNode)\n\nconst literalToString = {\n\t0: \"0\",\n\t1: \"1\",\n\t2: \"2\",\n\t3: \"3\",\n\t4: \"A\",\n\t5: \"B\",\n\t6: \"C\",\n}\n\nconst operationToString = (op, literal, computer) => {\n\tif (op === 0) {\n\t\treturn `A = A / 2^${literalToString[literal]}`\n\t}\n\tif (op === 1) {\n\t\treturn `B = B ^ ${literal}`\n\t}\n\tif (op === 2) {\n\t\treturn `B = ${literalToString[literal]} % 8`\n\t}\n\tif (op === 3) {\n\t\treturn `IP = A ? ${literal} : IP + 2`\n\t}\n\tif (op === 4) {\n\t\treturn `B = B ^ C`\n\t}\n\tif (op === 5) {\n\t\treturn `Out > ${literalToString[literal]} % 8`\n\t}\n\tif (op === 6) {\n\t\treturn `B = A / 2^${literalToString[literal]}`\n\t}\n\tif (op === 7) {\n\t\treturn `C = A / 2^${literalToString[literal]}`\n\t}\n}\n\nlet isSimulating = false\n\nconst simulateBtn = document.getElementById(\"simulate\")\nif (!(simulateBtn instanceof HTMLButtonElement)) throw new Error(\"no simulate button\")\n\nfunction toggleSimulate() {\n\tisSimulating = !isSimulating\n\tif (!(simulateBtn instanceof HTMLButtonElement)) throw new Error(\"no simulate button\")\n\tsimulateBtn.textContent = isSimulating ? \"Pause\" : \"Simulate\"\n}\n\nfunction stopSimulation() {\n\tisSimulating = false\n\tif (!(simulateBtn instanceof HTMLButtonElement)) throw new Error(\"no simulate button\")\n\tsimulateBtn.textContent = \"Done\"\n\tsimulateBtn.disabled = true\n}\n\nsimulateBtn.addEventListener(\"click\", toggleSimulate)\n\nconst output = document.getElementById(\"output-input\")\nif (!(output instanceof HTMLTextAreaElement)) throw new Error(\"no output\")\n\nconst appendOutput = (text) => {\n\toutput.textContent += text + \"\\n\"\n\n\toutput.scrollTop = output.scrollHeight\n}\n\nconst clearOutput = () => {\n\toutput.textContent = \"\"\n}\n\n/**\n * @param {string} input\n * @param {CanvasRenderingContext2D} ctx\n * @param {boolean} part2\n */\nfunction draw(input, ctx, part2) {\n\tcancelAnimationFrame(raf)\n\tunsubscribe()\n\n\tlet { a, b, c, program } = parseInput(input)\n\t/** @type {import(\"../../../js/solutions/17.js\").Computer} */\n\tconst computer = {\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tip: 0,\n\t\toutput: [],\n\t}\n\n\tconst scale = 14\n\n\tlet width = 32\n\tlet height = Math.max(24, program.length + 8)\n\n\tscaleCanvasToPixelRatio(ctx, width * scale, height * scale)\n\n\tctx.canvas.scrollIntoView({ behavior: \"smooth\" })\n\n\tconst drawText = (x, y, text, color) => {\n\t\tctx.font = `${scale}px monospace`\n\t\tctx.textAlign = \"center\"\n\t\tctx.textBaseline = \"middle\"\n\t\tctx.fillStyle = color\n\t\tctx.fillText(text, x * scale + scale / 2, y * scale + scale / 2 + scale / 10)\n\t}\n\n\tlet hoveredX = -1\n\tlet hoveredY = -1\n\n\tconst drawPopup = (x, y, text) => {\n\t\tpopupNode.textContent = text\n\t\tpopupNode.style.left = `${x}px`\n\t\tpopupNode.style.top = `${y - 30}px`\n\t\tpopupNode.style.display = \"block\"\n\t}\n\n\tconst hidePopup = () => {\n\t\tpopupNode.style.display = \"none\"\n\t}\n\n\tfunction renderText(x, y, text, color = colors.black) {\n\t\ttext.split(\"\").forEach((ch, i) => drawText(x + i, y, ch, color))\n\t}\n\n\tfunction renderComputerState(x, y, color = colors.black) {\n\t\trenderText(x, y, `A : ${computer.a}`, color)\n\t\trenderText(x, y + 1, `B : ${computer.b}`, color)\n\t\trenderText(x, y + 2, `C : ${computer.c}`, color)\n\t\trenderText(x, y + 3, `IP: ${computer.ip}`, color)\n\t\trenderText(x, y + 4, `Out: ${computer.output.join(\",\")}`, color)\n\t}\n\n\tconst cx = 2\n\n\tfunction renderProgram(x, y, color = colors.black) {\n\t\tfor (let i = 0; i < program.length; i++) {\n\t\t\tconst op = program[i]\n\t\t\trenderText(\n\t\t\t\tx,\n\t\t\t\ty + i,\n\t\t\t\t`${op}`,\n\t\t\t\ti === computer.ip ? colors.green : i === computer.ip + 1 ? colors.red : color,\n\t\t\t)\n\t\t}\n\t}\n\n\tfunction renderIP(x, y, color = colors.black) {\n\t\trenderText(x - 1, y + computer.ip, \"▸\", color)\n\t}\n\n\tfunction renderOperations(x, y, color = colors.blue) {\n\t\tfor (let i = 0; i < program.length; i += 2) {\n\t\t\tconst op = program[i]\n\t\t\tconst literal = program[i + 1]\n\t\t\trenderText(x + 2, y + i, operationToString(op, literal, computer), color)\n\t\t}\n\t}\n\n\tfunction render() {\n\t\tctx.fillStyle = colors.white\n\t\tctx.fillRect(0, 0, width * scale, height * scale)\n\n\t\t// draw grid\n\t\tctx.strokeStyle = \"lightgray\"\n\t\tctx.lineWidth = 1\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tctx.strokeRect(x * scale, y * scale, scale, scale)\n\t\t\t}\n\t\t}\n\n\t\trenderComputerState(1, 1)\n\t\trenderProgram(cx, 7)\n\t\trenderIP(cx, 7)\n\t\trenderOperations(cx, 7)\n\t}\n\n\trender()\n\n\tfunction handleMouseOver(e) {\n\t\tconst x = Math.floor(e.offsetX / scale)\n\t\tconst y = Math.floor(e.offsetY / scale)\n\t\thoveredX = x\n\t\thoveredY = y\n\t}\n\n\tif (canvas) {\n\t\tcanvas.addEventListener(\"mousemove\", handleMouseOver)\n\t\tunsubscribe = () => canvas.removeEventListener(\"mousemove\", handleMouseOver)\n\t}\n\n\tlet i = 0\n\tfunction step() {\n\t\tif (computer.ip >= program.length) {\n\t\t\tstopSimulation()\n\t\t\treturn\n\t\t}\n\t\texecuteInstruction(program, computer)\n\n\t\tappendOutput(\"--------------------\")\n\t\tappendOutput(`Step ${i++}`)\n\t\tappendOutput(`A: ${computer.a}`)\n\t\tappendOutput(`B: ${computer.b}`)\n\t\tappendOutput(`C: ${computer.c}`)\n\t\tappendOutput(`IP: ${computer.ip}`)\n\t\tappendOutput(`Output: ${computer.output.join(\",\")}`)\n\t\tappendOutput(\"--------------------\")\n\t\tappendOutput(\"\")\n\t}\n\n\tlet lastDt = 0\n\traf = requestAnimationFrame(function loop(dt) {\n\t\tif (!isSimulating) {\n\t\t\tlastDt = dt\n\t\t\traf = requestAnimationFrame(loop)\n\t\t\treturn\n\t\t}\n\n\t\tif (dt - lastDt > 1000) {\n\t\t\tlastDt = dt\n\t\t\tstep()\n\t\t\trender()\n\t\t}\n\n\t\traf = requestAnimationFrame(loop)\n\t})\n}\n\nconst inputForm = document.getElementById(\"input-form\")\nif (!(inputForm instanceof HTMLFormElement)) throw new Error(\"no form\")\n\nlet lastInput = \"\"\n\ninputForm.addEventListener(\"submit\", function (e) {\n\te.preventDefault()\n\tconst formData = new FormData(this)\n\tconst input = formData.get(\"input\")?.toString() ?? \"\"\n\n\tlastInput = input\n\n\tdraw(input.trim(), ctx, formData.get(\"part2\")?.toString() === \"on\")\n\n\tif (!(simulateBtn instanceof HTMLButtonElement)) throw new Error(\"no simulate button\")\n\tsimulateBtn.disabled = false\n\n\tclearOutput()\n})\n\n// @ts-ignore\ninputForm.querySelector(\"#input\").textContent = `\\\nRegister A: 21539243\nRegister B: 0\nRegister C: 0\n\nProgram: 2,4,1,3,7,5,1,5,0,3,4,1,5,5,3,0`\n","// @ts-check\n\nimport { mod } from \"../modules/lib.js\"\nimport { t } from \"../modules/parser.js\"\n\nexport const useExample = false\n\nexport const exampleInput = `\\\nRegister A: 2024\nRegister B: 0\nRegister C: 0\n\nProgram: 0,3,5,4,3,0`\n\n/** @typedef {ReturnType<typeof parseInput>} InputType */\n\nexport const parseInput = t.tpl`\\\nRegister A: ${\"a|int\"}\nRegister B: ${\"b|int\"}\nRegister C: ${\"c|int\"}\n\nProgram: ${\"program|int[]\"}`.parse\n\n/**\n * @typedef {Object} Computer\n * @property {number} ip\n * @property {number} a\n * @property {number} b\n * @property {number} c\n * @property {number[]} output\n */\n\n/**\n * @type {Record<number, (p: Computer) => number>}\n */\nexport const operands = {\n\t0: () => 0,\n\t1: () => 1,\n\t2: () => 2,\n\t3: () => 3,\n\t4: (p) => p.a,\n\t5: (p) => p.b,\n\t6: (p) => p.c,\n}\n\n/**\n * @type {Record<number, (computer: Computer, literal: number) => void>}\n */\nexport const operations = {\n\t0: (computer, literal) => {\n\t\tconst operand = operands[literal](computer)\n\t\tcomputer.a = Math.floor(computer.a / 2 ** operand)\n\t\tcomputer.ip += 2\n\t},\n\t1: (computer, literal) => {\n\t\tcomputer.b = computer.b ^ literal\n\t\tcomputer.ip += 2\n\t},\n\t2: (computer, literal) => {\n\t\tconst operand = operands[literal](computer)\n\t\tcomputer.b = mod(operand, 8)\n\t\tcomputer.ip += 2\n\t},\n\t3: (computer, literal) => {\n\t\tcomputer.ip = computer.a !== 0 ? literal : computer.ip + 2\n\t},\n\t4: (computer, literal) => {\n\t\tcomputer.b = computer.b ^ computer.c\n\t\tcomputer.ip += 2\n\t},\n\t5: (computer, literal) => {\n\t\tconst operand = operands[literal](computer)\n\t\tcomputer.output.push(mod(operand, 8))\n\t\tcomputer.ip += 2\n\t},\n\t6: (computer, literal) => {\n\t\tconst operand = operands[literal](computer)\n\t\tcomputer.b = Math.floor(computer.a / 2 ** operand)\n\t\tcomputer.ip += 2\n\t},\n\t7: (computer, literal) => {\n\t\tconst operand = operands[literal](computer)\n\t\tcomputer.c = Math.floor(computer.a / 2 ** operand)\n\t\tcomputer.ip += 2\n\t},\n}\n\n/**\n * @param {number[]} program\n * @param {Computer} computer\n */\nexport function executeInstruction(program, computer) {\n\tconst operator = program[computer.ip]\n\tconst literal = program[computer.ip + 1]\n\n\toperations[operator](computer, literal)\n}\n\n/**\n * @param {InputType} input\n */\nexport function part1({ a, b, c, program }) {\n\t/** @type {Computer} */\n\tconst computer = { ip: 0, a, b, c, output: [] }\n\n\twhile (computer.ip < program.length) {\n\t\texecuteInstruction(program, computer)\n\t}\n\n\treturn computer.output.join(\",\")\n}\n\n/**\n * This solution specific to the input\n * @param {InputType} input\n */\nexport function part2({ b, c, program }) {\n\tlet a = 0\n\n\tfor (let i = 1; i <= program.length; i++) {\n\t\tconst tail = program.slice(-i).join(\",\")\n\n\t\twhile (true) {\n\t\t\t/** @type {Computer} */\n\t\t\tconst computer = { ip: 0, a, b, c, output: [] }\n\n\t\t\twhile (computer.ip < program.length) {\n\t\t\t\texecuteInstruction(program, computer)\n\t\t\t}\n\n\t\t\tif (computer.output.join(\",\") === tail) {\n\t\t\t\tif (computer.output.length === program.length) {\n\t\t\t\t\treturn a\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\ta++\n\t\t}\n\n\t\ta *= 8\n\t}\n}\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$ef4119ef3a0ad5e7$export$625550452a3fa3ec","set","s","enumerable","configurable","$3Ru88","$ef4119ef3a0ad5e7$var$tryGetSeparator","strVal","separator","includes","$ef4119ef3a0ad5e7$var$PARSERS","int","name","check","key","parse","parseInt","str","vec","x","y","split","map","Number","V","vec3","z","V3","arr","endsWith","type","slice","parser","$ef4119ef3a0ad5e7$var$getParserByType","filter","trim","tuple","startsWith","types","i","$ef4119ef3a0ad5e7$var$mappableParser","fn","enum","values","named","tpl","strings","keys","input","model","lastIndex","length","start","end","indexOf","$ef4119ef3a0ad5e7$var$parse","tpl2","namedParser","$i4wae","$kxxN7","$8009a9e29e5df3d6$export$20bebb8aee8dd3f5","t","$8009a9e29e5df3d6$export$6df42f4898a1bea9","p","a","b","c","$8009a9e29e5df3d6$export$59894c102379d64a","computer","literal","operand","Math","floor","ip","mod","output","push","$7zFg5","$baf881f743c6817f$var$canvas","document","getElementById","HTMLCanvasElement","$baf881f743c6817f$var$ctx","getContext","scaleCanvasToPixelRatio","$baf881f743c6817f$var$INIT_WIDTH","$baf881f743c6817f$var$INIT_HEIGHT","$baf881f743c6817f$var$colors","green","red","blue","black","white","$baf881f743c6817f$var$raf","$baf881f743c6817f$var$unsubscribe","$baf881f743c6817f$var$popupNode","createElement","style","position","zIndex","pointerEvents","padding","border","borderRadius","backgroundColor","color","display","fontFamily","fontSize","body","appendChild","$baf881f743c6817f$var$literalToString","$baf881f743c6817f$var$operationToString","op","$baf881f743c6817f$var$isSimulating","$baf881f743c6817f$var$simulateBtn","HTMLButtonElement","addEventListener","textContent","$baf881f743c6817f$var$output","HTMLTextAreaElement","$baf881f743c6817f$var$appendOutput","text","scrollTop","scrollHeight","$baf881f743c6817f$var$clearOutput","$baf881f743c6817f$var$inputForm","HTMLFormElement","e","preventDefault","formData","FormData","$baf881f743c6817f$var$draw","ctx","part2","cancelAnimationFrame","program","height","max","width","canvas","scrollIntoView","behavior","drawText","font","textAlign","textBaseline","fillStyle","fillText","scale","renderText","forEach","ch","render","fillRect","strokeStyle","lineWidth","strokeRect","renderComputerState","join","renderProgram","renderIP","renderOperations","handleMouseOver","offsetX","offsetY","removeEventListener","lastDt","requestAnimationFrame","loop","dt","step","$baf881f743c6817f$var$stopSimulation","disabled","operator","toString","querySelector"],"version":3,"file":"index.696de443.js.map"}